(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{"./appsdk/components/editors/texteditor/codeCompletion-providers/suggestionsMapper.js":function(e,t,n){"use strict";n.r(t),function(e){function r(t,n,r){return t.map((t=>{let a="",i=r.variablesCache.getOverridingVariable(t);Boolean(i)&&(a=`This variable exists in both ${i.scope} and ${t.scope} scopes. ${e.capitalize(i.scope)} variables overwrite ${t.scope} variables.`);let o={environment:"a",collection:"b",global:"c"}[t.scope]||"y";if(e.isEqual(t.type,"dynamic"))return o="z",{label:t.name,detail:`Details: ${e.toString(t.value)}`,documentation:`Scope: ${e.capitalize(t.scope)}\n\n${a}`,insertText:t.name,range:n,sortText:`${o}-${t.name}`};if(e.isEqual(t.type,"secret")){const r=e.reduce(t.sessionValue,(e=>e.concat(String.fromCharCode(9679))),""),i=e.reduce(e.toString(t.value),(e=>e.concat(String.fromCharCode(9679))),"");return{label:t.name,detail:`Current: ${r}`,documentation:`Initial: ${i} \nScope: ${e.capitalize(t.scope)}\n\n${a}`,insertText:t.name,range:n,sortText:`${o}-${t.name}`}}return{label:t.name,detail:`Current: ${t.sessionValue}`,documentation:`Initial: ${e.toString(t.value)} \nScope: ${e.capitalize(t.scope)}\n\n${a}`,insertText:t.name,range:n,sortText:`${o}-${t.name}`}}))}n.d(t,"suggestionsMapper",(function(){return r}))}.call(this,n("./node_modules/lodash/lodash.js"))},"./appsdk/components/editors/texteditor/codeCompletion-providers/variableCodeCompletion-provider.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return a}));var r=n("./appsdk/components/editors/texteditor/codeCompletion-providers/suggestionsMapper.js");function a(t,n){let a=new RegExp(/pm.(environment|globals|collectionVariables|variables).(((get|set|unset|has)\(('|").*))$/),i=t.getWordBeforePosition(n),o=t.getLineContent(n.lineNumber);o&&(o=o.substring(0,n.column-1));let s=[],l=a.exec(o);if(!l||l.length<6)return[];let c=l[1],u=this.context.variablesCache.getActiveVariables(),d=[],h={globals:"global",environment:"environment",collectionVariables:"collection"};if("variables"===c)d=e.filter(u,(t=>e.includes(e.toLower(t.name),i.word)));else if(h[c]){let t=h[c];d=e.filter(u,(n=>n.scope===t&&!e.isEqual(n.type,"dynamic")&&e.includes(e.toLower(n.name),i.word)))}let p={startLineNumber:n.lineNumber,endLineNumber:n.lineNumber,startColumn:i.startColumn,endColumn:i.endColumn};return s=Object(r.suggestionsMapper)(d,p,this.context),s}}.call(this,n("./node_modules/lodash/lodash.js"))},"./documentation/components/DocumentationIntersectionObserver/index.js":function(e,t,n){"use strict";n.r(t);var r=n("./documentation/components/DocumentationIntersectionObserver/DocumentationIntersectionObserver.js");n.d(t,"IntersectionObserverContext",(function(){return r.IntersectionObserverContext})),n.d(t,"useIntersectionObserver",(function(){return r.useIntersectionObserver})),t.default=r.default},"./growth/activation/common/ActivationOnboardingPopover.js":function(e,t,n){"use strict";n.r(t);var r=n("../../node_modules/@postman/aether/esmLib/index.js"),a=n("./node_modules/prop-types/index.js"),i=n.n(a),o=n("../../node_modules/react/index.js"),s=n.n(o),l=n("../../node_modules/styled-components/dist/styled-components.browser.esm.js");const c=Object(l.default)(r.Popover)`
  .tippy-content {
    background-color: ${e=>"dark"===e.theme.name?"var(--blue-20)":"var(--blue-80)"} !important;
    color: ${e=>"dark"===e.theme.name?"var(--grey-90)":"var(--grey-00)"};
    padding: var(--spacing-xl);
  }
  .tippy-svg-arrow {
    svg > path {
      fill: ${e=>"dark"===e.theme.name?"var(--blue-20)":"var(--blue-80)"} !important;
    }
  }
  position: relative;
`,u=Object(l.default)(r.Heading)`
  color: ${e=>"dark"===e.theme.name?"var(--grey-90)":"var(--grey-00)"};
  user-select: none;
`,d=Object(l.default)(r.Text)`
  display: block;
  margin-top: var(--spacing-s);
  user-select: none;
`,h=Object(l.default)(r.Button)`
  margin-top: var(--spacing-xl);
`,p=Object(l.default)(r.Button)`
  position: absolute;
  top: var(--spacing-xl);
  right: var(--spacing-l);
`;function m(e){return s.a.createElement(c,{triggerRef:e.target,placement:e.placement,isOpen:e.isOpen,onClickOutside:e.hidePopover,pointer:!0},s.a.createElement(u,{type:"h3",text:e.title}),s.a.createElement(d,{type:"body-medium"},e.description),s.a.createElement(h,{type:"primary",size:"medium",text:e.dismissCopy,onClick:t=>{t&&t.stopPropagation(),e.onDismiss()}}),e.showCloseButton&&s.a.createElement(p,{type:"secondary",icon:s.a.createElement(r.IconActionCloseStroke,null),onClick:t=>{t&&t.stopPropagation(),e.onClose()}}))}m.propTypes={target:i.a.element,onDismiss:i.a.func.isRequired,title:i.a.string.isRequired,description:i.a.string.isRequired,placement:i.a.string.isRequired,showCloseButton:i.a.bool,onClose:i.a.func,hidePopover:i.a.func},m.defaultProps={dismissCopy:"Got it",showCloseButton:!1,hidePopover:()=>{}},t.default=m},"./growth/activation/common/GrowthActivationHelper.js":function(e,t,n){"use strict";n.r(t),n.d(t,"activationHelper",(function(){return d}));var r,a,i,o,s,l=n("../../node_modules/mobx/lib/mobx.module.js");function c(e,t,n,r){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(r):void 0})}function u(e,t,n,r,a){var i={};return Object.keys(r).forEach((function(e){i[e]=r[e]})),i.enumerable=!!i.enumerable,i.configurable=!!i.configurable,("value"in i||i.initializer)&&(i.writable=!0),i=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),i),a&&void 0!==i.initializer&&(i.value=i.initializer?i.initializer.call(a):void 0,i.initializer=void 0),void 0===i.initializer&&(Object.defineProperty(e,t,i),i=null),i}const d=new(r=l.action.bound,i=u((a=class{constructor(){c(this,"workspaceSwitcher",i,this),c(this,"activationWorkspacePopover",o,this),c(this,"showWorkspaceOnboardingModal",s,this)}update(e,t){this[e]=t}}).prototype,"workspaceSwitcher",[l.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{badgeDismissed:!0,popoverDismissed:!0}}}),o=u(a.prototype,"activationWorkspacePopover",[l.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),s=u(a.prototype,"showWorkspaceOnboardingModal",[l.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),u(a.prototype,"update",[r],Object.getOwnPropertyDescriptor(a.prototype,"update"),a.prototype),a)},"./growth/activation/constants/WorkspacePopoverConstants.js":function(e,t,n){"use strict";n.r(t),n.d(t,"SHARE_BUTTON_POPOVER",(function(){return r})),n.d(t,"WORKSPACE_SWITCHER_POPOVER",(function(){return a}));const r="sharePopover",a="workspaceSwitcher"},"./js/components/base/InfoButton.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return d}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/@postman/aether/esmLib/index.js"),o=n("./js/components/base/Tooltips.js"),s=n("./node_modules/classnames/index.js"),l=n.n(s),c=n("./node_modules/prop-types/index.js"),u=n.n(c);class d extends r.Component{constructor(e){super(e),this.state={isTooltipVisible:!1},this.showTooltip=this.showTooltip.bind(this),this.hideTooltip=this.hideTooltip.bind(this)}showTooltip(e=this.state.isTooltipVisible){this.setState({isTooltipVisible:!0})}hideTooltip(e){this.setState({isTooltipVisible:!1})}getButtonContainerClasses(e){return l()({"info-button":!0,error:"error"===e})}getTooltipClasses(){return l()({"runner-runs-selector__postfix-tooltip":!0},this.props.className)}render(){return a.a.createElement("div",{className:this.getButtonContainerClasses(this.props.type)},a.a.createElement("div",{className:"info-button__icon",ref:"tooltipTarget",onMouseOver:this.showTooltip,onMouseOut:this.hideTooltip},a.a.createElement(i.Icon,{name:"icon-state-info-stroke",size:this.props.iconSize,color:"content-color-secondary"})),a.a.createElement(o.Tooltip,{show:this.state.isTooltipVisible,target:this.refs.tooltipTarget,placement:this.props.tooltipPlacement,className:this.getTooltipClasses(),immediate:!0},a.a.createElement(o.TooltipBody,null,this.props.tooltip)))}}d.propTypes={tooltip:u.a.node},d.defaultProps={tooltip:"Here is more info",type:"warning",tooltipPlacement:"right",iconSize:"small"}},"./js/components/base/PasswordInput.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return f}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("./node_modules/classnames/index.js"),o=n.n(i),s=n("./js/components/base/Inputs.js"),l=n("./js/components/base/AutoSuggest/AutoSuggestInput.js"),c=n("./js/components/base/Buttons.js"),u=n("./node_modules/prop-types/index.js"),d=n.n(u),h=n("../../node_modules/@postman/aether/esmLib/index.js");const p=["className"];function m(){return m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},m.apply(this,arguments)}class f extends r.Component{constructor(e){super(e),this.state={masked:!0,error:"",warning:""},this.handleToggle=this.handleToggle.bind(this)}UNSAFE_componentWillReceiveProps(e){this.handleValidationState(e)}handleToggle(){this.setState({masked:!this.state.masked})}handleValidationState(e){const{validation:t,value:n}=e;if(t){let r,a;for(let i=0;i<t.length;i++){const{validator:o,message:s,type:l}=t[i]||{};if("function"==typeof o&&!o(n,e)){r=l,a=s;break}}if(r)return this.state[r]!==a&&this.setState({[r]:a})}this.setState({error:"",warning:""})}getValidationIcon(){return this.state.error?a.a.createElement(c.Button,{type:"icon",className:"password-input__error-btn",tooltip:this.state.error},a.a.createElement(h.Icon,{name:"icon-state-error-stroke",size:"small"})):this.state.warning?a.a.createElement(c.Button,{type:"icon",className:"password-input__warning-btn",tooltip:this.state.warning},a.a.createElement(h.Icon,{name:"icon-state-warning-stroke",size:"small"})):void 0}getPasswordInput(e){return this.props.enableVariableSuggestions?this.state.masked?a.a.createElement(s.Input,m({},e,{type:"password"})):a.a.createElement(l.AutoSuggestInput,m({},e,{enableVariableSuggestions:!0,type:"text"})):a.a.createElement(s.Input,m({},e,{type:this.state.masked?"password":"text"}))}render(){let e=this.props,{className:t}=e,n=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,p);return a.a.createElement("div",{className:o()("password-input",t)},this.getPasswordInput(n),a.a.createElement("div",{className:"password-input-message"},this.getValidationIcon()),a.a.createElement("div",{className:"password-input__toggle",onClick:this.handleToggle},this.state.masked?a.a.createElement(h.Icon,{name:"icon-action-hide-stroke",title:"Show"}):a.a.createElement(h.Icon,{name:"icon-action-view-stroke",title:"Hide"})))}}f.propTypes={className:d.a.string,inputStyle:d.a.oneOf(["box","line"]),size:d.a.oneOf(["huge"]),enableVariableSuggestions:d.a.bool,validation:d.a.arrayOf(d.a.shape({validator:d.a.func.isRequired,message:d.a.string,type:d.a.oneOf(["error","warning"])}))},f.defaultProps={enableVariableSuggestions:!1}},"./js/components/network/NetworkTrouble.js":function(e,t,n){"use strict";n.r(t);var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/@postman/aether/esmLib/index.js"),o=n("./js/stores/ConnectionModeStore.js"),s=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),l=n("./js/modules/services/AnalyticsService.js");const c="Unable to load data",u="We are trying to establish a connection with our servers. Your data may not be up to date until you’re connected.",d=Object(s.observer)((({title:e=c,description:t=u,origin:n,entity:r})=>{a.a.useEffect((()=>{l.default.addEventV2({category:"network_trouble",action:"show_trouble_connecting",label:`${r}-${n}`,entity:r})}),[]);const s=o.default.isPollingEnabledForAllAppLoads;return a.a.createElement(i.BlankState,{title:e,description:t,primaryAction:s&&a.a.createElement(i.Button,{type:"outline",text:"Retry Connecting",isLoading:o.default.isConnecting,onClick:()=>{pm.syncManager&&pm.syncManager._forceConnect(),l.default.addEventV2({category:"network_trouble",action:"force_retry_connecting",label:`${r}-${n}`,entity:r})}})},a.a.createElement(i.IllustrationCheckInternetConnection,null))}));t.default=d},"./js/modules/services/DBResourceWatcher.js":function(e,t,n){"use strict";n.r(t),function(e){var r=n("./node_modules/uuid/v4.js"),a=n.n(r),i=n("./js/modules/model-event.js"),o=n("./runtime-repl/_common/ModelConstant.js");const s={created:"onCreated",updated:"onChanged",deleted:"onDeleted"};t.default=new class{constructor(){this.watchers=new Map,this.modelMap=new Map,this.watchableModels=new Set([o.COLLECTION,o.FOLDER,o.REQUEST,o.RESPONSE,o.ENVIRONMENT,o.GLOBALS,o.SESSION,o.AUTH_SESSION]),this._unsubscribeFromEventBus=null}getWatchersCount(){return this.watchers.size}subscribeToEventBus(){this._unsubscribeFromEventBus||(this._unsubscribeFromEventBus=pm.eventBus.channel("model-events").subscribe((t=>{Object(i.processEvent)(t,["created","updated","deleted"],((n,r)=>{let a,o,l=Object(i.getEventNamespace)(n),c=Object(i.getEventName)(n),u=Object(i.getEventData)(n),d=s[c];return u?(a=`${l}:${u.id}`,o=this.modelMap.get(a),o?(o.forEach((n=>{let r=this.watchers.get(n);r&&r.listenerCallbacks&&r.listenerCallbacks[d]&&r.listenerCallbacks[d](u,e.get(t,"meta.actor.type"))})),void r()):r()):r()}),e.noop)})))}watch(t,n){if(!t||!n)return;let r,i,o;if(t instanceof URL)r=t.pathname||t.host,i=t.searchParams?t.searchParams.get("id"):t.query.id,o=t.searchParams?t.searchParams.has("create"):!e.isNil(t.query.create);else{if(!e.isObject(t))return void pm.logger.warn("DBResourceWatcher~watch: Incorrect type of resourceUri");r=t.model,i=t.modelId,o=t.isCreating}if(o)return;if(!r||!i)return void pm.logger.warn("DBResourceWatcher~watch: model or modelId not found");r.startsWith("//")&&(r=r.slice(2));let s=a()(),l=`${r}:${i}`;if(!this.watchableModels.has(r))return;this.watchers.set(s,{modelIdentifier:l,listenerCallbacks:n});let c=this.modelMap.get(l)||new Set;return c.add(s),this.modelMap.set(`${r}:${i}`,c),s}unwatch(e,t){if(!t)return;let n=this.watchers.get(t),r=this.modelMap.get(n.modelIdentifier);this.watchers.delete(t),r&&(r.delete(t),0===r.size&&this.modelMap.delete(n.modelIdentifier))}reset(){this.watchers.clear(),this.modelMap.clear()}}}.call(this,n("./node_modules/lodash/lodash.js"))},"./js/utils/configurationsUtil.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"getFolderInheritedState",(function(){return l})),n.d(t,"getCollectionInheritedState",(function(){return c})),n.d(t,"navigateToParent",(function(){return u}));var r=n("./runtime-repl/folder/_api/FolderInterface.js"),a=n("./runtime-repl/collection/_api/CollectionInterface.js"),i=n("./runtime-repl/request-http/ConfigurationConstants.js"),o=n("./js/constants/SettingsTypeConstants.js"),s=n("./runtime-repl/_common/ModelConstant.js");n("./js/services/NavigationService.js");function l(t,n,r){if(e.isEmpty(t)||e.isEmpty(n))return null;let a=e.get(t,"folders",[]),o={},s={};return e.forEach(i.CONFIGURATIONS,(l=>{let c,u=null;for("edit"===r?c=e.get(e.find(a,["id",n]),"folder"):"add"===r&&(c=n);c;){o=e.find(a,["id",c]);let t=e.get(o,"protocolProfileBehavior");if(e.has(t,[l.id])){u={parent:{id:o.id,type:"folder",name:o.name,uid:o.uid,parentCollectionUID:o.parentCollectionUID},value:e.get(t,[l.id])};break}c=e.get(o,"folder")}!e.has(u,"parent")&&e.has(t,["protocolProfileBehavior",[l.id]])&&(u={parent:{id:t.id,type:"collection",name:t.name,uid:t.uid},value:e.get(t,["protocolProfileBehavior",[l.id]])}),e.has(u,"parent")||(l.base===i.BASE.COLLECTION?u={parent:{id:t.id,type:"collection",name:t.name,uid:t.uid},value:l.defaultValue}:l.base===i.BASE.GLOBAL&&(u={parent:{type:"global",name:"Settings"},value:pm.settings.getSetting(i.CONFIGURATION_MAP[l.id])})),e.set(s,[l.id],u)})),s}function c(){return e.reduce(i.CONFIGURATIONS,((t,n)=>{let r=null;return n.base===i.BASE.GLOBAL&&(r={parent:{type:"global",name:"Settings"},value:pm.settings.getSetting(i.CONFIGURATION_MAP[n.id])}),e.set(t,[n.id],r),t}),{})}function u({type:e,uid:t,parentCollectionUID:n}){switch(e){case s.FOLDER:return Object(r.openFolderInTab)(t,n);case s.COLLECTION:return Object(a.openCollectionInTab)(t);case"global":pm.mediator.trigger("openSettingsModal",o.SETTINGS_GENERAL)}}}.call(this,n("./node_modules/lodash/lodash.js"))},"./node_modules/@postman/script-examples/db.json":function(e){e.exports=JSON.parse('[{"id":"get-env-var","name":"Get an environment variable","description":"Gets an environment variable","code":"pm.environment.get(\\"variable_key\\");","validity":["prerequest","test"]},{"id":"get-global-var","name":"Get a global variable","description":"Gets a global variable","code":"pm.globals.get(\\"variable_key\\");","validity":["prerequest","test"]},{"id":"get-var","name":"Get a variable","description":"Gets a variable (environment or global)","code":"pm.variables.get(\\"variable_key\\");","validity":["prerequest","test"]},{"id":"get-collection-var","name":"Get a collection variable","description":"Gets a collection variable","code":"pm.collectionVariables.get(\\"variable_key\\");","validity":["prerequest","test"]},{"id":"set-env-var","name":"Set an environment variable","description":"Sets an environment variable","code":"pm.environment.set(\\"variable_key\\", \\"variable_value\\");","validity":["prerequest","test"]},{"id":"set-global-var","name":"Set a global variable","description":"Sets a global variable","code":"pm.globals.set(\\"variable_key\\", \\"variable_value\\");","validity":["prerequest","test"]},{"id":"set-collection-var","name":"Set a collection variable","description":"Sets a collection variable","code":"pm.collectionVariables.set(\\"variable_key\\", \\"variable_value\\");","validity":["prerequest","test"]},{"id":"clear-env-var","name":"Clear an environment variable","description":"Clears an environment variable if set","code":"pm.environment.unset(\\"variable_key\\");","validity":["prerequest","test"]},{"id":"clear-global-var","name":"Clear a global variable","description":"Clears a global variable if set","code":"pm.globals.unset(\\"variable_key\\");","validity":["prerequest","test"]},{"id":"clear-collection-var","name":"Clear a collection variable","description":"Clears a collection variable if set","code":"pm.collectionVariables.unset(\\"variable_key\\");","validity":["prerequest","test"]},{"id":"send-request","name":"Send a request","description":"Sends a request","code":"pm.sendRequest(\\"https://postman-echo.com/get\\", function (err, response) {\\n    console.log(response.json());\\n});","validity":["prerequest","test"]},{"id":"test-response-status-code","name":"Status code: Code is 200","description":"Write a basic status code check","code":"pm.test(\\"Status code is 200\\", function () {\\n    pm.response.to.have.status(200);\\n});","validity":["test"]},{"id":"test-response-body-sub-string","name":"Response body: Contains string","description":"Write a basic string check in response body","code":"pm.test(\\"Body matches string\\", function () {\\n    pm.expect(pm.response.text()).to.include(\\"string_you_want_to_search\\");\\n});","validity":["test"]},{"id":"test-response-body-json","name":"Response body: JSON value check","description":"Write a basic json value check","code":"pm.test(\\"Your test name\\", function () {\\n    var jsonData = pm.response.json();\\n    pm.expect(jsonData.value).to.eql(100);\\n});","validity":["test"]},{"id":"test-response-body-string","name":"Response body: Is equal to a string","description":"Write a response body string check","code":"pm.test(\\"Body is correct\\", function () {\\n    pm.response.to.have.body(\\"response_body_string\\");\\n});","validity":["test"]},{"id":"test-response-headers","name":"Response headers: Content-Type header check","description":"Write a basic response header check","code":"pm.test(\\"Content-Type is present\\", function () {\\n    pm.response.to.have.header(\\"Content-Type\\");\\n});","validity":["test"]},{"id":"test-response-time","name":"Response time is less than 200ms","description":"Write a basic response time check","code":"pm.test(\\"Response time is less than 200ms\\", function () {\\n    pm.expect(pm.response.responseTime).to.be.below(200);\\n});","validity":["test"]},{"id":"test-response-status-code-post","name":"Status code: Successful POST request","description":"Check for successful POST request","code":"pm.test(\\"Successful POST request\\", function () {\\n    pm.expect(pm.response.code).to.be.oneOf([201,202]);\\n});","validity":["test"]},{"id":"test-response-status-name","name":"Status code: Code name has string","description":"Write a basic response code string check","code":"pm.test(\\"Status code name has string\\", function () {\\n    pm.response.to.have.status(\\"Created\\");\\n});","validity":["test"]},{"id":"convert-response-xml-json","name":"Response body: Convert XML body to a JSON Object","description":"Convert response body from JSON to XML","code":"var jsonObject = xml2Json(responseBody);","validity":["test"]},{"id":"tv4-validate-json","name":"Use Tiny Validator for JSON data","description":"Validate response against a schema with Tiny Validator","code":"var schema = {\\n  \\"items\\": {\\n    \\"type\\": \\"boolean\\"\\n  }\\n};\\n\\nvar data1 = [true, false];\\nvar data2 = [true, 123];\\n\\npm.test(\'Schema is valid\', function() {\\n  pm.expect(tv4.validate(data1, schema)).to.be.true;\\n  pm.expect(tv4.validate(data2, schema)).to.be.true;\\n});","validity":["test"]}]')},"./node_modules/@postman/script-examples/index.js":function(e,t,n){var r=n("./node_modules/@postman/script-examples/db.json"),a=["prerequest","test"];e.exports={getExamples:function(e){if(!e||!a.includes(e))throw new Error("Invalid event type");return r.reduce((function(t,n){return n.validity&&n.validity.includes(e)&&t.push(function(e){return{name:e.name,description:e.description,code:e.code}}(n)),t}),[])}}},"./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/chai/index.d.ts":function(e,t,n){"use strict";n.r(t),t.default="// Type definitions for chai 4.2\n// Project: http://chaijs.com/\n// Definitions by: Jed Mao <https://github.com/jedmao>,\n//                 Bart van der Schoor <https://github.com/Bartvds>,\n//                 Andrew Brown <https://github.com/AGBrown>,\n//                 Olivier Chevet <https://github.com/olivr70>,\n//                 Matt Wistrand <https://github.com/mwistrand>,\n//                 Josh Goldberg <https://github.com/joshuakgoldberg>,\n//                 Shaun Luttin <https://github.com/shaunluttin>,\n//                 Gintautas Miselis <https://github.com/Naktibalda>,\n//                 Satana Charuwichitratana <https://github.com/micksatana>,\n//                 Erik Schierboom <https://github.com/ErikSchierboom>,\n//                 Bogdan Paranytsia <https://github.com/bparan>,\n//                 CXuesong <https://github.com/CXuesong>,\n//                 Joey Kilpatrick <https://github.com/joeykilpatrick>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 3.0\n\ndeclare namespace Chai {\n    type Message = string | (() => string);\n    type ObjectProperty = string | symbol | number;\n\n    interface PathInfo {\n        parent: object;\n        name: string;\n        value?: any;\n        exists: boolean;\n    }\n\n    interface ErrorConstructor {\n        new(...args: any[]): Error;\n    }\n\n    interface ChaiUtils {\n        addChainableMethod(\n            // object to define the method on, e.g. chai.Assertion.prototype\n            ctx: object,\n            // method name\n            name: string,\n            // method itself; any arguments\n            method: (...args: any[]) => void,\n            // called when property is accessed\n            chainingBehavior?: () => void\n        ): void;\n        overwriteChainableMethod(\n            ctx: object,\n            name: string,\n            method: (...args: any[]) => void,\n            chainingBehavior?: () => void\n        ): void;\n        addLengthGuard(\n            fn: Function,\n            assertionName: string,\n            isChainable: boolean\n        ): void;\n        addMethod(ctx: object, name: string, method: Function): void;\n        addProperty(ctx: object, name: string, getter: () => any): void;\n        overwriteMethod(ctx: object, name: string, method: Function): void;\n        overwriteProperty(ctx: object, name: string, getter: () => any): void;\n        compareByInspect(a: object, b: object): -1 | 1;\n        expectTypes(obj: object, types: string[]): void;\n        flag(obj: object, key: string, value?: any): any;\n        getActual(obj: object, args: AssertionArgs): any;\n        getProperties(obj: object): string[];\n        getEnumerableProperties(obj: object): string[];\n        getOwnEnumerablePropertySymbols(obj: object): symbol[];\n        getOwnEnumerableProperties(obj: object): Array<string | symbol>;\n        getMessage(errorLike: Error | string): string;\n        getMessage(obj: any, args: AssertionArgs): string;\n        inspect(obj: any, showHidden?: boolean, depth?: number, colors?: boolean): string;\n        isProxyEnabled(): boolean;\n        objDisplay(obj: object): void;\n        proxify(obj: object, nonChainableMethodName: string): object;\n        test(obj: object, args: AssertionArgs): boolean;\n        transferFlags(assertion: Assertion, obj: object, includeAll?: boolean): void;\n        compatibleInstance(thrown: Error, errorLike: Error | ErrorConstructor): boolean;\n        compatibleConstructor(thrown: Error, errorLike: Error | ErrorConstructor): boolean;\n        compatibleMessage(thrown: Error, errMatcher: string | RegExp): boolean;\n        getConstructorName(constructorFn: Function): string;\n        getFuncName(constructorFn: Function): string | null;\n\n        // Reexports from pathval:\n        hasProperty(obj: object | undefined | null, name: ObjectProperty): boolean;\n        getPathInfo(obj: object, path: string): PathInfo;\n        getPathValue(obj: object, path: string): object | undefined;\n    }\n\n    type ChaiPlugin = (chai: ChaiStatic, utils: ChaiUtils) => void;\n\n    interface ChaiStatic {\n        expect: ExpectStatic;\n        should(): Should;\n        /**\n         * Provides a way to extend the internals of Chai\n         */\n        use(fn: ChaiPlugin): ChaiStatic;\n        util: ChaiUtils;\n        assert: AssertStatic;\n        config: Config;\n        Assertion: AssertionStatic;\n        AssertionError: typeof AssertionError;\n        version: string;\n    }\n\n    export interface ExpectStatic {\n        (val: any, message?: string): Assertion;\n        fail(message?: string): never;\n        fail(actual: any, expected: any, message?: string, operator?: Operator): never;\n    }\n\n    export interface AssertStatic extends Assert {\n    }\n\n    // chai.Assertion.prototype.assert arguments\n    type AssertionArgs = [\n        // 'expression to be tested'\n        // This parameter is unused and the docs list its type as\n        // 'Philosophical', which is mentioned nowhere else in the source. Do\n        // with that what you will!\n        any,\n        Message, // message if value fails\n        Message, // message if negated value fails\n        any, // expected value\n        any?, // actual value\n        boolean? // showDiff\n    ];\n\n    export interface AssertionPrototype {\n        assert(...args: AssertionArgs): void;\n        _obj: any;\n    }\n\n    export interface AssertionStatic extends AssertionPrototype {\n        prototype: AssertionPrototype;\n\n        new(target: any, message?: string, ssfi?: Function, lockSsfi?: boolean): Assertion;\n\n        // Deprecated properties:\n        includeStack: boolean;\n        showDiff: boolean;\n\n        // Partials of functions on ChaiUtils:\n        addProperty(name: string, getter: (this: AssertionStatic) => any): void;\n        addMethod(name: string, method: (this: AssertionStatic, ...args: any[]) => any): void;\n        addChainableMethod(\n            name: string,\n            method: (this: AssertionStatic, ...args: any[]) => void,\n            chainingBehavior?: () => void\n        ): void;\n        overwriteProperty(name: string, getter: (this: AssertionStatic) => any): void;\n        overwriteMethod(name: string, method: (this: AssertionStatic, ...args: any[]) => any): void;\n        overwriteChainableMethod(\n            name: string,\n            method: (this: AssertionStatic, ...args: any[]) => void,\n            chainingBehavior?: () => void\n        ): void;\n    }\n\n    export type Operator = string; // \"==\" | \"===\" | \">\" | \">=\" | \"<\" | \"<=\" | \"!=\" | \"!==\";\n\n    export type OperatorComparable = boolean | null | number | string | undefined | Date;\n\n    interface ShouldAssertion {\n        equal(value1: any, value2: any, message?: string): void;\n        Throw: ShouldThrow;\n        throw: ShouldThrow;\n        exist(value: any, message?: string): void;\n    }\n\n    interface Should extends ShouldAssertion {\n        not: ShouldAssertion;\n        fail(message?: string): never;\n        fail(actual: any, expected: any, message?: string, operator?: Operator): never;\n    }\n\n    interface ShouldThrow {\n        (actual: Function, expected?: string | RegExp, message?: string): void;\n        (actual: Function, constructor: Error | Function, expected?: string | RegExp, message?: string): void;\n    }\n\n    interface Assertion extends LanguageChains, NumericComparison, TypeComparison {\n        not: Assertion;\n        deep: Deep;\n        ordered: Ordered;\n        nested: Nested;\n        own: Own;\n        any: KeyFilter;\n        all: KeyFilter;\n        a: TypeComparison;\n        an: TypeComparison;\n        include: Include;\n        includes: Include;\n        contain: Include;\n        contains: Include;\n        ok: Assertion;\n        true: Assertion;\n        false: Assertion;\n        null: Assertion;\n        undefined: Assertion;\n        NaN: Assertion;\n        exist: Assertion;\n        empty: Assertion;\n        arguments: Assertion;\n        Arguments: Assertion;\n        equal: Equal;\n        equals: Equal;\n        eq: Equal;\n        eql: Equal;\n        eqls: Equal;\n        property: Property;\n        ownProperty: Property;\n        haveOwnProperty: Property;\n        ownPropertyDescriptor: OwnPropertyDescriptor;\n        haveOwnPropertyDescriptor: OwnPropertyDescriptor;\n        length: Length;\n        lengthOf: Length;\n        match: Match;\n        matches: Match;\n        string(string: string, message?: string): Assertion;\n        keys: Keys;\n        key(string: string): Assertion;\n        throw: Throw;\n        throws: Throw;\n        Throw: Throw;\n        respondTo: RespondTo;\n        respondsTo: RespondTo;\n        itself: Assertion;\n        satisfy: Satisfy;\n        satisfies: Satisfy;\n        closeTo: CloseTo;\n        approximately: CloseTo;\n        members: Members;\n        increase: PropertyChange;\n        increases: PropertyChange;\n        decrease: PropertyChange;\n        decreases: PropertyChange;\n        change: PropertyChange;\n        changes: PropertyChange;\n        extensible: Assertion;\n        sealed: Assertion;\n        frozen: Assertion;\n        oneOf(list: ReadonlyArray<any>, message?: string): Assertion;\n    }\n\n    interface LanguageChains {\n        to: Assertion;\n        be: Assertion;\n        been: Assertion;\n        is: Assertion;\n        that: Assertion;\n        which: Assertion;\n        and: Assertion;\n        has: Assertion;\n        have: Assertion;\n        with: Assertion;\n        at: Assertion;\n        of: Assertion;\n        same: Assertion;\n        but: Assertion;\n        does: Assertion;\n    }\n\n    interface NumericComparison {\n        above: NumberComparer;\n        gt: NumberComparer;\n        greaterThan: NumberComparer;\n        least: NumberComparer;\n        gte: NumberComparer;\n        below: NumberComparer;\n        lt: NumberComparer;\n        lessThan: NumberComparer;\n        most: NumberComparer;\n        lte: NumberComparer;\n        within(start: number, finish: number, message?: string): Assertion;\n        within(start: Date, finish: Date, message?: string): Assertion;\n    }\n\n    interface NumberComparer {\n        (value: number | Date, message?: string): Assertion;\n    }\n\n    interface TypeComparison {\n        (type: string, message?: string): Assertion;\n        instanceof: InstanceOf;\n        instanceOf: InstanceOf;\n    }\n\n    interface InstanceOf {\n        (constructor: any, message?: string): Assertion;\n    }\n\n    interface CloseTo {\n        (expected: number, delta: number, message?: string): Assertion;\n    }\n\n    interface Nested {\n        include: Include;\n        includes: Include;\n        contain: Include;\n        contains: Include;\n        property: Property;\n        members: Members;\n    }\n\n    interface Own {\n        include: Include;\n        includes: Include;\n        contain: Include;\n        contains: Include;\n        property: Property;\n    }\n\n    interface Deep {\n        equal: Equal;\n        equals: Equal;\n        eq: Equal;\n        include: Include;\n        includes: Include;\n        contain: Include;\n        contains: Include;\n        property: Property;\n        members: Members;\n        ordered: Ordered;\n        nested: Nested;\n        own: Own;\n    }\n\n    interface Ordered {\n        members: Members;\n    }\n\n    interface KeyFilter {\n        keys: Keys;\n        members: Members;\n    }\n\n    interface Equal {\n        (value: any, message?: string): Assertion;\n    }\n\n    interface Property {\n        (name: string, value: any, message?: string): Assertion;\n        (name: string, message?: string): Assertion;\n    }\n\n    interface OwnPropertyDescriptor {\n        (name: string, descriptor: PropertyDescriptor, message?: string): Assertion;\n        (name: string, message?: string): Assertion;\n    }\n\n    interface Length extends LanguageChains, NumericComparison {\n        (length: number, message?: string): Assertion;\n    }\n\n    interface Include {\n        (value: any, message?: string): Assertion;\n        keys: Keys;\n        deep: Deep;\n        ordered: Ordered;\n        members: Members;\n        any: KeyFilter;\n        all: KeyFilter;\n    }\n\n    interface Match {\n        (regexp: RegExp, message?: string): Assertion;\n    }\n\n    interface Keys {\n        (...keys: string[]): Assertion;\n        (keys: ReadonlyArray<any> | Object): Assertion;\n    }\n\n    interface Throw {\n        (expected?: string | RegExp, message?: string): Assertion;\n        (constructor: Error | Function, expected?: string | RegExp, message?: string): Assertion;\n    }\n\n    interface RespondTo {\n        (method: string, message?: string): Assertion;\n    }\n\n    interface Satisfy {\n        (matcher: Function, message?: string): Assertion;\n    }\n\n    interface Members {\n        (set: ReadonlyArray<any>, message?: string): Assertion;\n    }\n\n    interface PropertyChange {\n        (object: Object, property?: string, message?: string): Assertion;\n    }\n\n    export interface Assert {\n        /**\n         * @param expression    Expression to test for truthiness.\n         * @param message    Message to display on error.\n         */\n        (expression: any, message?: string): void;\n\n        /**\n         * Throws a failure.\n         *\n         * @param message    Message to display on error.\n         * @remarks Node.js assert module-compatible.\n         */\n        fail(message?: string): never;\n\n        /**\n         * Throws a failure.\n         *\n         * @type T   Type of the objects.\n         * @param actual   Actual value.\n         * @param expected   Potential expected value.\n         * @param message    Message to display on error.\n         * @param operator   Comparison operator, if not strict equality.\n         * @remarks Node.js assert module-compatible.\n         */\n        fail<T>(actual: T, expected: T, message?: string, operator?: Operator): never;\n\n        /**\n         * Asserts that object is truthy.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param message    Message to display on error.\n         */\n        isOk<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that object is truthy.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param message    Message to display on error.\n         */\n        ok<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that object is falsy.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param message    Message to display on error.\n         */\n        isNotOk<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that object is falsy.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param message    Message to display on error.\n         */\n        notOk<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts non-strict equality (==) of actual and expected.\n         *\n         * @type T   Type of the objects.\n         * @param actual   Actual value.\n         * @param expected   Potential expected value.\n         * @param message   Message to display on error.\n         */\n        equal<T>(actual: T, expected: T, message?: string): void;\n\n        /**\n         * Asserts non-strict inequality (==) of actual and expected.\n         *\n         * @type T   Type of the objects.\n         * @param actual   Actual value.\n         * @param expected   Potential expected value.\n         * @param message   Message to display on error.\n         */\n        notEqual<T>(actual: T, expected: T, message?: string): void;\n\n        /**\n         * Asserts strict equality (===) of actual and expected.\n         *\n         * @type T   Type of the objects.\n         * @param actual   Actual value.\n         * @param expected   Potential expected value.\n         * @param message   Message to display on error.\n         */\n        strictEqual<T>(actual: T, expected: T, message?: string): void;\n\n        /**\n         * Asserts strict inequality (==) of actual and expected.\n         *\n         * @type T   Type of the objects.\n         * @param actual   Actual value.\n         * @param expected   Potential expected value.\n         * @param message   Message to display on error.\n         */\n        notStrictEqual<T>(actual: T, expected: T, message?: string): void;\n\n        /**\n         * Asserts that actual is deeply equal (==) to expected.\n         *\n         * @type T   Type of the objects.\n         * @param actual   Actual value.\n         * @param expected   Potential expected value.\n         * @param message   Message to display on error.\n         */\n        deepEqual<T>(actual: T, expected: T, message?: string): void;\n\n        /**\n         * Asserts that actual is not deeply equal (==) to expected.\n         *\n         * @type T   Type of the objects.\n         * @param actual   Actual value.\n         * @param expected   Potential expected value.\n         * @param message   Message to display on error.\n         */\n        notDeepEqual<T>(actual: T, expected: T, message?: string): void;\n\n        /**\n         * Asserts that actual is deeply strict equal (===) to expected.\n         *\n         * @type T   Type of the objects.\n         * @param actual   Actual value.\n         * @param expected   Potential expected value.\n         * @param message   Message to display on error.\n         */\n        deepStrictEqual<T>(actual: T, expected: T, message?: string): void;\n\n        /**\n         * Asserts valueToCheck is strictly greater than (>) valueToBeAbove.\n         *\n         * @param valueToCheck   Actual value.\n         * @param valueToBeAbove   Minimum Potential expected value.\n         * @param message   Message to display on error.\n         */\n        isAbove(valueToCheck: number, valueToBeAbove: number, message?: string): void;\n\n        /**\n         * Asserts valueToCheck is greater than or equal to (>=) valueToBeAtLeast.\n         *\n         * @param valueToCheck   Actual value.\n         * @param valueToBeAtLeast   Minimum Potential expected value.\n         * @param message   Message to display on error.\n         */\n        isAtLeast(valueToCheck: number, valueToBeAtLeast: number, message?: string): void;\n\n        /**\n         * Asserts valueToCheck is strictly less than (<) valueToBeBelow.\n         *\n         * @param valueToCheck   Actual value.\n         * @param valueToBeBelow   Minimum Potential expected value.\n         * @param message   Message to display on error.\n         */\n        isBelow(valueToCheck: number, valueToBeBelow: number, message?: string): void;\n\n        /**\n         * Asserts valueToCheck is less than or equal to (<=) valueToBeAtMost.\n         *\n         * @param valueToCheck   Actual value.\n         * @param valueToBeAtMost   Minimum Potential expected value.\n         * @param message   Message to display on error.\n         */\n        isAtMost(valueToCheck: number, valueToBeAtMost: number, message?: string): void;\n\n        /**\n         * Asserts that value is true.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isTrue<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is false.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isFalse<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is not true.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNotTrue<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is not false.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNotFalse<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is null.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNull<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is not null.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNotNull<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is NaN.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNaN<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is not NaN.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNotNaN<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that the target is neither null nor undefined.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message    Message to display on error.\n         */\n        exists<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that the target is either null or undefined.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message    Message to display on error.\n         */\n        notExists<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is undefined.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isUndefined<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is not undefined.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isDefined<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is a function.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isFunction<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is not a function.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNotFunction<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is an object of type 'Object'\n         * (as revealed by Object.prototype.toString).\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         * @remarks The assertion does not match subclassed objects.\n         */\n        isObject<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is not an object of type 'Object'\n         * (as revealed by Object.prototype.toString).\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNotObject<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is an array.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isArray<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is not an array.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNotArray<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is a string.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isString<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is not a string.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNotString<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is a number.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNumber<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is not a number.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNotNumber<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is a boolean.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isBoolean<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value is not a boolean.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNotBoolean<T>(value: T, message?: string): void;\n\n        /**\n         * Asserts that value's type is name, as determined by Object.prototype.toString.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param name   Potential expected type name of value.\n         * @param message   Message to display on error.\n         */\n        typeOf<T>(value: T, name: string, message?: string): void;\n\n        /**\n         * Asserts that value's type is not name, as determined by Object.prototype.toString.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param name   Potential expected type name of value.\n         * @param message   Message to display on error.\n         */\n        notTypeOf<T>(value: T, name: string, message?: string): void;\n\n        /**\n         * Asserts that value is an instance of constructor.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param constructor   Potential expected contructor of value.\n         * @param message   Message to display on error.\n         */\n        instanceOf<T>(value: T, constructor: Function, message?: string): void;\n\n        /**\n         * Asserts that value is not an instance of constructor.\n         *\n         * @type T   Type of value.\n         * @param value   Actual value.\n         * @param constructor   Potential expected contructor of value.\n         * @param message   Message to display on error.\n         */\n        notInstanceOf<T>(value: T, type: Function, message?: string): void;\n\n        /**\n         * Asserts that haystack includes needle.\n         *\n         * @param haystack   Container string.\n         * @param needle   Potential substring of haystack.\n         * @param message   Message to display on error.\n         */\n        include(haystack: string, needle: string, message?: string): void;\n\n        /**\n         * Asserts that haystack includes needle.\n         *\n         * @type T   Type of values in haystack.\n         * @param haystack   Container array, set or map.\n         * @param needle   Potential value contained in haystack.\n         * @param message   Message to display on error.\n         */\n        include<T>(haystack: ReadonlyArray<T> | ReadonlySet<T> | ReadonlyMap<any, T>, needle: T, message?: string): void;\n\n        /**\n         * Asserts that haystack includes needle.\n         *\n         * @type T   Type of values in haystack.\n         * @param haystack   WeakSet container.\n         * @param needle   Potential value contained in haystack.\n         * @param message   Message to display on error.\n         */\n        include<T extends object>(haystack: WeakSet<T>, needle: T, message?: string): void;\n\n        /**\n         * Asserts that haystack includes needle.\n         *\n         * @type T   Type of haystack.\n         * @param haystack   Object.\n         * @param needle   Potential subset of the haystack's properties.\n         * @param message   Message to display on error.\n         */\n        include<T>(haystack: T, needle: Partial<T>, message?: string): void;\n\n        /**\n         * Asserts that haystack does not includes needle.\n         *\n         * @param haystack   Container string.\n         * @param needle   Potential substring of haystack.\n         * @param message   Message to display on error.\n         */\n        notInclude(haystack: string, needle: string, message?: string): void;\n\n        /**\n         * Asserts that haystack does not includes needle.\n         *\n         * @type T   Type of values in haystack.\n         * @param haystack   Container array, set or map.\n         * @param needle   Potential value contained in haystack.\n         * @param message   Message to display on error.\n         */\n        notInclude<T>(haystack: ReadonlyArray<T> | ReadonlySet<T> | ReadonlyMap<any, T>, needle: T, message?: string): void;\n\n        /**\n         * Asserts that haystack does not includes needle.\n         *\n         * @type T   Type of values in haystack.\n         * @param haystack   WeakSet container.\n         * @param needle   Potential value contained in haystack.\n         * @param message   Message to display on error.\n         */\n        notInclude<T extends object>(haystack: WeakSet<T>, needle: T, message?: string): void;\n\n        /**\n         * Asserts that haystack does not includes needle.\n         *\n         * @type T   Type of haystack.\n         * @param haystack   Object.\n         * @param needle   Potential subset of the haystack's properties.\n         * @param message   Message to display on error.\n         */\n        notInclude<T>(haystack: T, needle: Partial<T>, message?: string): void;\n\n        /**\n         * Asserts that haystack includes needle. Deep equality is used.\n         *\n         * @param haystack   Container string.\n         * @param needle   Potential substring of haystack.\n         * @param message   Message to display on error.\n         *\n         * @deprecated Does not have any effect on string. Use {@link Assert#include} instead.\n         */\n        deepInclude(haystack: string, needle: string, message?: string): void;\n\n        /**\n         * Asserts that haystack includes needle. Deep equality is used.\n         *\n         * @type T   Type of values in haystack.\n         * @param haystack   Container array, set or map.\n         * @param needle   Potential value contained in haystack.\n         * @param message   Message to display on error.\n         */\n        deepInclude<T>(haystack: ReadonlyArray<T> | ReadonlySet<T> | ReadonlyMap<any, T>, needle: T, message?: string): void;\n\n        /**\n         * Asserts that haystack does not includes needle.\n         *\n         * @type T   Type of haystack.\n         * @param haystack   Object.\n         * @param needle   Potential subset of the haystack's properties.\n         * @param message   Message to display on error.\n         */\n        deepInclude<T>(haystack: T, needle: T extends WeakSet<any> ? never : Partial<T>, message?: string): void;\n\n        /**\n         * Asserts that haystack does not includes needle. Deep equality is used.\n         *\n         * @param haystack   Container string.\n         * @param needle   Potential substring of haystack.\n         * @param message   Message to display on error.\n         *\n         * @deprecated Does not have any effect on string. Use {@link Assert#notInclude} instead.\n         */\n        notDeepInclude(haystack: string, needle: string, message?: string): void;\n\n        /**\n         * Asserts that haystack does not includes needle. Deep equality is used.\n         *\n         * @type T   Type of values in haystack.\n         * @param haystack   Container array, set or map.\n         * @param needle   Potential value contained in haystack.\n         * @param message   Message to display on error.\n         */\n        notDeepInclude<T>(haystack: ReadonlyArray<T> | ReadonlySet<T> | ReadonlyMap<any, T>, needle: T, message?: string): void;\n\n        /**\n         * Asserts that haystack does not includes needle. Deep equality is used.\n         *\n         * @type T   Type of haystack.\n         * @param haystack   Object.\n         * @param needle   Potential subset of the haystack's properties.\n         * @param message   Message to display on error.\n         */\n        notDeepInclude<T>(haystack: T, needle: T extends WeakSet<any> ? never : Partial<T>, message?: string): void;\n\n        /**\n         * Asserts that ‘haystack’ includes ‘needle’. Can be used to assert the inclusion of a subset of properties in an object.\n         *\n         * Enables the use of dot- and bracket-notation for referencing nested properties.\n         * ‘[]’ and ‘.’ in property names can be escaped using double backslashes.Asserts that ‘haystack’ includes ‘needle’.\n         * Can be used to assert the inclusion of a subset of properties in an object.\n         * Enables the use of dot- and bracket-notation for referencing nested properties.\n         * ‘[]’ and ‘.’ in property names can be escaped using double backslashes.\n         *\n         * @param haystack\n         * @param needle\n         * @param message   Message to display on error.\n         */\n        nestedInclude(haystack: any, needle: any, message?: string): void;\n\n        /**\n         * Asserts that ‘haystack’ does not include ‘needle’. Can be used to assert the absence of a subset of properties in an object.\n         *\n         * Enables the use of dot- and bracket-notation for referencing nested properties.\n         * ‘[]’ and ‘.’ in property names can be escaped using double backslashes.Asserts that ‘haystack’ includes ‘needle’.\n         * Can be used to assert the inclusion of a subset of properties in an object.\n         * Enables the use of dot- and bracket-notation for referencing nested properties.\n         * ‘[]’ and ‘.’ in property names can be escaped using double backslashes.\n         *\n         * @param haystack\n         * @param needle\n         * @param message   Message to display on error.\n         */\n        notNestedInclude(haystack: any, needle: any, message?: string): void;\n\n        /**\n         * Asserts that ‘haystack’ includes ‘needle’. Can be used to assert the inclusion of a subset of properties in an object while checking for deep equality\n         *\n         * Enables the use of dot- and bracket-notation for referencing nested properties.\n         * ‘[]’ and ‘.’ in property names can be escaped using double backslashes.Asserts that ‘haystack’ includes ‘needle’.\n         * Can be used to assert the inclusion of a subset of properties in an object.\n         * Enables the use of dot- and bracket-notation for referencing nested properties.\n         * ‘[]’ and ‘.’ in property names can be escaped using double backslashes.\n         *\n         * @param haystack\n         * @param needle\n         * @param message   Message to display on error.\n         */\n        deepNestedInclude(haystack: any, needle: any, message?: string): void;\n\n        /**\n         * Asserts that ‘haystack’ does not include ‘needle’. Can be used to assert the absence of a subset of properties in an object while checking for deep equality.\n         *\n         * Enables the use of dot- and bracket-notation for referencing nested properties.\n         * ‘[]’ and ‘.’ in property names can be escaped using double backslashes.Asserts that ‘haystack’ includes ‘needle’.\n         * Can be used to assert the inclusion of a subset of properties in an object.\n         * Enables the use of dot- and bracket-notation for referencing nested properties.\n         * ‘[]’ and ‘.’ in property names can be escaped using double backslashes.\n         *\n         * @param haystack\n         * @param needle\n         * @param message   Message to display on error.\n         */\n        notDeepNestedInclude(haystack: any, needle: any, message?: string): void;\n\n        /**\n         * Asserts that ‘haystack’ includes ‘needle’. Can be used to assert the inclusion of a subset of properties in an object while ignoring inherited properties.\n         *\n         * @param haystack\n         * @param needle\n         * @param message   Message to display on error.\n         */\n        ownInclude(haystack: any, needle: any, message?: string): void;\n\n        /**\n         * Asserts that ‘haystack’ includes ‘needle’. Can be used to assert the absence of a subset of properties in an object while ignoring inherited properties.\n         *\n         * @param haystack\n         * @param needle\n         * @param message   Message to display on error.\n         */\n        notOwnInclude(haystack: any, needle: any, message?: string): void;\n\n        /**\n         * Asserts that ‘haystack’ includes ‘needle’. Can be used to assert the inclusion of a subset of properties in an object while ignoring inherited properties and checking for deep\n         *\n         * @param haystack\n         * @param needle\n         * @param message   Message to display on error.\n         */\n        deepOwnInclude(haystack: any, needle: any, message?: string): void;\n\n        /**\n         * Asserts that ‘haystack’ includes ‘needle’. Can be used to assert the absence of a subset of properties in an object while ignoring inherited properties and checking for deep equality.\n         *\n         * @param haystack\n         * @param needle\n         * @param message   Message to display on error.\n         */\n        notDeepOwnInclude(haystack: any, needle: any, message?: string): void;\n\n        /**\n         * Asserts that value matches the regular expression regexp.\n         *\n         * @param value   Actual value.\n         * @param regexp   Potential match of value.\n         * @param message   Message to display on error.\n         */\n        match(value: string, regexp: RegExp, message?: string): void;\n\n        /**\n         * Asserts that value does not match the regular expression regexp.\n         *\n         * @param value   Actual value.\n         * @param regexp   Potential match of value.\n         * @param message   Message to display on error.\n         */\n        notMatch(expected: any, regexp: RegExp, message?: string): void;\n\n        /**\n         * Asserts that object has a property named by property.\n         *\n         * @type T   Type of object.\n         * @param object   Container object.\n         * @param property   Potential contained property of object.\n         * @param message   Message to display on error.\n         */\n        property<T>(object: T, property: string /* keyof T */, message?: string): void;\n\n        /**\n         * Asserts that object has a property named by property.\n         *\n         * @type T   Type of object.\n         * @param object   Container object.\n         * @param property   Potential contained property of object.\n         * @param message   Message to display on error.\n         */\n        notProperty<T>(object: T, property: string /* keyof T */, message?: string): void;\n\n        /**\n         * Asserts that object has a property named by property, which can be a string\n         * using dot- and bracket-notation for deep reference.\n         *\n         * @type T   Type of object.\n         * @param object   Container object.\n         * @param property   Potential contained property of object.\n         * @param message   Message to display on error.\n         */\n        deepProperty<T>(object: T, property: string, message?: string): void;\n\n        /**\n         * Asserts that object does not have a property named by property, which can be a\n         * string using dot- and bracket-notation for deep reference.\n         *\n         * @type T   Type of object.\n         * @param object   Container object.\n         * @param property   Potential contained property of object.\n         * @param message   Message to display on error.\n         */\n        notDeepProperty<T>(object: T, property: string, message?: string): void;\n\n        /**\n         * Asserts that object has a property named by property with value given by value.\n         *\n         * @type T   Type of object.\n         * @type V   Type of value.\n         * @param object   Container object.\n         * @param property   Potential contained property of object.\n         * @param value   Potential expected property value.\n         * @param message   Message to display on error.\n         */\n        propertyVal<T, V>(object: T, property: string /* keyof T */, value: V, message?: string): void;\n\n        /**\n         * Asserts that object has a property named by property with value given by value.\n         *\n         * @type T   Type of object.\n         * @type V   Type of value.\n         * @param object   Container object.\n         * @param property   Potential contained property of object.\n         * @param value   Potential expected property value.\n         * @param message   Message to display on error.\n         */\n        notPropertyVal<T, V>(object: T, property: string /* keyof T */, value: V, message?: string): void;\n\n        /**\n         * Asserts that object has a property named by property, which can be a string\n         * using dot- and bracket-notation for deep reference.\n         *\n         * @type T   Type of object.\n         * @type V   Type of value.\n         * @param object   Container object.\n         * @param property   Potential contained property of object.\n         * @param value   Potential expected property value.\n         * @param message   Message to display on error.\n         */\n        deepPropertyVal<T, V>(object: T, property: string, value: V, message?: string): void;\n\n        /**\n         * Asserts that object does not have a property named by property, which can be a\n         * string using dot- and bracket-notation for deep reference.\n         *\n         * @type T   Type of object.\n         * @type V   Type of value.\n         * @param object   Container object.\n         * @param property   Potential contained property of object.\n         * @param value   Potential expected property value.\n         * @param message   Message to display on error.\n         */\n        notDeepPropertyVal<T, V>(object: T, property: string, value: V, message?: string): void;\n\n        /**\n         * Asserts that object has a length property with the expected value.\n         *\n         * @type T   Type of object.\n         * @param object   Container object.\n         * @param length   Potential expected length of object.\n         * @param message   Message to display on error.\n         */\n        lengthOf<T extends { readonly length?: number }>(object: T, length: number, message?: string): void;\n\n        /**\n         * Asserts that fn will throw an error.\n         *\n         * @param fn   Function that may throw.\n         * @param message   Message to display on error.\n         */\n        throw(fn: () => void, message?: string): void;\n\n        /**\n         * Asserts that function will throw an error with message matching regexp.\n         *\n         * @param fn   Function that may throw.\n         * @param regExp   Potential expected message match.\n         * @param message   Message to display on error.\n         */\n        throw(fn: () => void, regExp: RegExp): void;\n\n        /**\n         * Asserts that function will throw an error that is an instance of constructor.\n         *\n         * @param fn   Function that may throw.\n         * @param constructor   Potential expected error constructor.\n         * @param message   Message to display on error.\n         */\n        throw(fn: () => void, constructor: ErrorConstructor, message?: string): void;\n\n        /**\n         * Asserts that function will throw an error that is an instance of constructor\n         * and an error with message matching regexp.\n         *\n         * @param fn   Function that may throw.\n         * @param constructor   Potential expected error constructor.\n         * @param message   Message to display on error.\n         */\n        throw(fn: () => void, constructor: ErrorConstructor, regExp: RegExp): void;\n\n        /**\n         * Asserts that fn will throw an error.\n         *\n         * @param fn   Function that may throw.\n         * @param message   Message to display on error.\n         */\n        throws(fn: () => void, message?: string): void;\n\n        /**\n         * Asserts that function will throw an error with message matching regexp.\n         *\n         * @param fn   Function that may throw.\n         * @param errType  Potential expected message match or error constructor.\n         * @param message   Message to display on error.\n         */\n        throws(fn: () => void, errType: RegExp | ErrorConstructor, message?: string): void;\n\n        /**\n         * Asserts that function will throw an error that is an instance of constructor\n         * and an error with message matching regexp.\n         *\n         * @param fn   Function that may throw.\n         * @param constructor   Potential expected error constructor.\n         * @param message   Message to display on error.\n         */\n        throws(fn: () => void, constructor: ErrorConstructor, regExp: RegExp): void;\n\n        /**\n         * Asserts that fn will throw an error.\n         *\n         * @param fn   Function that may throw.\n         * @param message   Message to display on error.\n         */\n        Throw(fn: () => void, message?: string): void;\n\n        /**\n         * Asserts that function will throw an error with message matching regexp.\n         *\n         * @param fn   Function that may throw.\n         * @param regExp   Potential expected message match.\n         * @param message   Message to display on error.\n         */\n        Throw(fn: () => void, regExp: RegExp): void;\n\n        /**\n         * Asserts that function will throw an error that is an instance of constructor.\n         *\n         * @param fn   Function that may throw.\n         * @param constructor   Potential expected error constructor.\n         * @param message   Message to display on error.\n         */\n        Throw(fn: () => void, constructor: ErrorConstructor, message?: string): void;\n\n        /**\n         * Asserts that function will throw an error that is an instance of constructor\n         * and an error with message matching regexp.\n         *\n         * @param fn   Function that may throw.\n         * @param constructor   Potential expected error constructor.\n         * @param message   Message to display on error.\n         */\n        Throw(fn: () => void, constructor: ErrorConstructor, regExp: RegExp): void;\n\n        /**\n         * Asserts that fn will not throw an error.\n         *\n         * @param fn   Function that may throw.\n         * @param message   Message to display on error.\n         */\n        doesNotThrow(fn: () => void, message?: string): void;\n\n        /**\n         * Asserts that function will throw an error with message matching regexp.\n         *\n         * @param fn   Function that may throw.\n         * @param regExp   Potential expected message match.\n         * @param message   Message to display on error.\n         */\n        doesNotThrow(fn: () => void, regExp: RegExp): void;\n\n        /**\n         * Asserts that function will throw an error that is an instance of constructor.\n         *\n         * @param fn   Function that may throw.\n         * @param constructor   Potential expected error constructor.\n         * @param message   Message to display on error.\n         */\n        doesNotThrow(fn: () => void, constructor: ErrorConstructor, message?: string): void;\n\n        /**\n         * Asserts that function will throw an error that is an instance of constructor\n         * and an error with message matching regexp.\n         *\n         * @param fn   Function that may throw.\n         * @param constructor   Potential expected error constructor.\n         * @param message   Message to display on error.\n         */\n        doesNotThrow(fn: () => void, constructor: ErrorConstructor, regExp: RegExp): void;\n\n        /**\n         * Compares two values using operator.\n         *\n         * @param val1   Left value during comparison.\n         * @param operator   Comparison operator.\n         * @param val2   Right value during comparison.\n         * @param message   Message to display on error.\n         */\n        operator(val1: OperatorComparable, operator: Operator, val2: OperatorComparable, message?: string): void;\n\n        /**\n         * Asserts that the target is equal to expected, to within a +/- delta range.\n         *\n         * @param actual   Actual value\n         * @param expected   Potential expected value.\n         * @param delta   Maximum differenced between values.\n         * @param message   Message to display on error.\n         */\n        closeTo(actual: number, expected: number, delta: number, message?: string): void;\n\n        /**\n         * Asserts that the target is equal to expected, to within a +/- delta range.\n         *\n         * @param actual   Actual value\n         * @param expected   Potential expected value.\n         * @param delta   Maximum differenced between values.\n         * @param message   Message to display on error.\n         */\n        approximately(act: number, exp: number, delta: number, message?: string): void;\n\n        /**\n         * Asserts that set1 and set2 have the same members. Order is not take into account.\n         *\n         * @type T   Type of set values.\n         * @param set1   Actual set of values.\n         * @param set2   Potential expected set of values.\n         * @param message   Message to display on error.\n         */\n        sameMembers<T>(set1: T[], set2: T[], message?: string): void;\n\n        /**\n         * Asserts that set1 and set2 have the same members using deep equality checking.\n         * Order is not take into account.\n         *\n         * @type T   Type of set values.\n         * @param set1   Actual set of values.\n         * @param set2   Potential expected set of values.\n         * @param message   Message to display on error.\n         */\n        sameDeepMembers<T>(set1: T[], set2: T[], message?: string): void;\n\n        /**\n         * Asserts that set1 and set2 have the same members in the same order.\n         * Uses a strict equality check (===).\n         *\n         * @type T   Type of set values.\n         * @param set1   Actual set of values.\n         * @param set2   Potential expected set of values.\n         * @param message   Message to display on error.\n         */\n        sameOrderedMembers<T>(set1: T[], set2: T[], message?: string): void;\n\n        /**\n         * Asserts that set1 and set2 don’t have the same members in the same order.\n         * Uses a strict equality check (===).\n         *\n         * @type T   Type of set values.\n         * @param set1   Actual set of values.\n         * @param set2   Potential expected set of values.\n         * @param message   Message to display on error.\n         */\n        notSameOrderedMembers<T>(set1: T[], set2: T[], message?: string): void;\n\n        /**\n         * Asserts that set1 and set2 have the same members in the same order.\n         * Uses a deep equality check.\n         *\n         * @type T   Type of set values.\n         * @param set1   Actual set of values.\n         * @param set2   Potential expected set of values.\n         * @param message   Message to display on error.\n         */\n        sameDeepOrderedMembers<T>(set1: T[], set2: T[], message?: string): void;\n\n        /**\n         * Asserts that set1 and set2 don’t have the same members in the same order.\n         * Uses a deep equality check.\n         *\n         * @type T   Type of set values.\n         * @param set1   Actual set of values.\n         * @param set2   Potential expected set of values.\n         * @param message   Message to display on error.\n         */\n        notSameDeepOrderedMembers<T>(set1: T[], set2: T[], message?: string): void;\n\n        /**\n         * Asserts that subset is included in superset in the same order beginning with the first element in superset.\n         * Uses a strict equality check (===).\n         *\n         * @type T   Type of set values.\n         * @param superset   Actual set of values.\n         * @param subset   Potential contained set of values.\n         * @param message   Message to display on error.\n         */\n        includeOrderedMembers<T>(superset: T[], subset: T[], message?: string): void;\n\n        /**\n         * Asserts that subset isn’t included in superset in the same order beginning with the first element in superset.\n         * Uses a strict equality check (===).\n         *\n         * @type T   Type of set values.\n         * @param superset   Actual set of values.\n         * @param subset   Potential contained set of values.\n         * @param message   Message to display on error.\n         */\n        notIncludeOrderedMembers<T>(superset: T[], subset: T[], message?: string): void;\n\n        /**\n         * Asserts that subset is included in superset in the same order beginning with the first element in superset.\n         * Uses a deep equality check.\n         *\n         * @type T   Type of set values.\n         * @param superset   Actual set of values.\n         * @param subset   Potential contained set of values.\n         * @param message   Message to display on error.\n         */\n        includeDeepOrderedMembers<T>(superset: T[], subset: T[], message?: string): void;\n\n        /**\n         * Asserts that subset isn’t included in superset in the same order beginning with the first element in superset.\n         * Uses a deep equality check.\n         *\n         * @type T   Type of set values.\n         * @param superset   Actual set of values.\n         * @param subset   Potential contained set of values.\n         * @param message   Message to display on error.\n         */\n        notIncludeDeepOrderedMembers<T>(superset: T[], subset: T[], message?: string): void;\n\n        /**\n         * Asserts that subset is included in superset. Order is not take into account.\n         *\n         * @type T   Type of set values.\n         * @param superset   Actual set of values.\n         * @param subset   Potential contained set of values.\n         * @param message   Message to display on error.\n         */\n        includeMembers<T>(superset: T[], subset: T[], message?: string): void;\n\n        /**\n         * Asserts that subset is included in superset using deep equality checking.\n         * Order is not take into account.\n         *\n         * @type T   Type of set values.\n         * @param superset   Actual set of values.\n         * @param subset   Potential contained set of values.\n         * @param message   Message to display on error.\n         */\n        includeDeepMembers<T>(superset: T[], subset: T[], message?: string): void;\n\n        /**\n         * Asserts that non-object, non-array value inList appears in the flat array list.\n         *\n         * @type T   Type of list values.\n         * @param inList   Value expected to be in the list.\n         * @param list   List of values.\n         * @param message   Message to display on error.\n         */\n        oneOf<T>(inList: T, list: T[], message?: string): void;\n\n        /**\n         * Asserts that a function changes the value of a property.\n         *\n         * @type T   Type of object.\n         * @param modifier   Function to run.\n         * @param object   Container object.\n         * @param property   Property of object expected to be modified.\n         * @param message   Message to display on error.\n         */\n        changes<T>(modifier: Function, object: T, property: string /* keyof T */, message?: string): void;\n\n        /**\n         * Asserts that a function does not change the value of a property.\n         *\n         * @type T   Type of object.\n         * @param modifier   Function to run.\n         * @param object   Container object.\n         * @param property   Property of object expected not to be modified.\n         * @param message   Message to display on error.\n         */\n        doesNotChange<T>(modifier: Function, object: T, property: string /* keyof T */, message?: string): void;\n\n        /**\n         * Asserts that a function increases an object property.\n         *\n         * @type T   Type of object.\n         * @param modifier   Function to run.\n         * @param object   Container object.\n         * @param property   Property of object expected to be increased.\n         * @param message   Message to display on error.\n         */\n        increases<T>(modifier: Function, object: T, property: string /* keyof T */, message?: string): void;\n\n        /**\n         * Asserts that a function does not increase an object property.\n         *\n         * @type T   Type of object.\n         * @param modifier   Function to run.\n         * @param object   Container object.\n         * @param property   Property of object expected not to be increased.\n         * @param message   Message to display on error.\n         */\n        doesNotIncrease<T>(modifier: Function, object: T, property: string /* keyof T */, message?: string): void;\n\n        /**\n         * Asserts that a function decreases an object property.\n         *\n         * @type T   Type of object.\n         * @param modifier   Function to run.\n         * @param object   Container object.\n         * @param property   Property of object expected to be decreased.\n         * @param message   Message to display on error.\n         */\n        decreases<T>(modifier: Function, object: T, property: string /* keyof T */, message?: string): void;\n\n        /**\n         * Asserts that a function does not decrease an object property.\n         *\n         * @type T   Type of object.\n         * @param modifier   Function to run.\n         * @param object   Container object.\n         * @param property   Property of object expected not to be decreased.\n         * @param message   Message to display on error.\n         */\n        doesNotDecrease<T>(modifier: Function, object: T, property: string /* keyof T */, message?: string): void;\n\n        /**\n         * Asserts if value is not a false value, and throws if it is a true value.\n         *\n         * @type T   Type of object.\n         * @param object   Actual value.\n         * @param message   Message to display on error.\n         * @remarks This is added to allow for chai to be a drop-in replacement for\n         *          Node’s assert class.\n         */\n        ifError<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that object is extensible (can have new properties added to it).\n         *\n         * @type T   Type of object\n         * @param object   Actual value.\n         * @param message   Message to display on error.\n         */\n        isExtensible<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that object is extensible (can have new properties added to it).\n         *\n         * @type T   Type of object\n         * @param object   Actual value.\n         * @param message   Message to display on error.\n         */\n        extensible<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that object is not extensible.\n         *\n         * @type T   Type of object\n         * @param object   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNotExtensible<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that object is not extensible.\n         *\n         * @type T   Type of object\n         * @param object   Actual value.\n         * @param message   Message to display on error.\n         */\n        notExtensible<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that object is sealed (can have new properties added to it\n         * and its existing properties cannot be removed).\n         *\n         * @type T   Type of object\n         * @param object   Actual value.\n         * @param message   Message to display on error.\n         */\n        isSealed<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that object is sealed (can have new properties added to it\n         * and its existing properties cannot be removed).\n         *\n         * @type T   Type of object\n         * @param object   Actual value.\n         * @param message   Message to display on error.\n         */\n        sealed<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that object is not sealed.\n         *\n         * @type T   Type of object\n         * @param object   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNotSealed<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that object is not sealed.\n         *\n         * @type T   Type of object\n         * @param object   Actual value.\n         * @param message   Message to display on error.\n         */\n        notSealed<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that object is frozen (cannot have new properties added to it\n         * and its existing properties cannot be removed).\n         *\n         * @type T   Type of object\n         * @param object   Actual value.\n         * @param message   Message to display on error.\n         */\n        isFrozen<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that object is frozen (cannot have new properties added to it\n         * and its existing properties cannot be removed).\n         *\n         * @type T   Type of object\n         * @param object   Actual value.\n         * @param message   Message to display on error.\n         */\n        frozen<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that object is not frozen (cannot have new properties added to it\n         * and its existing properties cannot be removed).\n         *\n         * @type T   Type of object\n         * @param object   Actual value.\n         * @param message   Message to display on error.\n         */\n        isNotFrozen<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that object is not frozen (cannot have new properties added to it\n         * and its existing properties cannot be removed).\n         *\n         * @type T   Type of object\n         * @param object   Actual value.\n         * @param message   Message to display on error.\n         */\n        notFrozen<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that the target does not contain any values. For arrays and\n         * strings, it checks the length property. For Map and Set instances, it\n         * checks the size property. For non-function objects, it gets the count\n         * of own enumerable string keys.\n         *\n         * @type T   Type of object\n         * @param object   Actual value.\n         * @param message   Message to display on error.\n         */\n        isEmpty<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that the target contains values. For arrays and strings, it checks\n         * the length property. For Map and Set instances, it checks the size property.\n         * For non-function objects, it gets the count of own enumerable string keys.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param message    Message to display on error.\n         */\n        isNotEmpty<T>(object: T, message?: string): void;\n\n        /**\n         * Asserts that `object` has at least one of the `keys` provided.\n         * You can also provide a single object instead of a `keys` array and its keys\n         * will be used as the expected set of keys.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param keys   Keys to check\n         * @param message    Message to display on error.\n         */\n        hasAnyKeys<T>(object: T, keys: Array<Object | string> | { [key: string]: any }, message?: string): void;\n\n        /**\n         * Asserts that `object` has all and only all of the `keys` provided.\n         * You can also provide a single object instead of a `keys` array and its keys\n         * will be used as the expected set of keys.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param keys   Keys to check\n         * @param message    Message to display on error.\n         */\n        hasAllKeys<T>(object: T, keys: Array<Object | string> | { [key: string]: any }, message?: string): void;\n\n        /**\n         * Asserts that `object` has all of the `keys` provided but may have more keys not listed.\n         * You can also provide a single object instead of a `keys` array and its keys\n         * will be used as the expected set of keys.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param keys   Keys to check\n         * @param message    Message to display on error.\n         */\n        containsAllKeys<T>(object: T, keys: Array<Object | string> | { [key: string]: any }, message?: string): void;\n\n        /**\n         * Asserts that `object` has none of the `keys` provided.\n         * You can also provide a single object instead of a `keys` array and its keys\n         * will be used as the expected set of keys.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param keys   Keys to check\n         * @param message    Message to display on error.\n         */\n        doesNotHaveAnyKeys<T>(object: T, keys: Array<Object | string> | { [key: string]: any }, message?: string): void;\n\n        /**\n         * Asserts that `object` does not have at least one of the `keys` provided.\n         * You can also provide a single object instead of a `keys` array and its keys\n         * will be used as the expected set of keys.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param keys   Keys to check\n         * @param message    Message to display on error.\n         */\n        doesNotHaveAllKeys<T>(object: T, keys: Array<Object | string> | { [key: string]: any }, message?: string): void;\n\n        /**\n         * Asserts that `object` has at least one of the `keys` provided.\n         * Since Sets and Maps can have objects as keys you can use this assertion to perform\n         * a deep comparison.\n         * You can also provide a single object instead of a `keys` array and its keys\n         * will be used as the expected set of keys.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param keys   Keys to check\n         * @param message    Message to display on error.\n         */\n        hasAnyDeepKeys<T>(object: T, keys: Array<Object | string> | { [key: string]: any }, message?: string): void;\n\n        /**\n         * Asserts that `object` has all and only all of the `keys` provided.\n         * Since Sets and Maps can have objects as keys you can use this assertion to perform\n         * a deep comparison.\n         * You can also provide a single object instead of a `keys` array and its keys\n         * will be used as the expected set of keys.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param keys   Keys to check\n         * @param message    Message to display on error.\n         */\n        hasAllDeepKeys<T>(object: T, keys: Array<Object | string> | { [key: string]: any }, message?: string): void;\n\n        /**\n         * Asserts that `object` contains all of the `keys` provided.\n         * Since Sets and Maps can have objects as keys you can use this assertion to perform\n         * a deep comparison.\n         * You can also provide a single object instead of a `keys` array and its keys\n         * will be used as the expected set of keys.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param keys   Keys to check\n         * @param message    Message to display on error.\n         */\n        containsAllDeepKeys<T>(object: T, keys: Array<Object | string> | { [key: string]: any }, message?: string): void;\n\n        /**\n         * Asserts that `object` contains all of the `keys` provided.\n         * Since Sets and Maps can have objects as keys you can use this assertion to perform\n         * a deep comparison.\n         * You can also provide a single object instead of a `keys` array and its keys\n         * will be used as the expected set of keys.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param keys   Keys to check\n         * @param message    Message to display on error.\n         */\n        doesNotHaveAnyDeepKeys<T>(object: T, keys: Array<Object | string> | { [key: string]: any }, message?: string): void;\n\n        /**\n         * Asserts that `object` contains all of the `keys` provided.\n         * Since Sets and Maps can have objects as keys you can use this assertion to perform\n         * a deep comparison.\n         * You can also provide a single object instead of a `keys` array and its keys\n         * will be used as the expected set of keys.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param keys   Keys to check\n         * @param message    Message to display on error.\n         */\n        doesNotHaveAllDeepKeys<T>(object: T, keys: Array<Object | string> | { [key: string]: any }, message?: string): void;\n\n        /**\n         * Asserts that object has a direct or inherited property named by property,\n         * which can be a string using dot- and bracket-notation for nested reference.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param property    Property to test.\n         * @param message    Message to display on error.\n         */\n        nestedProperty<T>(object: T, property: string, message?: string): void;\n\n        /**\n         * Asserts that object does not have a property named by property,\n         * which can be a string using dot- and bracket-notation for nested reference.\n         * The property cannot exist on the object nor anywhere in its prototype chain.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param property    Property to test.\n         * @param message    Message to display on error.\n         */\n        notNestedProperty<T>(object: T, property: string, message?: string): void;\n\n        /**\n         * Asserts that object has a property named by property with value given by value.\n         * property can use dot- and bracket-notation for nested reference. Uses a strict equality check (===).\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param property    Property to test.\n         * @param value    Value to test.\n         * @param message    Message to display on error.\n         */\n        nestedPropertyVal<T>(object: T, property: string, value: any, message?: string): void;\n\n        /**\n         * Asserts that object does not have a property named by property with value given by value.\n         * property can use dot- and bracket-notation for nested reference. Uses a strict equality check (===).\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param property    Property to test.\n         * @param value    Value to test.\n         * @param message    Message to display on error.\n         */\n        notNestedPropertyVal<T>(object: T, property: string, value: any, message?: string): void;\n\n        /**\n         * Asserts that object has a property named by property with a value given by value.\n         * property can use dot- and bracket-notation for nested reference. Uses a deep equality check.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param property    Property to test.\n         * @param value    Value to test.\n         * @param message    Message to display on error.\n         */\n        deepNestedPropertyVal<T>(object: T, property: string, value: any, message?: string): void;\n\n        /**\n         * Asserts that object does not have a property named by property with value given by value.\n         * property can use dot- and bracket-notation for nested reference. Uses a deep equality check.\n         *\n         * @type T   Type of object.\n         * @param object   Object to test.\n         * @param property    Property to test.\n         * @param value    Value to test.\n         * @param message    Message to display on error.\n         */\n        notDeepNestedPropertyVal<T>(object: T, property: string, value: any, message?: string): void;\n    }\n\n    export interface Config {\n        /**\n         * Default: false\n         */\n        includeStack: boolean;\n\n        /**\n         * Default: true\n         */\n        showDiff: boolean;\n\n        /**\n         * Default: 40\n         */\n        truncateThreshold: number;\n\n        /**\n         * Default: true\n         */\n        useProxy: boolean;\n\n        /**\n         * Default: ['then', 'catch', 'inspect', 'toJSON']\n         */\n        proxyExcludedKeys: string[];\n    }\n\n    export class AssertionError {\n        constructor(message: string, _props?: any, ssf?: Function);\n        name: string;\n        message: string;\n        showDiff: boolean;\n        stack: string;\n    }\n}\n\ndeclare const chai: Chai.ChaiStatic;\n\ndeclare module \"chai\" {\n    export = chai;\n}\n\ninterface Object {\n    should: Chai.Assertion;\n}\n"},"./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/assert.d.ts":function(e,t,n){"use strict";n.r(t),t.default="declare module \"assert\" {\n    function assert(value: any, message?: string | Error): void;\n    namespace assert {\n        class AssertionError implements Error {\n            name: string;\n            message: string;\n            actual: any;\n            expected: any;\n            operator: string;\n            generatedMessage: boolean;\n            code: 'ERR_ASSERTION';\n\n            constructor(options?: {\n                message?: string; actual?: any; expected?: any;\n                operator?: string; stackStartFn?: Function\n            });\n        }\n\n        type AssertPredicate = RegExp | (new() => object) | ((thrown: any) => boolean) | object | Error;\n\n        function fail(message?: string | Error): never;\n        /** @deprecated since v10.0.0 - use `fail([message])` or other assert functions instead. */\n        function fail(actual: any, expected: any, message?: string | Error, operator?: string, stackStartFn?: Function): never;\n        function ok(value: any, message?: string | Error): void;\n        /** @deprecated since v9.9.0 - use `strictEqual()` instead. */\n        function equal(actual: any, expected: any, message?: string | Error): void;\n        /** @deprecated since v9.9.0 - use `notStrictEqual()` instead. */\n        function notEqual(actual: any, expected: any, message?: string | Error): void;\n        /** @deprecated since v9.9.0 - use `deepStrictEqual()` instead. */\n        function deepEqual(actual: any, expected: any, message?: string | Error): void;\n        /** @deprecated since v9.9.0 - use `notDeepStrictEqual()` instead. */\n        function notDeepEqual(actual: any, expected: any, message?: string | Error): void;\n        function strictEqual(actual: any, expected: any, message?: string | Error): void;\n        function notStrictEqual(actual: any, expected: any, message?: string | Error): void;\n        function deepStrictEqual(actual: any, expected: any, message?: string | Error): void;\n        function notDeepStrictEqual(actual: any, expected: any, message?: string | Error): void;\n\n        function throws(block: () => any, message?: string | Error): void;\n        function throws(block: () => any, error: AssertPredicate, message?: string | Error): void;\n        function doesNotThrow(block: () => any, message?: string | Error): void;\n        function doesNotThrow(block: () => any, error: RegExp | Function, message?: string | Error): void;\n\n        function ifError(value: any): void;\n\n        function rejects(block: (() => Promise<any>) | Promise<any>, message?: string | Error): Promise<void>;\n        function rejects(block: (() => Promise<any>) | Promise<any>, error: AssertPredicate, message?: string | Error): Promise<void>;\n        function doesNotReject(block: (() => Promise<any>) | Promise<any>, message?: string | Error): Promise<void>;\n        function doesNotReject(block: (() => Promise<any>) | Promise<any>, error: RegExp | Function, message?: string | Error): Promise<void>;\n\n        function match(value: string, regExp: RegExp, message?: string | Error): void;\n        function doesNotMatch(value: string, regExp: RegExp, message?: string | Error): void;\n\n        const strict: typeof assert;\n    }\n\n    export = assert;\n}\n"},"./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/buffer.d.ts":function(e,t,n){"use strict";n.r(t),t.default='declare module "buffer" {\n    export const INSPECT_MAX_BYTES: number;\n    export const kMaxLength: number;\n    export const kStringMaxLength: number;\n    export const constants: {\n        MAX_LENGTH: number;\n        MAX_STRING_LENGTH: number;\n    };\n    const BuffType: typeof Buffer;\n\n    export type TranscodeEncoding = "ascii" | "utf8" | "utf16le" | "ucs2" | "latin1" | "binary";\n\n    export function transcode(source: Uint8Array, fromEnc: TranscodeEncoding, toEnc: TranscodeEncoding): Buffer;\n\n    export const SlowBuffer: {\n        /** @deprecated since v6.0.0, use `Buffer.allocUnsafeSlow()` */\n        new(size: number): Buffer;\n        prototype: Buffer;\n    };\n\n    export { BuffType as Buffer };\n}\n'},"./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/events.d.ts":function(e,t,n){"use strict";n.r(t),t.default="declare module \"events\" {\n    interface EventEmitterOptions {\n        /**\n         * Enables automatic capturing of promise rejection.\n         */\n        captureRejections?: boolean;\n    }\n\n    interface NodeEventTarget {\n        once(event: string | symbol, listener: (...args: any[]) => void): this;\n    }\n\n    interface DOMEventTarget {\n        addEventListener(event: string, listener: (...args: any[]) => void, opts?: { once: boolean }): any;\n    }\n\n    namespace EventEmitter {\n        function once(emitter: NodeEventTarget, event: string | symbol): Promise<any[]>;\n        function once(emitter: DOMEventTarget, event: string): Promise<any[]>;\n        function on(emitter: EventEmitter, event: string): AsyncIterableIterator<any>;\n        const captureRejectionSymbol: unique symbol;\n\n        /**\n         * This symbol shall be used to install a listener for only monitoring `'error'`\n         * events. Listeners installed using this symbol are called before the regular\n         * `'error'` listeners are called.\n         *\n         * Installing a listener using this symbol does not change the behavior once an\n         * `'error'` event is emitted, therefore the process will still crash if no\n         * regular `'error'` listener is installed.\n         */\n        const errorMonitor: unique symbol;\n        /**\n         * Sets or gets the default captureRejection value for all emitters.\n         */\n        let captureRejections: boolean;\n\n        interface EventEmitter extends NodeJS.EventEmitter {\n        }\n\n        class EventEmitter {\n            constructor(options?: EventEmitterOptions);\n            /** @deprecated since v4.0.0 */\n            static listenerCount(emitter: EventEmitter, event: string | symbol): number;\n            static defaultMaxListeners: number;\n            /**\n             * This symbol shall be used to install a listener for only monitoring `'error'`\n             * events. Listeners installed using this symbol are called before the regular\n             * `'error'` listeners are called.\n             *\n             * Installing a listener using this symbol does not change the behavior once an\n             * `'error'` event is emitted, therefore the process will still crash if no\n             * regular `'error'` listener is installed.\n             */\n            static readonly errorMonitor: unique symbol;\n        }\n    }\n\n    global {\n        namespace NodeJS {\n            interface EventEmitter {\n                addListener(event: string | symbol, listener: (...args: any[]) => void): this;\n                on(event: string | symbol, listener: (...args: any[]) => void): this;\n                once(event: string | symbol, listener: (...args: any[]) => void): this;\n                removeListener(event: string | symbol, listener: (...args: any[]) => void): this;\n                off(event: string | symbol, listener: (...args: any[]) => void): this;\n                removeAllListeners(event?: string | symbol): this;\n                setMaxListeners(n: number): this;\n                getMaxListeners(): number;\n                listeners(event: string | symbol): Function[];\n                rawListeners(event: string | symbol): Function[];\n                emit(event: string | symbol, ...args: any[]): boolean;\n                listenerCount(type: string | symbol): number;\n                // Added in Node 6...\n                prependListener(event: string | symbol, listener: (...args: any[]) => void): this;\n                prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;\n                eventNames(): Array<string | symbol>;\n            }\n        }\n    }\n\n    export = EventEmitter;\n}\n"},"./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/path.d.ts":function(e,t,n){"use strict";n.r(t),t.default="declare module \"path\" {\n    namespace path {\n        /**\n         * A parsed path object generated by path.parse() or consumed by path.format().\n         */\n        interface ParsedPath {\n            /**\n             * The root of the path such as '/' or 'c:\\'\n             */\n            root: string;\n            /**\n             * The full directory path such as '/home/user/dir' or 'c:\\path\\dir'\n             */\n            dir: string;\n            /**\n             * The file name including extension (if any) such as 'index.html'\n             */\n            base: string;\n            /**\n             * The file extension (if any) such as '.html'\n             */\n            ext: string;\n            /**\n             * The file name without extension (if any) such as 'index'\n             */\n            name: string;\n        }\n\n        interface FormatInputPathObject {\n            /**\n             * The root of the path such as '/' or 'c:\\'\n             */\n            root?: string;\n            /**\n             * The full directory path such as '/home/user/dir' or 'c:\\path\\dir'\n             */\n            dir?: string;\n            /**\n             * The file name including extension (if any) such as 'index.html'\n             */\n            base?: string;\n            /**\n             * The file extension (if any) such as '.html'\n             */\n            ext?: string;\n            /**\n             * The file name without extension (if any) such as 'index'\n             */\n            name?: string;\n        }\n\n        interface PlatformPath {\n            /**\n             * Normalize a string path, reducing '..' and '.' parts.\n             * When multiple slashes are found, they're replaced by a single one; when the path contains a trailing slash, it is preserved. On Windows backslashes are used.\n             *\n             * @param p string path to normalize.\n             */\n            normalize(p: string): string;\n            /**\n             * Join all arguments together and normalize the resulting path.\n             * Arguments must be strings. In v0.8, non-string arguments were silently ignored. In v0.10 and up, an exception is thrown.\n             *\n             * @param paths paths to join.\n             */\n            join(...paths: string[]): string;\n            /**\n             * The right-most parameter is considered {to}.  Other parameters are considered an array of {from}.\n             *\n             * Starting from leftmost {from} parameter, resolves {to} to an absolute path.\n             *\n             * If {to} isn't already absolute, {from} arguments are prepended in right to left order,\n             * until an absolute path is found. If after using all {from} paths still no absolute path is found,\n             * the current working directory is used as well. The resulting path is normalized,\n             * and trailing slashes are removed unless the path gets resolved to the root directory.\n             *\n             * @param pathSegments string paths to join.  Non-string arguments are ignored.\n             */\n            resolve(...pathSegments: string[]): string;\n            /**\n             * Determines whether {path} is an absolute path. An absolute path will always resolve to the same location, regardless of the working directory.\n             *\n             * @param path path to test.\n             */\n            isAbsolute(p: string): boolean;\n            /**\n             * Solve the relative path from {from} to {to}.\n             * At times we have two absolute paths, and we need to derive the relative path from one to the other. This is actually the reverse transform of path.resolve.\n             */\n            relative(from: string, to: string): string;\n            /**\n             * Return the directory name of a path. Similar to the Unix dirname command.\n             *\n             * @param p the path to evaluate.\n             */\n            dirname(p: string): string;\n            /**\n             * Return the last portion of a path. Similar to the Unix basename command.\n             * Often used to extract the file name from a fully qualified path.\n             *\n             * @param p the path to evaluate.\n             * @param ext optionally, an extension to remove from the result.\n             */\n            basename(p: string, ext?: string): string;\n            /**\n             * Return the extension of the path, from the last '.' to end of string in the last portion of the path.\n             * If there is no '.' in the last portion of the path or the first character of it is '.', then it returns an empty string\n             *\n             * @param p the path to evaluate.\n             */\n            extname(p: string): string;\n            /**\n             * The platform-specific file separator. '\\\\' or '/'.\n             */\n            readonly sep: string;\n            /**\n             * The platform-specific file delimiter. ';' or ':'.\n             */\n            readonly delimiter: string;\n            /**\n             * Returns an object from a path string - the opposite of format().\n             *\n             * @param pathString path to evaluate.\n             */\n            parse(p: string): ParsedPath;\n            /**\n             * Returns a path string from an object - the opposite of parse().\n             *\n             * @param pathString path to evaluate.\n             */\n            format(pP: FormatInputPathObject): string;\n            /**\n             * On Windows systems only, returns an equivalent namespace-prefixed path for the given path.\n             * If path is not a string, path will be returned without modifications.\n             * This method is meaningful only on Windows system.\n             * On POSIX systems, the method is non-operational and always returns path without modifications.\n             */\n            toNamespacedPath(path: string): string;\n            /**\n             * Posix specific pathing.\n             * Same as parent object on posix.\n             */\n            readonly posix: PlatformPath;\n            /**\n             * Windows specific pathing.\n             * Same as parent object on windows\n             */\n            readonly win32: PlatformPath;\n        }\n    }\n    const path: path.PlatformPath;\n    export = path;\n}\n"},"./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/punycode.d.ts":function(e,t,n){"use strict";n.r(t),t.default='declare module "punycode" {\n    function decode(string: string): string;\n    function encode(string: string): string;\n    function toUnicode(domain: string): string;\n    function toASCII(domain: string): string;\n    const ucs2: ucs2;\n    interface ucs2 {\n        decode(string: string): number[];\n        encode(codePoints: number[]): string;\n    }\n    const version: string;\n}\n'},"./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/querystring.d.ts":function(e,t,n){"use strict";n.r(t),t.default='declare module "querystring" {\n    interface StringifyOptions {\n        encodeURIComponent?: (str: string) => string;\n    }\n\n    interface ParseOptions {\n        maxKeys?: number;\n        decodeURIComponent?: (str: string) => string;\n    }\n\n    interface ParsedUrlQuery extends NodeJS.Dict<string | string[]> { }\n\n    interface ParsedUrlQueryInput extends NodeJS.Dict<string | number | boolean | ReadonlyArray<string> | ReadonlyArray<number> | ReadonlyArray<boolean> | null> {\n    }\n\n    function stringify(obj?: ParsedUrlQueryInput, sep?: string, eq?: string, options?: StringifyOptions): string;\n    function parse(str: string, sep?: string, eq?: string, options?: ParseOptions): ParsedUrlQuery;\n    /**\n     * The querystring.encode() function is an alias for querystring.stringify().\n     */\n    const encode: typeof stringify;\n    /**\n     * The querystring.decode() function is an alias for querystring.parse().\n     */\n    const decode: typeof parse;\n    function escape(str: string): string;\n    function unescape(str: string): string;\n}\n'},"./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/stream.d.ts":function(e,t,n){"use strict";n.r(t),t.default='declare module "stream" {\n    import * as events from "events";\n\n    class internal extends events.EventEmitter {\n        pipe<T extends NodeJS.WritableStream>(destination: T, options?: { end?: boolean; }): T;\n    }\n\n    namespace internal {\n        class Stream extends internal {\n            constructor(opts?: ReadableOptions);\n        }\n\n        interface ReadableOptions {\n            highWaterMark?: number;\n            encoding?: BufferEncoding;\n            objectMode?: boolean;\n            read?(this: Readable, size: number): void;\n            destroy?(this: Readable, error: Error | null, callback: (error: Error | null) => void): void;\n            autoDestroy?: boolean;\n        }\n\n        class Readable extends Stream implements NodeJS.ReadableStream {\n            /**\n             * A utility method for creating Readable Streams out of iterators.\n             */\n            static from(iterable: Iterable<any> | AsyncIterable<any>, options?: ReadableOptions): Readable;\n\n            readable: boolean;\n            readonly readableEncoding: BufferEncoding | null;\n            readonly readableEnded: boolean;\n            readonly readableFlowing: boolean | null;\n            readonly readableHighWaterMark: number;\n            readonly readableLength: number;\n            readonly readableObjectMode: boolean;\n            destroyed: boolean;\n            constructor(opts?: ReadableOptions);\n            _read(size: number): void;\n            read(size?: number): any;\n            setEncoding(encoding: BufferEncoding): this;\n            pause(): this;\n            resume(): this;\n            isPaused(): boolean;\n            unpipe(destination?: NodeJS.WritableStream): this;\n            unshift(chunk: any, encoding?: BufferEncoding): void;\n            wrap(oldStream: NodeJS.ReadableStream): this;\n            push(chunk: any, encoding?: BufferEncoding): boolean;\n            _destroy(error: Error | null, callback: (error?: Error | null) => void): void;\n            destroy(error?: Error): void;\n\n            /**\n             * Event emitter\n             * The defined events on documents including:\n             * 1. close\n             * 2. data\n             * 3. end\n             * 4. error\n             * 5. pause\n             * 6. readable\n             * 7. resume\n             */\n            addListener(event: "close", listener: () => void): this;\n            addListener(event: "data", listener: (chunk: any) => void): this;\n            addListener(event: "end", listener: () => void): this;\n            addListener(event: "error", listener: (err: Error) => void): this;\n            addListener(event: "pause", listener: () => void): this;\n            addListener(event: "readable", listener: () => void): this;\n            addListener(event: "resume", listener: () => void): this;\n            addListener(event: string | symbol, listener: (...args: any[]) => void): this;\n\n            emit(event: "close"): boolean;\n            emit(event: "data", chunk: any): boolean;\n            emit(event: "end"): boolean;\n            emit(event: "error", err: Error): boolean;\n            emit(event: "pause"): boolean;\n            emit(event: "readable"): boolean;\n            emit(event: "resume"): boolean;\n            emit(event: string | symbol, ...args: any[]): boolean;\n\n            on(event: "close", listener: () => void): this;\n            on(event: "data", listener: (chunk: any) => void): this;\n            on(event: "end", listener: () => void): this;\n            on(event: "error", listener: (err: Error) => void): this;\n            on(event: "pause", listener: () => void): this;\n            on(event: "readable", listener: () => void): this;\n            on(event: "resume", listener: () => void): this;\n            on(event: string | symbol, listener: (...args: any[]) => void): this;\n\n            once(event: "close", listener: () => void): this;\n            once(event: "data", listener: (chunk: any) => void): this;\n            once(event: "end", listener: () => void): this;\n            once(event: "error", listener: (err: Error) => void): this;\n            once(event: "pause", listener: () => void): this;\n            once(event: "readable", listener: () => void): this;\n            once(event: "resume", listener: () => void): this;\n            once(event: string | symbol, listener: (...args: any[]) => void): this;\n\n            prependListener(event: "close", listener: () => void): this;\n            prependListener(event: "data", listener: (chunk: any) => void): this;\n            prependListener(event: "end", listener: () => void): this;\n            prependListener(event: "error", listener: (err: Error) => void): this;\n            prependListener(event: "pause", listener: () => void): this;\n            prependListener(event: "readable", listener: () => void): this;\n            prependListener(event: "resume", listener: () => void): this;\n            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;\n\n            prependOnceListener(event: "close", listener: () => void): this;\n            prependOnceListener(event: "data", listener: (chunk: any) => void): this;\n            prependOnceListener(event: "end", listener: () => void): this;\n            prependOnceListener(event: "error", listener: (err: Error) => void): this;\n            prependOnceListener(event: "pause", listener: () => void): this;\n            prependOnceListener(event: "readable", listener: () => void): this;\n            prependOnceListener(event: "resume", listener: () => void): this;\n            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;\n\n            removeListener(event: "close", listener: () => void): this;\n            removeListener(event: "data", listener: (chunk: any) => void): this;\n            removeListener(event: "end", listener: () => void): this;\n            removeListener(event: "error", listener: (err: Error) => void): this;\n            removeListener(event: "pause", listener: () => void): this;\n            removeListener(event: "readable", listener: () => void): this;\n            removeListener(event: "resume", listener: () => void): this;\n            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;\n\n            [Symbol.asyncIterator](): AsyncIterableIterator<any>;\n        }\n\n        interface WritableOptions {\n            highWaterMark?: number;\n            decodeStrings?: boolean;\n            defaultEncoding?: BufferEncoding;\n            objectMode?: boolean;\n            emitClose?: boolean;\n            write?(this: Writable, chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;\n            writev?(this: Writable, chunks: Array<{ chunk: any, encoding: BufferEncoding }>, callback: (error?: Error | null) => void): void;\n            destroy?(this: Writable, error: Error | null, callback: (error: Error | null) => void): void;\n            final?(this: Writable, callback: (error?: Error | null) => void): void;\n            autoDestroy?: boolean;\n        }\n\n        class Writable extends Stream implements NodeJS.WritableStream {\n            readonly writable: boolean;\n            readonly writableEnded: boolean;\n            readonly writableFinished: boolean;\n            readonly writableHighWaterMark: number;\n            readonly writableLength: number;\n            readonly writableObjectMode: boolean;\n            readonly writableCorked: number;\n            destroyed: boolean;\n            constructor(opts?: WritableOptions);\n            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;\n            _writev?(chunks: Array<{ chunk: any, encoding: BufferEncoding }>, callback: (error?: Error | null) => void): void;\n            _destroy(error: Error | null, callback: (error?: Error | null) => void): void;\n            _final(callback: (error?: Error | null) => void): void;\n            write(chunk: any, cb?: (error: Error | null | undefined) => void): boolean;\n            write(chunk: any, encoding: BufferEncoding, cb?: (error: Error | null | undefined) => void): boolean;\n            setDefaultEncoding(encoding: BufferEncoding): this;\n            end(cb?: () => void): void;\n            end(chunk: any, cb?: () => void): void;\n            end(chunk: any, encoding: BufferEncoding, cb?: () => void): void;\n            cork(): void;\n            uncork(): void;\n            destroy(error?: Error): void;\n\n            /**\n             * Event emitter\n             * The defined events on documents including:\n             * 1. close\n             * 2. drain\n             * 3. error\n             * 4. finish\n             * 5. pipe\n             * 6. unpipe\n             */\n            addListener(event: "close", listener: () => void): this;\n            addListener(event: "drain", listener: () => void): this;\n            addListener(event: "error", listener: (err: Error) => void): this;\n            addListener(event: "finish", listener: () => void): this;\n            addListener(event: "pipe", listener: (src: Readable) => void): this;\n            addListener(event: "unpipe", listener: (src: Readable) => void): this;\n            addListener(event: string | symbol, listener: (...args: any[]) => void): this;\n\n            emit(event: "close"): boolean;\n            emit(event: "drain"): boolean;\n            emit(event: "error", err: Error): boolean;\n            emit(event: "finish"): boolean;\n            emit(event: "pipe", src: Readable): boolean;\n            emit(event: "unpipe", src: Readable): boolean;\n            emit(event: string | symbol, ...args: any[]): boolean;\n\n            on(event: "close", listener: () => void): this;\n            on(event: "drain", listener: () => void): this;\n            on(event: "error", listener: (err: Error) => void): this;\n            on(event: "finish", listener: () => void): this;\n            on(event: "pipe", listener: (src: Readable) => void): this;\n            on(event: "unpipe", listener: (src: Readable) => void): this;\n            on(event: string | symbol, listener: (...args: any[]) => void): this;\n\n            once(event: "close", listener: () => void): this;\n            once(event: "drain", listener: () => void): this;\n            once(event: "error", listener: (err: Error) => void): this;\n            once(event: "finish", listener: () => void): this;\n            once(event: "pipe", listener: (src: Readable) => void): this;\n            once(event: "unpipe", listener: (src: Readable) => void): this;\n            once(event: string | symbol, listener: (...args: any[]) => void): this;\n\n            prependListener(event: "close", listener: () => void): this;\n            prependListener(event: "drain", listener: () => void): this;\n            prependListener(event: "error", listener: (err: Error) => void): this;\n            prependListener(event: "finish", listener: () => void): this;\n            prependListener(event: "pipe", listener: (src: Readable) => void): this;\n            prependListener(event: "unpipe", listener: (src: Readable) => void): this;\n            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;\n\n            prependOnceListener(event: "close", listener: () => void): this;\n            prependOnceListener(event: "drain", listener: () => void): this;\n            prependOnceListener(event: "error", listener: (err: Error) => void): this;\n            prependOnceListener(event: "finish", listener: () => void): this;\n            prependOnceListener(event: "pipe", listener: (src: Readable) => void): this;\n            prependOnceListener(event: "unpipe", listener: (src: Readable) => void): this;\n            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;\n\n            removeListener(event: "close", listener: () => void): this;\n            removeListener(event: "drain", listener: () => void): this;\n            removeListener(event: "error", listener: (err: Error) => void): this;\n            removeListener(event: "finish", listener: () => void): this;\n            removeListener(event: "pipe", listener: (src: Readable) => void): this;\n            removeListener(event: "unpipe", listener: (src: Readable) => void): this;\n            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;\n        }\n\n        interface DuplexOptions extends ReadableOptions, WritableOptions {\n            allowHalfOpen?: boolean;\n            readableObjectMode?: boolean;\n            writableObjectMode?: boolean;\n            readableHighWaterMark?: number;\n            writableHighWaterMark?: number;\n            writableCorked?: number;\n            read?(this: Duplex, size: number): void;\n            write?(this: Duplex, chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;\n            writev?(this: Duplex, chunks: Array<{ chunk: any, encoding: BufferEncoding }>, callback: (error?: Error | null) => void): void;\n            final?(this: Duplex, callback: (error?: Error | null) => void): void;\n            destroy?(this: Duplex, error: Error | null, callback: (error: Error | null) => void): void;\n        }\n\n        // Note: Duplex extends both Readable and Writable.\n        class Duplex extends Readable implements Writable {\n            readonly writable: boolean;\n            readonly writableEnded: boolean;\n            readonly writableFinished: boolean;\n            readonly writableHighWaterMark: number;\n            readonly writableLength: number;\n            readonly writableObjectMode: boolean;\n            readonly writableCorked: number;\n            constructor(opts?: DuplexOptions);\n            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;\n            _writev?(chunks: Array<{ chunk: any, encoding: BufferEncoding }>, callback: (error?: Error | null) => void): void;\n            _destroy(error: Error | null, callback: (error: Error | null) => void): void;\n            _final(callback: (error?: Error | null) => void): void;\n            write(chunk: any, encoding?: BufferEncoding, cb?: (error: Error | null | undefined) => void): boolean;\n            write(chunk: any, cb?: (error: Error | null | undefined) => void): boolean;\n            setDefaultEncoding(encoding: BufferEncoding): this;\n            end(cb?: () => void): void;\n            end(chunk: any, cb?: () => void): void;\n            end(chunk: any, encoding?: BufferEncoding, cb?: () => void): void;\n            cork(): void;\n            uncork(): void;\n        }\n\n        type TransformCallback = (error?: Error | null, data?: any) => void;\n\n        interface TransformOptions extends DuplexOptions {\n            read?(this: Transform, size: number): void;\n            write?(this: Transform, chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;\n            writev?(this: Transform, chunks: Array<{ chunk: any, encoding: BufferEncoding }>, callback: (error?: Error | null) => void): void;\n            final?(this: Transform, callback: (error?: Error | null) => void): void;\n            destroy?(this: Transform, error: Error | null, callback: (error: Error | null) => void): void;\n            transform?(this: Transform, chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;\n            flush?(this: Transform, callback: TransformCallback): void;\n        }\n\n        class Transform extends Duplex {\n            constructor(opts?: TransformOptions);\n            _transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;\n            _flush(callback: TransformCallback): void;\n        }\n\n        class PassThrough extends Transform { }\n\n        interface FinishedOptions {\n            error?: boolean;\n            readable?: boolean;\n            writable?: boolean;\n        }\n        function finished(stream: NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream, options: FinishedOptions, callback: (err?: NodeJS.ErrnoException | null) => void): () => void;\n        function finished(stream: NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream, callback: (err?: NodeJS.ErrnoException | null) => void): () => void;\n        namespace finished {\n            function __promisify__(stream: NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream, options?: FinishedOptions): Promise<void>;\n        }\n\n        function pipeline<T extends NodeJS.WritableStream>(stream1: NodeJS.ReadableStream, stream2: T, callback?: (err: NodeJS.ErrnoException | null) => void): T;\n        function pipeline<T extends NodeJS.WritableStream>(stream1: NodeJS.ReadableStream, stream2: NodeJS.ReadWriteStream, stream3: T, callback?: (err: NodeJS.ErrnoException | null) => void): T;\n        function pipeline<T extends NodeJS.WritableStream>(\n            stream1: NodeJS.ReadableStream,\n            stream2: NodeJS.ReadWriteStream,\n            stream3: NodeJS.ReadWriteStream,\n            stream4: T,\n            callback?: (err: NodeJS.ErrnoException | null) => void,\n        ): T;\n        function pipeline<T extends NodeJS.WritableStream>(\n            stream1: NodeJS.ReadableStream,\n            stream2: NodeJS.ReadWriteStream,\n            stream3: NodeJS.ReadWriteStream,\n            stream4: NodeJS.ReadWriteStream,\n            stream5: T,\n            callback?: (err: NodeJS.ErrnoException | null) => void,\n        ): T;\n        function pipeline(streams: Array<NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream>, callback?: (err: NodeJS.ErrnoException | null) => void): NodeJS.WritableStream;\n        function pipeline(\n            stream1: NodeJS.ReadableStream,\n            stream2: NodeJS.ReadWriteStream | NodeJS.WritableStream,\n            ...streams: Array<NodeJS.ReadWriteStream | NodeJS.WritableStream | ((err: NodeJS.ErrnoException | null) => void)>,\n        ): NodeJS.WritableStream;\n        namespace pipeline {\n            function __promisify__(stream1: NodeJS.ReadableStream, stream2: NodeJS.WritableStream): Promise<void>;\n            function __promisify__(stream1: NodeJS.ReadableStream, stream2: NodeJS.ReadWriteStream, stream3: NodeJS.WritableStream): Promise<void>;\n            function __promisify__(stream1: NodeJS.ReadableStream, stream2: NodeJS.ReadWriteStream, stream3: NodeJS.ReadWriteStream, stream4: NodeJS.WritableStream): Promise<void>;\n            function __promisify__(\n                stream1: NodeJS.ReadableStream,\n                stream2: NodeJS.ReadWriteStream,\n                stream3: NodeJS.ReadWriteStream,\n                stream4: NodeJS.ReadWriteStream,\n                stream5: NodeJS.WritableStream,\n            ): Promise<void>;\n            function __promisify__(streams: Array<NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream>): Promise<void>;\n            function __promisify__(\n                stream1: NodeJS.ReadableStream,\n                stream2: NodeJS.ReadWriteStream | NodeJS.WritableStream,\n                ...streams: Array<NodeJS.ReadWriteStream | NodeJS.WritableStream>,\n            ): Promise<void>;\n        }\n\n        interface Pipe {\n            close(): void;\n            hasRef(): boolean;\n            ref(): void;\n            unref(): void;\n        }\n    }\n\n    export = internal;\n}\n'},"./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/string_decoder.d.ts":function(e,t,n){"use strict";n.r(t),t.default='declare module "string_decoder" {\n    class StringDecoder {\n        constructor(encoding?: BufferEncoding);\n        write(buffer: Buffer): string;\n        end(buffer?: Buffer): string;\n    }\n}\n'},"./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/timers.d.ts":function(e,t,n){"use strict";n.r(t),t.default='declare module "timers" {\n    function setTimeout(callback: (...args: any[]) => void, ms: number, ...args: any[]): NodeJS.Timeout;\n    namespace setTimeout {\n        function __promisify__(ms: number): Promise<void>;\n        function __promisify__<T>(ms: number, value: T): Promise<T>;\n    }\n    function clearTimeout(timeoutId: NodeJS.Timeout): void;\n    function setInterval(callback: (...args: any[]) => void, ms: number, ...args: any[]): NodeJS.Timeout;\n    function clearInterval(intervalId: NodeJS.Timeout): void;\n    function setImmediate(callback: (...args: any[]) => void, ...args: any[]): NodeJS.Immediate;\n    namespace setImmediate {\n        function __promisify__(): Promise<void>;\n        function __promisify__<T>(value: T): Promise<T>;\n    }\n    function clearImmediate(immediateId: NodeJS.Immediate): void;\n}\n'},"./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/url.d.ts":function(e,t,n){"use strict";n.r(t),t.default="declare module \"url\" {\n    import { ParsedUrlQuery, ParsedUrlQueryInput } from 'querystring';\n\n    // Input to `url.format`\n    interface UrlObject {\n        auth?: string | null;\n        hash?: string | null;\n        host?: string | null;\n        hostname?: string | null;\n        href?: string | null;\n        pathname?: string | null;\n        protocol?: string | null;\n        search?: string | null;\n        slashes?: boolean | null;\n        port?: string | number | null;\n        query?: string | null | ParsedUrlQueryInput;\n    }\n\n    // Output of `url.parse`\n    interface Url {\n        auth: string | null;\n        hash: string | null;\n        host: string | null;\n        hostname: string | null;\n        href: string;\n        path: string | null;\n        pathname: string | null;\n        protocol: string | null;\n        search: string | null;\n        slashes: boolean | null;\n        port: string | null;\n        query: string | null | ParsedUrlQuery;\n    }\n\n    interface UrlWithParsedQuery extends Url {\n        query: ParsedUrlQuery;\n    }\n\n    interface UrlWithStringQuery extends Url {\n        query: string | null;\n    }\n\n    function parse(urlStr: string): UrlWithStringQuery;\n    function parse(urlStr: string, parseQueryString: false | undefined, slashesDenoteHost?: boolean): UrlWithStringQuery;\n    function parse(urlStr: string, parseQueryString: true, slashesDenoteHost?: boolean): UrlWithParsedQuery;\n    function parse(urlStr: string, parseQueryString: boolean, slashesDenoteHost?: boolean): Url;\n\n    function format(URL: URL, options?: URLFormatOptions): string;\n    function format(urlObject: UrlObject | string): string;\n    function resolve(from: string, to: string): string;\n\n    function domainToASCII(domain: string): string;\n    function domainToUnicode(domain: string): string;\n\n    /**\n     * This function ensures the correct decodings of percent-encoded characters as\n     * well as ensuring a cross-platform valid absolute path string.\n     * @param url The file URL string or URL object to convert to a path.\n     */\n    function fileURLToPath(url: string | URL): string;\n\n    /**\n     * This function ensures that path is resolved absolutely, and that the URL\n     * control characters are correctly encoded when converting into a File URL.\n     * @param url The path to convert to a File URL.\n     */\n    function pathToFileURL(url: string): URL;\n\n    interface URLFormatOptions {\n        auth?: boolean;\n        fragment?: boolean;\n        search?: boolean;\n        unicode?: boolean;\n    }\n\n    class URL {\n        constructor(input: string, base?: string | URL);\n        hash: string;\n        host: string;\n        hostname: string;\n        href: string;\n        readonly origin: string;\n        password: string;\n        pathname: string;\n        port: string;\n        protocol: string;\n        search: string;\n        readonly searchParams: URLSearchParams;\n        username: string;\n        toString(): string;\n        toJSON(): string;\n    }\n\n    class URLSearchParams implements Iterable<[string, string]> {\n        constructor(init?: URLSearchParams | string | NodeJS.Dict<string | string[]> | Iterable<[string, string]> | Array<[string, string]>);\n        append(name: string, value: string): void;\n        delete(name: string): void;\n        entries(): IterableIterator<[string, string]>;\n        forEach(callback: (value: string, name: string, searchParams: this) => void): void;\n        get(name: string): string | null;\n        getAll(name: string): string[];\n        has(name: string): boolean;\n        keys(): IterableIterator<string>;\n        set(name: string, value: string): void;\n        sort(): void;\n        toString(): string;\n        values(): IterableIterator<string>;\n        [Symbol.iterator](): IterableIterator<[string, string]>;\n    }\n}\n"},"./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/util.d.ts":function(e,t,n){"use strict";n.r(t),t.default="declare module \"util\" {\n    interface InspectOptions extends NodeJS.InspectOptions { }\n    type Style = 'special' | 'number' | 'bigint' | 'boolean' | 'undefined' | 'null' | 'string' | 'symbol' | 'date' | 'regexp' | 'module';\n    type CustomInspectFunction = (depth: number, options: InspectOptionsStylized) => string;\n    interface InspectOptionsStylized extends InspectOptions {\n        stylize(text: string, styleType: Style): string;\n    }\n    function format(format: any, ...param: any[]): string;\n    function formatWithOptions(inspectOptions: InspectOptions, format: string, ...param: any[]): string;\n    /** @deprecated since v0.11.3 - use a third party module instead. */\n    function log(string: string): void;\n    function inspect(object: any, showHidden?: boolean, depth?: number | null, color?: boolean): string;\n    function inspect(object: any, options: InspectOptions): string;\n    namespace inspect {\n        let colors: NodeJS.Dict<[number, number]>;\n        let styles: {\n            [K in Style]: string\n        };\n        let defaultOptions: InspectOptions;\n        /**\n         * Allows changing inspect settings from the repl.\n         */\n        let replDefaults: InspectOptions;\n        const custom: unique symbol;\n    }\n    /** @deprecated since v4.0.0 - use `Array.isArray()` instead. */\n    function isArray(object: any): object is any[];\n    /** @deprecated since v4.0.0 - use `util.types.isRegExp()` instead. */\n    function isRegExp(object: any): object is RegExp;\n    /** @deprecated since v4.0.0 - use `util.types.isDate()` instead. */\n    function isDate(object: any): object is Date;\n    /** @deprecated since v4.0.0 - use `util.types.isNativeError()` instead. */\n    function isError(object: any): object is Error;\n    function inherits(constructor: any, superConstructor: any): void;\n    function debuglog(key: string): (msg: string, ...param: any[]) => void;\n    /** @deprecated since v4.0.0 - use `typeof value === 'boolean'` instead. */\n    function isBoolean(object: any): object is boolean;\n    /** @deprecated since v4.0.0 - use `Buffer.isBuffer()` instead. */\n    function isBuffer(object: any): object is Buffer;\n    /** @deprecated since v4.0.0 - use `typeof value === 'function'` instead. */\n    function isFunction(object: any): boolean;\n    /** @deprecated since v4.0.0 - use `value === null` instead. */\n    function isNull(object: any): object is null;\n    /** @deprecated since v4.0.0 - use `value === null || value === undefined` instead. */\n    function isNullOrUndefined(object: any): object is null | undefined;\n    /** @deprecated since v4.0.0 - use `typeof value === 'number'` instead. */\n    function isNumber(object: any): object is number;\n    /** @deprecated since v4.0.0 - use `value !== null && typeof value === 'object'` instead. */\n    function isObject(object: any): boolean;\n    /** @deprecated since v4.0.0 - use `(typeof value !== 'object' && typeof value !== 'function') || value === null` instead. */\n    function isPrimitive(object: any): boolean;\n    /** @deprecated since v4.0.0 - use `typeof value === 'string'` instead. */\n    function isString(object: any): object is string;\n    /** @deprecated since v4.0.0 - use `typeof value === 'symbol'` instead. */\n    function isSymbol(object: any): object is symbol;\n    /** @deprecated since v4.0.0 - use `value === undefined` instead. */\n    function isUndefined(object: any): object is undefined;\n    function deprecate<T extends Function>(fn: T, message: string, code?: string): T;\n    function isDeepStrictEqual(val1: any, val2: any): boolean;\n\n    function callbackify(fn: () => Promise<void>): (callback: (err: NodeJS.ErrnoException) => void) => void;\n    function callbackify<TResult>(fn: () => Promise<TResult>): (callback: (err: NodeJS.ErrnoException, result: TResult) => void) => void;\n    function callbackify<T1>(fn: (arg1: T1) => Promise<void>): (arg1: T1, callback: (err: NodeJS.ErrnoException) => void) => void;\n    function callbackify<T1, TResult>(fn: (arg1: T1) => Promise<TResult>): (arg1: T1, callback: (err: NodeJS.ErrnoException, result: TResult) => void) => void;\n    function callbackify<T1, T2>(fn: (arg1: T1, arg2: T2) => Promise<void>): (arg1: T1, arg2: T2, callback: (err: NodeJS.ErrnoException) => void) => void;\n    function callbackify<T1, T2, TResult>(fn: (arg1: T1, arg2: T2) => Promise<TResult>): (arg1: T1, arg2: T2, callback: (err: NodeJS.ErrnoException | null, result: TResult) => void) => void;\n    function callbackify<T1, T2, T3>(fn: (arg1: T1, arg2: T2, arg3: T3) => Promise<void>): (arg1: T1, arg2: T2, arg3: T3, callback: (err: NodeJS.ErrnoException) => void) => void;\n    function callbackify<T1, T2, T3, TResult>(\n        fn: (arg1: T1, arg2: T2, arg3: T3) => Promise<TResult>): (arg1: T1, arg2: T2, arg3: T3, callback: (err: NodeJS.ErrnoException | null, result: TResult) => void) => void;\n    function callbackify<T1, T2, T3, T4>(\n        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4) => Promise<void>): (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err: NodeJS.ErrnoException) => void) => void;\n    function callbackify<T1, T2, T3, T4, TResult>(\n        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4) => Promise<TResult>): (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err: NodeJS.ErrnoException | null, result: TResult) => void) => void;\n    function callbackify<T1, T2, T3, T4, T5>(\n        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5) => Promise<void>): (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err: NodeJS.ErrnoException) => void) => void;\n    function callbackify<T1, T2, T3, T4, T5, TResult>(\n        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5) => Promise<TResult>,\n    ): (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err: NodeJS.ErrnoException | null, result: TResult) => void) => void;\n    function callbackify<T1, T2, T3, T4, T5, T6>(\n        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6) => Promise<void>,\n    ): (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, callback: (err: NodeJS.ErrnoException) => void) => void;\n    function callbackify<T1, T2, T3, T4, T5, T6, TResult>(\n        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6) => Promise<TResult>\n    ): (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, callback: (err: NodeJS.ErrnoException | null, result: TResult) => void) => void;\n\n    interface CustomPromisifyLegacy<TCustom extends Function> extends Function {\n        __promisify__: TCustom;\n    }\n\n    interface CustomPromisifySymbol<TCustom extends Function> extends Function {\n        [promisify.custom]: TCustom;\n    }\n\n    type CustomPromisify<TCustom extends Function> = CustomPromisifySymbol<TCustom> | CustomPromisifyLegacy<TCustom>;\n\n    function promisify<TCustom extends Function>(fn: CustomPromisify<TCustom>): TCustom;\n    function promisify<TResult>(fn: (callback: (err: any, result: TResult) => void) => void): () => Promise<TResult>;\n    function promisify(fn: (callback: (err?: any) => void) => void): () => Promise<void>;\n    function promisify<T1, TResult>(fn: (arg1: T1, callback: (err: any, result: TResult) => void) => void): (arg1: T1) => Promise<TResult>;\n    function promisify<T1>(fn: (arg1: T1, callback: (err?: any) => void) => void): (arg1: T1) => Promise<void>;\n    function promisify<T1, T2, TResult>(fn: (arg1: T1, arg2: T2, callback: (err: any, result: TResult) => void) => void): (arg1: T1, arg2: T2) => Promise<TResult>;\n    function promisify<T1, T2>(fn: (arg1: T1, arg2: T2, callback: (err?: any) => void) => void): (arg1: T1, arg2: T2) => Promise<void>;\n    function promisify<T1, T2, T3, TResult>(fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err: any, result: TResult) => void) => void):\n        (arg1: T1, arg2: T2, arg3: T3) => Promise<TResult>;\n    function promisify<T1, T2, T3>(fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err?: any) => void) => void): (arg1: T1, arg2: T2, arg3: T3) => Promise<void>;\n    function promisify<T1, T2, T3, T4, TResult>(\n        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err: any, result: TResult) => void) => void,\n    ): (arg1: T1, arg2: T2, arg3: T3, arg4: T4) => Promise<TResult>;\n    function promisify<T1, T2, T3, T4>(fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err?: any) => void) => void):\n        (arg1: T1, arg2: T2, arg3: T3, arg4: T4) => Promise<void>;\n    function promisify<T1, T2, T3, T4, T5, TResult>(\n        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err: any, result: TResult) => void) => void,\n    ): (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5) => Promise<TResult>;\n    function promisify<T1, T2, T3, T4, T5>(\n        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err?: any) => void) => void,\n    ): (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5) => Promise<void>;\n    function promisify(fn: Function): Function;\n    namespace promisify {\n        const custom: unique symbol;\n    }\n\n    namespace types {\n        function isAnyArrayBuffer(object: any): boolean;\n        function isArgumentsObject(object: any): object is IArguments;\n        function isArrayBuffer(object: any): object is ArrayBuffer;\n        function isArrayBufferView(object: any): object is ArrayBufferView;\n        function isAsyncFunction(object: any): boolean;\n        function isBooleanObject(object: any): object is Boolean;\n        function isBoxedPrimitive(object: any): object is (Number | Boolean | String | Symbol /* | Object(BigInt) | Object(Symbol) */);\n        function isDataView(object: any): object is DataView;\n        function isDate(object: any): object is Date;\n        function isExternal(object: any): boolean;\n        function isFloat32Array(object: any): object is Float32Array;\n        function isFloat64Array(object: any): object is Float64Array;\n        function isGeneratorFunction(object: any): boolean;\n        function isGeneratorObject(object: any): boolean;\n        function isInt8Array(object: any): object is Int8Array;\n        function isInt16Array(object: any): object is Int16Array;\n        function isInt32Array(object: any): object is Int32Array;\n        function isMap(object: any): boolean;\n        function isMapIterator(object: any): boolean;\n        function isModuleNamespaceObject(value: any): boolean;\n        function isNativeError(object: any): object is Error;\n        function isNumberObject(object: any): object is Number;\n        function isPromise(object: any): boolean;\n        function isProxy(object: any): boolean;\n        function isRegExp(object: any): object is RegExp;\n        function isSet(object: any): boolean;\n        function isSetIterator(object: any): boolean;\n        function isSharedArrayBuffer(object: any): boolean;\n        function isStringObject(object: any): boolean;\n        function isSymbolObject(object: any): boolean;\n        function isTypedArray(object: any): object is NodeJS.TypedArray;\n        function isUint8Array(object: any): object is Uint8Array;\n        function isUint8ClampedArray(object: any): object is Uint8ClampedArray;\n        function isUint16Array(object: any): object is Uint16Array;\n        function isUint32Array(object: any): object is Uint32Array;\n        function isWeakMap(object: any): boolean;\n        function isWeakSet(object: any): boolean;\n        function isWebAssemblyCompiledModule(object: any): boolean;\n    }\n\n    class TextDecoder {\n        readonly encoding: string;\n        readonly fatal: boolean;\n        readonly ignoreBOM: boolean;\n        constructor(\n          encoding?: string,\n          options?: { fatal?: boolean; ignoreBOM?: boolean }\n        );\n        decode(\n          input?: NodeJS.ArrayBufferView | ArrayBuffer | null,\n          options?: { stream?: boolean }\n        ): string;\n    }\n\n    interface EncodeIntoResult {\n        /**\n         * The read Unicode code units of input.\n         */\n\n        read: number;\n        /**\n         * The written UTF-8 bytes of output.\n         */\n        written: number;\n    }\n\n    class TextEncoder {\n        readonly encoding: string;\n        encode(input?: string): Uint8Array;\n        encodeInto(input: string, output: Uint8Array): EncodeIntoResult;\n    }\n}\n"},"./node_modules/raw-loader/dist/cjs.js!./node_modules/postman-collection/types/index.d.ts":function(e,t,n){"use strict";n.r(t),t.default='// Type definitions for postman-collection 4.0.2\n// Project: https://github.com/postmanlabs/postman-collection\n// Definitions by: PostmanLabs\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.4\n/// <reference types="node" />\n\ndeclare module "postman-collection" {\n\n    /**\n     * @example\n     * Create a new CertificateList\n     * var CertificateList = require(\'postman-collection\').CertificateList,\n     *    certificateList = new CertificateList({}, [\n     *        {\n     *            name: \'my certificate for example.com\',\n     *            matches: [\'https://example.com/*\'],\n     *            key: { src: \'/path/to/key/file\' },\n     *            cert: { src: \'/path/to/certificate/file\' }\n     *        },\n     *        {\n     *            name: \'my certificate for example2.com\',\n     *            matches: [\'https://example2.com/*\'],\n     *            key: { src: \'/path/to/key/file\' },\n     *            cert: { src: \'/path/to/key/file\' }\n     *        }\n     * ]);\n     * @param parent - -\n     * @param list - The list of certificate representations\n     */\n    export class CertificateList extends PropertyList {\n        constructor(parent: any, list: any[]);\n        /**\n         * Matches the given url against the member certificates\' allowed matches\n         * and returns the certificate that can be used for the url.\n         * @param url - The url to find the certificate for\n         * @returns The matched certificate\n         */\n        resolveOne(url: string): Certificate.definition;\n        /**\n         * Checks if the given object is a CertificateList\n         * @param obj - -\n         */\n        static isCertificateList(obj: any): boolean;\n    }\n\n    export namespace Certificate {\n        /**\n         * The following is the object representation accepted as param for the Certificate constructor.\n         * Also the type of the object returned when Property.toJSON or Property.toObjectResolved is called on a\n         * Certificate instance.\n         * @example\n         * JSON definition of an example certificate object\n         * {\n         *     "name": "My certificate for example.com",\n         *     "matches": ["https://example.com/*"],\n         *     "key": { "src": "/path/to/key" },\n         *     "cert": { "src": "/User/path/to/certificate" },\n         *     "passphrase": "iampassphrase"\n         * }\n         * @property [name] - A name for the certificate\n         * @property [matches] - A list of match patterns\n         * @property [key] - Object with path on the file system for private key file, as src\n         * @property [cert] - Object with path on the file system for certificate file, as src\n         * @property [passphrase] - The passphrase for the certificate key\n         */\n        type definition = {\n            name?: string;\n            matches?: any[];\n            key?: any;\n            cert?: any;\n            passphrase?: string;\n        };\n    }\n\n    /**\n     * A Certificate definition that represents the ssl certificate\n     * to be used for an url.\n     * Properties can then use the `.toObjectResolved` function to procure an object representation of the property with\n     * all the variable references replaced by corresponding values.\n     * @example\n     *  Create a new Certificate\n     *\n     * var Certificate = require(\'postman-collection\').Certificate,\n     *    certificate = new Certificate({\n     *     name: \'Certificate for example.com\',\n     *     matches: [\'example.com\'],\n     *     key: { src: \'/User/path/to/certificate/key\' },\n     *     cert: { src: \'/User/path/to/certificate\' },\n     *     passphrase: \'iampassphrase\'\n     * });\n     * @param [options] - Object with matches, key, cert and passphrase\n     */\n    export class Certificate extends Property {\n        constructor(options?: Certificate.definition);\n        /**\n         * Updates the certificate with the given properties.\n         * @param [options] - Object with matches, key, cert and passphrase\n         */\n        update(options?: Certificate.definition): void;\n        /**\n         * Unique identifier\n         */\n        id: string;\n        /**\n         * Name for user reference\n         */\n        name: string;\n        /**\n         * List of match pattern\n         */\n        matches: UrlMatchPatternList;\n        /**\n         * Private Key\n         */\n        key: any;\n        /**\n         * Certificate\n         */\n        cert: any;\n        /**\n         * PFX or PKCS12 Certificate\n         */\n        pfx: any;\n        /**\n         * passphrase\n         */\n        passphrase: any;\n        /**\n         * Checks if the certificate can be applied to a given url\n         * @param url - The url string for which the certificate is checked for match.\n         */\n        canApplyTo(url: string | Url): void;\n        /**\n         * Allows the serialization of a Certificate\n         *\n         * This is overridden, in order to ensure that certificate contents are not accidentally serialized,\n         * which can be a security risk.\n         */\n        toJSON(): void;\n        /**\n         * Checks if the given object is a Certificate\n         * @param obj - -\n         */\n        static isCertificate(obj: any): boolean;\n    }\n\n    export namespace Collection {\n        /**\n         * The following is the object structure accepted as constructor parameter while calling `new Collection(...)`. It is\n         * also the structure exported when Property.toJSON or Property.toObjectResolved is called on a\n         * collection instance.\n         * @example\n         * JSON definition of an example collection\n         * {\n         *     "info": {\n         *         "name": "My Postman Collection",\n         *         "version": "1.0.0"\n         *     }\n         *     "item": [{\n         *         "request": "{{base-url}}/get"\n         *     }],\n         *     "variables": [{\n         *         "id": "base-url",\n         *         "value": "https://postman-echo.com"\n         *     }]\n         * }\n         * @property [info] - The meta information regarding the collection is provided as the `info` object.\n         * @property [info.id] - Every collection is identified by the unique value of this property. It is recommended\n         * that you maintain the same id since changing the id usually implies that is a different collection than it was\n         * originally.\n         * @property [info.name] - A collection\'s friendly name is defined by this property. You would want to set this\n         * field to a value that would allow you to easily identify this collection among a bunch of other collections.\n         * @property [info.version] - Postman allows you to version your collections as they grow, and this field holds\n         * the version number. While optional, it is recommended that you use this field to its fullest extent.\n         * @property [item] - Items are the basic unit for a Postman collection.\n         * You can think of them as corresponding to a single API endpoint. Each Item has one request and may have multiple API\n         * responses associated with it.\n         * @property [variable] - Collection variables allow you to define a set of variables,\n         * that are a *part of the collection*, as opposed to environments, which are separate entities.\n         * @property [auth] - Collection auth allows you to define an authentication,\n         * that *applies to all items* in the collection.\n         * @property [event] - Postman allows you to configure scripts to run when specific events\n         * occur.\n         * @property [version] - Version of the collection expressed in [semver](http://semver.org/)\n         * format.\n         */\n        type definition = {\n            info?: {\n                id?: string;\n                name?: string;\n                version?: string;\n            };\n            item?: (Item.definition | ItemGroup.definition)[];\n            variable?: Variable.definition;\n            auth?: RequestAuth.definition;\n            event?: Event.definition[];\n            version?: string | Version.definition;\n        };\n    }\n\n    /**\n     * Create or load an instance of [Postman Collection](https://www.getpostman.com/docs/collections) as a JavaScript\n     * object that can be manipulated easily.\n     *\n     * A collection lets you group individual requests together. These requests can be further organized into folders to\n     * accurately mirror your API. Requests can also store sample responses when saved in a collection. You can add\n     * metadata like name and description too so that all the information that a developer needs to use your API is\n     * available easily.\n     * @example\n     * Load a Collection JSON file from disk\n     * var fs = require(\'fs\'), // needed to read JSON file from disk\n     *     pretty = function (obj) { // function to neatly log the collection object to console\n     *         return require(\'util\').inspect(obj, {colors: true});\n     *     },\n     *     Collection = require(\'postman-collection\').Collection,\n     *     myCollection;\n     *\n     * // Load a collection to memory from a JSON file on disk (say, sample-collection.json)\n     * myCollection = new Collection(JSON.stringify(fs.readFileSync(\'sample-collection.json\').toString()));\n     *\n     * // log items at root level of the collection\n     * console.log(pretty(myCollection));\n     * @example\n     * Create a blank collection and write to file\n     * var fs = require(\'fs\'),\n     *     Collection = require(\'postman-collection\').Collection,\n     *     mycollection;\n     *\n     * myCollection = new Collection({\n     *     info: {\n     *         name: "my Collection"\n     *     }\n     * });\n     *\n     * // log the collection to console to see its contents\n     * fs.writeFileSync(\'myCollection.postman_collection\', JSON.stringify(myCollection, null, 2));\n     * @param [definition] - Pass the initial definition of the collection (name, id, etc) as\n     * the `definition` parameter. The definition object is structured exactly as the collection format as defined in\n     * [https://www.schema.getpostman.com/](https://www.schema.getpostman.com/). This parameter is optional. That\n     * implies that you can create an empty instance of collection and add requests and other properties in order to\n     * build a new collection.\n     * @param [environments] - The collection instance constructor accepts the second parameter as an\n     * array of environment objects. Environments objects store variable definitions that are inherited by\n     * Collection.variables. These environment variables are usually the ones that are exported from the Postman\n     * App to use them with different collections. Refer to Postman\n     * [documentation on environment variables](https://www.getpostman.com/docs/environments).\n     */\n    export class Collection extends ItemGroup {\n        constructor(definition?: Collection.definition, environments?: object[]);\n        /**\n         * The `variables` property holds a list of variables that are associated with a Collection. These variables\n         * are stored within a collection so that they can be re-used and replaced in rest of the collection. For\n         * example, if one has a variable named `port` with value `8080`, then one can write a request Url\n         * as `http://localhost:{{port}}/my/endpoint` and that will be replaced to form\n         * `http://localhost:8080/my/endpoint`. **Collection Variables** are like\n         * [environment variables](https://www.getpostman.com/docs/environments), but stored locally within a\n         * collection.\n         * @example\n         * Creating a collection with variables\n         * var fs = require(\'fs\'),\n         *     Collection = require(\'postman-collection\').Collection,\n         *     mycollection;\n         *\n         * // Create a new empty collection.\n         * myCollection = new Collection();\n         *\n         * // Add a variable to the collection\n         * myCollection.variables.add({\n         *     id: \'apiBaseUrl\',\n         *     value: \'http://timeapi.org\',\n         *     type: \'string\'\n         * });\n         *\n         * //Add a request that uses the variable that we just added.\n         * myCollection.items.add({\n         *     id: \'utc-time-now\',\n         *     name: \'Get the current time in UTC\',\n         *     request: \'{{apiBaseUrl}}/utc/now\'\n         * });\n         */\n        variables: VariableList;\n        /**\n         * The `version` key in collection is used to express the version of the collection. It is useful in either\n         * tracking development iteration of an API server or the version of an API itself. It can also be used to\n         * represent the number of iterations of the collection as it is updated through its lifetime.\n         *\n         * Version is expressed in [semver](http://semver.org/) format.\n         */\n        version: Version;\n        /**\n         * Using this function, one can sync the values of collection variables from a reference object.\n         * @param obj - -\n         * @param [track] - -\n         */\n        syncVariablesFrom(obj: any, track?: boolean): any;\n        /**\n         * Transfer the variables in this scope to an object\n         * @param [obj] - -\n         */\n        syncVariablesTo(obj?: any): any;\n        /**\n         * Convert the collection to JSON compatible plain object\n         */\n        toJSON(): any;\n        /**\n         * Check whether an object is an instance of ItemGroup.\n         * @param obj - -\n         */\n        static isCollection(obj: any): boolean;\n        /**\n         * In this list, one can define the Scripts to be executed when an event is triggered. Events are\n         * triggered before certain actions are taken on a Collection, Request, etc. For example, executing a\n         * request causes the `prerequest` and the `test` events to be triggered.\n         * @example\n         * Executing a common test script for all requests in a collection\n         * var fs = require(\'fs\'), // needed to read JSON file from disk\n         *     Collection = require(\'postman-collection\').Collection,\n         *     myCollection;\n         *\n         * // Load a collection to memory from a JSON file on disk (say, sample-collection.json)\n         * myCollection = new Collection(JSON.stringify(fs.readFileSync(\'sample-collection.json\').toString()));\n         *\n         * // Add an event listener to the collection that listens to the `test` event.\n         * myCollection.events.add({\n         *     listen: \'test\',\n         *     script: {\n         *         exec: \'tests["Status code is 200"] = (responseCode.code === 200)\'\n         *     }\n         * });\n         */\n        events: EventList;\n    }\n\n    /**\n     * Contains a list of header elements\n     * @param parent - -\n     * @param cookies - -\n     */\n    export class CookieList extends PropertyList {\n        constructor(parent: any, cookies: object[]);\n        /**\n         * Checks if the given object is a CookieList\n         * @param obj - -\n         */\n        static isCookieList(obj: any): boolean;\n    }\n\n    export namespace Cookie {\n        /**\n         * The following is the object structure accepted as constructor parameter while calling `new Cookie(...)`. It is\n         * also the structure exported when Property.toJSON or Property.toObjectResolved is called on a\n         * Cookie instance.\n         * @example\n         * JSON definition of an example cookie\n         * {\n         *     "key": "my-cookie-name",\n         *     "expires": "1464769543832",\n         *      // UNIX timestamp, in *milliseconds*\n         *     "maxAge": "300",\n         *      // In seconds. In this case, the Cookie is valid for 5 minutes\n         *     "domain": "something.example.com",\n         *     "path": "/",\n         *     "secure": false,\n         *     "httpOnly": true,\n         *     "session": false,\n         *     "value": "my-cookie-value",\n         *     "extensions": [{\n         *         "key": "Priority",\n         *         "value": "HIGH"\n         *     }]\n         * }\n         * @property [key] - The name of the cookie. Some call it the "name".\n         * @property [value] - The value stored in the Cookie\n         * @property [expires] - Expires sets an expiry date for when a cookie gets deleted. It should either be a\n         * date object or timestamp string of date.\n         * @property [maxAge] - Max-age sets the time in seconds for when a cookie will be deleted.\n         * @property [domain] - Indicates the domain(s) for which the cookie should be sent.\n         * @property [path] - Limits the scope of the cookie to a specified path, e.g: "/accounts"\n         * @property [secure] - A secure cookie will only be sent to the server when a request is made using SSL and\n         * the HTTPS protocol.\n         * The idea that the contents of the cookie are of high value and could be potentially damaging to transmit\n         * as clear text.\n         * @property [httpOnly] - The idea behind HTTP-only cookies is to instruct a browser that a cookie should never\n         * be accessible via JavaScript through the document.cookie property. This feature was designed as a security measure\n         * to help prevent cross-site scripting (XSS) attacks perpetrated by stealing cookies via JavaScript.\n         * @property [hostOnly] - Indicates that this cookie is only valid for the given domain (and not its parent or\n         * child domains.)\n         * @property [session] - Indicates whether this is a Session Cookie. (A transient cookie, which is deleted at\n         * the end of an HTTP session.)\n         * @property [extensions] - Any extra attributes that are extensions to the original Cookie specification can be\n         * specified here.\n         * @property [extensions[].key] - Name of the extension.\n         * @property [extensions[].value] - Value of the extension\n         */\n        type definition = {\n            key?: string;\n            value?: string;\n            expires?: string;\n            maxAge?: number;\n            domain?: string;\n            path?: string;\n            secure?: boolean;\n            httpOnly?: boolean;\n            hostOnly?: boolean;\n            session?: boolean;\n            extensions?: {\n                key?: string;\n                value?: string;\n            };\n        };\n    }\n\n    /**\n     * A Postman Cookie definition that comprehensively represents an HTTP Cookie.\n     * @example\n     * Create a new Cookie\n     * var Cookie = require(\'postman-collection\').Cookie,\n     *     myCookie = new Cookie({\n     *          name: \'my-cookie-name\',\n     *          expires: \'1464769543832\', // UNIX timestamp, in *milliseconds*\n     *          maxAge: \'300\',  // In seconds. In this case, the Cookie is valid for 5 minutes\n     *          domain: \'something.example.com\',\n     *          path: \'/\',\n     *          secure: false,\n     *          httpOnly: true,\n     *          session: false,\n     *          value: \'my-cookie-value\',\n     *          extensions: [{\n     *              key: \'Priority\',\n     *              value: \'HIGH\'\n     *          }]\n     *     });\n     * @example\n     * Parse a Cookie Header\n     * var Cookie = require(\'postman-collection\').Cookie,\n     *     rawHeader = \'myCookie=myValue;Path=/;Expires=Sun, 04-Feb-2018 14:18:27 GMT;Secure;HttpOnly;Priority=HIGH\'\n     *     myCookie = new Cookie(rawHeader);\n     *\n     * console.log(myCookie.toJSON());\n     * @param [options] - Pass the initial definition of the Cookie.\n     */\n    export class Cookie extends PropertyBase {\n        constructor(options?: Cookie.definition);\n        /**\n         * The name of the cookie.\n         */\n        name: string;\n        /**\n         * Expires sets an expiry date for when a cookie gets deleted. It should either be a date object or\n         * timestamp string of date.\n         */\n        expires: Date | string;\n        /**\n         * Max-age sets the time in seconds for when a cookie will be deleted.\n         */\n        maxAge: number;\n        /**\n         * Indicates the domain(s) for which the cookie should be sent.\n         */\n        domain: string;\n        path: string;\n        /**\n         * A secure cookie will only be sent to the server when a request is made using SSL and the HTTPS protocol.\n         * The idea that the contents of the cookie are of high value and could be potentially damaging to transmit\n         * as clear text.\n         */\n        secure: boolean;\n        /**\n         * The idea behind HTTP-only cookies is to instruct a browser that a cookie should never be accessible via\n         * JavaScript through the document.cookie property. This feature was designed as a security measure to help\n         * prevent cross-site scripting (XSS) attacks perpetrated by stealing cookies via JavaScript.\n         */\n        httpOnly: boolean;\n        hostOnly: boolean;\n        /**\n         * Indicates whether this is a Session Cookie.\n         */\n        session: boolean;\n        value: string;\n        /**\n         * Any extra parameters that are not strictly a part of the Cookie spec go here.\n         */\n        extensions: any[];\n        /**\n         * Get the value of this cookie.\n         */\n        valueOf(): string;\n        /**\n         * Converts the Cookie to a single Set-Cookie header string.\n         */\n        toString(): string;\n        /**\n         * Check whether an object is an instance of PostmanCookie.\n         * @param obj - -\n         */\n        static isCookie(obj: any): boolean;\n        /**\n         * Stringifies an Array or PropertyList of Cookies into a single string.\n         * @param cookies - List of cookie definition object\n         */\n        static unparse(cookies: Cookie[]): string;\n        /**\n         * Unparses a single Cookie.\n         * @param cookie - Cookie definition object\n         */\n        static unparseSingle(cookie: Cookie): string;\n        /**\n         * Cookie header parser\n         * @param str - -\n         * @returns A plain cookie options object, use it to create a new Cookie\n         */\n        static parse(str: string): any;\n        /**\n         * Converts the Cookie to a single Set-Cookie header string.\n         * @param cookie - Cookie definition object\n         */\n        static stringify(cookie: Cookie): string;\n    }\n\n    export namespace Description {\n        type definition = {\n            content: string;\n            type: string;\n        };\n    }\n\n    /**\n     * This is one of the properties that are (if provided) processed by all other properties. Any property can have an\n     * instance of `Description` property assigned to it with the key name `description` and it should be treated as\n     * something that "describes" the property within which it belongs. Usually this property is used to generate\n     * documentation and other contextual information for a property in a Collection.\n     * @example\n     * Add a description to an instance of Collection\n     *  var SDK = require(\'postman-collection\'),\n     *     Collection = SDK.Collection,\n     *     Description = SDK.Description,\n     *     mycollection;\n     *\n     * // create a blank collection\n     * myCollection = new Collection();\n     * myCollection.description = new Description({\n     *     content: \'&lt;h1&gt;Hello World&lt;/h1&gt;&lt;p&gt;I am a Collection&lt;/p&gt;\',\n     *     type: \'text/html\'\n     * });\n     *\n     * // alternatively, you could also use the `.describe` method of any property to set or update the description of the\n     * // property.\n     * myCollection.describe(\'Hey! This is a cool collection.\');\n     * @param [definition] - The content of the description can be passed as a string when it\n     * is in `text/plain` format or otherwise be sent as part of an object adhering to the Description.definition\n     * structure having `content` and `type`.\n     */\n    export class Description {\n        constructor(definition?: Description.definition | string);\n        /**\n         * Updates the content of this description property.\n         * @param content - -\n         * @param [type] - -\n         */\n        update(content: string | Description.definition, type?: string): void;\n        /**\n         * The raw content of the description\n         */\n        content: string;\n        /**\n         * The mime-type of the description.\n         */\n        type: string;\n        /**\n         * Returns stringified Description.\n         */\n        toString(): string;\n        /**\n         * Creates a JSON representation of the Description (as a plain Javascript object).\n         */\n        toJSON(): any;\n        /**\n         * Checks whether a property is an instance of Description object.\n         * @param obj - -\n         */\n        static isDescription(obj: any): boolean;\n    }\n\n    /**\n     * A type of PropertyList, EventList handles resolving events from parents. If an ItemGroup contains\n     * a set of events, each Item in that group will inherit those events from its parent, and so on.\n     * @param parent - -\n     * @param populate - -\n     */\n    export class EventList extends PropertyList {\n        constructor(parent: any, populate: object[]);\n        /**\n         * Returns an array of listeners filtered by the listener name\n         * @param name - -\n         */\n        listeners(name: string): Event[];\n        /**\n         * Returns all events with specific listeners only within this list. Refer to EventList.listeners for\n         * procuring all inherited events\n         * @param name - -\n         */\n        listenersOwn(name: string): Event[];\n        /**\n         * Checks if the given object is an EventList.\n         * @param obj - -\n         */\n        static isEventList(obj: any): boolean;\n    }\n\n    export namespace Event {\n        /**\n         * @example\n         * Constructing an event\n         * var Event = require(\'postman-collection\').Event,\n         *     rawEvent = {\n         *         listen: \'test\',\n         *         script: \'tests["response code is 401"] = responseCode.code === 401\'\n         *     },\n         *     myEvent;\n         * myEvent = new Event(rawEvent);\n         * @property listen - The event-name that this script will be called for. Usually either "test" or "prerequest"\n         * @property script - A Script instance that will be executed on this event. In case of a\n         * string, a new Script is created.\n         */\n        type definition = {\n            listen: string;\n            script: Script | string;\n        };\n    }\n\n    /**\n     * A Postman event definition that refers to an event to be listened to and a script reference or definition to be\n     * executed.\n     * @param definition - Pass the initial definition of the event as the options parameter.\n     */\n    export class Event extends Property {\n        constructor(definition: Event.definition);\n        /**\n         * Update an event.\n         * @param definition - -\n         */\n        update(definition: Event.definition): void;\n        /**\n         * Name of the event that this instance is intended to listen to.\n         */\n        listen: string;\n        /**\n         * The script that is to be executed when this event is triggered.\n         */\n        script: Script;\n    }\n\n    export namespace FormParam {\n        /**\n         * @property key - The name ("key") of the form data parameter.\n         * @property value - The value of the parameter.\n         */\n        type definition = {\n            key: string;\n            value: string;\n        };\n    }\n\n    /**\n     * Represents a Form Data parameter, which can exist in request body.\n     * @param options - Pass the initial definition of the form data parameter.\n     */\n    export class FormParam {\n        constructor(options: FormParam.definition);\n        /**\n         * Converts the FormParameter to a single param string.\n         */\n        toString(): string;\n        /**\n         * Returns the value of the form parameter (if any).\n         */\n        valueOf(): any | string;\n        /**\n         * Convert the form-param to JSON compatible plain object.\n         */\n        toJSON(): any;\n        /**\n         * Declare the list index key, so that property lists of form parameters work correctly\n         */\n        static _postman_propertyIndexKey: string;\n        /**\n         * Form params can have multiple values, so set this to true.\n         */\n        static _postman_propertyAllowsMultipleValues: boolean;\n        /**\n         * Parse a form data string into an array of objects, where each object contains a key and a value.\n         */\n        static parse: any;\n    }\n\n    /**\n     * Contains a list of header elements\n     * @param parent - -\n     * @param headers - -\n     */\n    export class HeaderList extends PropertyList {\n        constructor(parent: any, headers: Header[]);\n        /**\n         * Gets size of a list of headers excluding standard header prefix.\n         */\n        contentSize(): number;\n        /**\n         * Checks if the given object is a HeaderList\n         * @param obj - -\n         */\n        static isHeaderList(obj: any): boolean;\n    }\n\n    export namespace Header {\n        /**\n         * @example\n         * Create a header\n         * var Header = require(\'postman-collection\').Header,\n         *     header = new Header({\n         *         key: \'Content-Type\',\n         *         value: \'application/xml\'\n         *     });\n         *\n         * console.log(header.toString()) // prints the string representation of the Header.\n         * @property key - The Header name (e.g: \'Content-Type\')\n         * @property value - The value of the header.\n         */\n        type definition = {\n            key: string;\n            value: string;\n        };\n    }\n\n    /**\n     * Represents an HTTP header, for requests or for responses.\n     * @example\n     * Parse a string of headers into an array of Header objects\n     * var Header = require(\'postman-collection\').Header,\n     *     headerString = \'Content-Type: application/json\\nUser-Agent: MyClientLibrary/2.0\\n\';\n     *\n     * var rawHeaders = Header.parse(headerString);\n     * console.log(rawHeaders); // [{ \'Content-Type\': \'application/json\', \'User-Agent\': \'MyClientLibrary/2.0\' }]\n     *\n     * var headers = rawHeaders.map(function (h) {\n     *     return new Header(h);\n     * });\n     *\n     * function assert(condition, message) {\n     *       if (!condition) {\n     *           message = message || "Assertion failed";\n     *           if (typeof Error !== "undefined") {\n     *               throw new Error(message);\n     *           }\n     *           throw message; //fallback\n     *       }\n     *       else {\n     *           console.log("Assertion passed");\n     *       }\n     *   }\n     *\n     * assert(headerString.trim() === Header.unparse(headers).trim());\n     * @param options - Pass the header definition as an object or the value of the header.\n     * If the value is passed as a string, it should either be in `name:value` format or the second "name" parameter\n     * should be used to pass the name as string\n     * @param [name] - optional override the header name or use when the first parameter is the header value as\n     * string.\n     */\n    export class Header extends Property {\n        constructor(options: Header.definition | string, name?: string);\n        /**\n         * Converts the header to a single header string.\n         */\n        toString(): string;\n        /**\n         * Return the value of this header.\n         */\n        valueOf(): string;\n        /**\n         * Assigns the given properties to the Header\n         * @param options - -\n         */\n        update(options: any): void;\n        /**\n         * The header Key\n         */\n        key: string;\n        /**\n         * The header value\n         */\n        value: string;\n        /**\n         * Parses a multi line header string into an array of Header.definition.\n         * @param headerString - -\n         */\n        static parse(headerString: string): any[];\n        /**\n         * Parses a single Header.\n         * @param header - -\n         */\n        static parseSingle(header: string): any;\n        /**\n         * Stringifies an Array or PropertyList of Headers into a single string.\n         * @param headers - -\n         * @param [separator = \'\\r\\n\'] - Specify a string for separating each header\n         */\n        static unparse(headers: any[] | PropertyList, separator?: string): string;\n        /**\n         * Unparses a single Header.\n         * @param header - -\n         */\n        static unparseSingle(header: string): string;\n        /**\n         * Check whether an object is an instance of PostmanHeader.\n         * @param obj - -\n         */\n        static isHeader(obj: any): boolean;\n        /**\n         * Create a new header instance\n         * @param [value] - Pass the header definition as an object or the value of the header.\n         * If the value is passed as a string, it should either be in `name:value` format or the second "name" parameter\n         * should be used to pass the name as string\n         * @param [name] - optional override the header name or use when the first parameter is the header value as\n         * string.\n         */\n        static create(value?: Header.definition | string, name?: string): Header;\n        /**\n         * This (optional) flag denotes whether this property is disabled or not. Usually, this is helpful when a\n         * property is part of a PropertyList. For example, in a PropertyList of Headers, the ones\n         * that are disabled can be filtered out and not processed.\n         */\n        disabled: boolean;\n    }\n\n    export namespace ItemGroup {\n        /**\n         * The following defines the object (or JSON) structure that one can pass to the ItemGroup while creating a new\n         * ItemGroup instance. This is also the object structure returned when `.toJSON()` is called on an ItemGroup instance.\n         * @example\n         * {\n         *     "name": "Echo Get Requests",\n         *     "id": "echo-get-requests",\n         *     "item": [{\n         *         "request": "https://postman-echo.com/get"\n         *     }, {\n         *         "request": "https://postman-echo.com/headers"\n         *     }],\n         *     "auth": {\n         *         "type": "basic",\n         *         "basic": {\n         *             "username": "jean",\n         *             "password": "{{somethingsecret}}"\n         *         }\n         *     },\n         *     "event": [{\n         *         "listen": "prerequest",\n         *         "script": {\n         *             "type": "text/javascript",\n         *             "exec": "console.log(new Date())"\n         *         }\n         *     }]\n         * }\n         */\n        type definition = {\n            item?: (ItemGroup.definition | Item.definition)[];\n            auth?: RequestAuth.definition;\n            event?: Event.definition[];\n        };\n    }\n\n    /**\n     * An ItemGroup represents a composite list of Item or ItemGroup. In terms of Postman App, ItemGroup\n     * represents a "Folder". This allows one to group Items into subsets that can have their own meaning. An\n     * ItemGroup also allows one to define a subset of common properties to be applied to each Item within it. For\n     * example, a `test` event defined on an ItemGroup is executed while testing any Item that belongs to that group.\n     * Similarly, ItemGroups can have a common {@RequestAuth} defined so that every Request, when processed,\n     * requires to be authenticated using the `auth` defined in the group.\n     *\n     * Essentially, Collection too is a special type of ItemGroup ;-).\n     * @example\n     * Add a new ItemGroup to a collection instance\n     * var Collection = require(\'postman-collection\').Collection,\n     *     ItemGroup = require(\'postman-collection\').ItemGroup,\n     *     myCollection;\n     *\n     * myCollection = new Collection(); // create an empty collection\n     * myCollection.items.add(new ItemGroup({ // add a folder called "blank folder"\n     *     "name": "This is a blank folder"\n     * }));\n     * @param [definition] - While creating a new instance of ItemGroup, one can provide the\n     * initial configuration of the item group with the requests it contains, the authentication applied to all\n     * requests, events that the requests responds to, etc.\n     */\n    export class ItemGroup extends Property {\n        constructor(definition?: ItemGroup.definition);\n        /**\n         * This is a PropertyList that holds the list of Items or ItemGroups belonging to a\n         * Collection or to an ItemGroup. Operation on an individual item in this list can be\n         * performed using various functions available to a PropertyList.\n         * @example\n         * Fetch empty ItemGroups in a list loaded from a file\n         * var fs = require(\'fs\'), // needed to read JSON file from disk\n         *     Collection = require(\'postman-collection\').Collection,\n         *     myCollection,\n         *     emptyGroups;\n         * // Load a collection to memory from a JSON file on disk (say, sample-collection.json)\n         * myCollection = new Collection(JSON.stringify(fs.readFileSync(\'sample-collection.json\').toString()));\n         *\n         * // Filter items in Collection root that is an empty ItemGroup\n         * emptyGroups = myCollection.items.filter(function (item) {\n         *     return item && item.items && (item.items.count() === 0);\n         * });\n         *\n         * // Log the emptyGroups array to check it\'s contents\n         * console.log(emptyGroups);\n         */\n        items: PropertyList;\n        /**\n         * One can define the default authentication method required for every item that belongs to this list.\n         * Individual Requests can override this in their own definitions. More on how to define an\n         * authentication method is outlined in the RequestAuth property.\n         * @example\n         * Define an entire ItemGroup (folder) or Collection to follow Basic Auth\n         * var fs = require(\'fs\'),\n         *     Collection = require(\'postman-collection\').Collection,\n         *     RequestAuth = require(\'postman-collection\').RequestAuth,\n         *     mycollection;\n         *\n         * // Create a collection having two requests\n         * myCollection = new Collection();\n         * myCollection.items.add([\n         *     { name: \'GET Request\', request: \'https://postman-echo.com/get?auth=basic\' },\n         *     { name: \'PUT Request\', request: \'https://postman-echo.com/put?auth=basic\' }\n         * ]);\n         *\n         * // Add basic auth to the Collection, to be applied on all requests.\n         * myCollection.auth = new RequestAuth({\n         *     type: \'basic\',\n         *     username: \'postman\',\n         *     password: \'password\'\n         * });\n         */\n        auth: RequestAuth;\n        /**\n         * Set of configurations used to alter the usual behavior of sending the request.\n         * @property disableBodyPruning - Disable body pruning for request methods like GET, HEAD etc.\n         */\n        protocolProfileBehavior: {\n            disableBodyPruning: boolean;\n        };\n        /**\n         * Finds the first item with the given name or id in the current ItemGroup.\n         * @param idOrName - -\n         */\n        oneDeep(idOrName: string): void;\n        /**\n         * Sets authentication method for all the items within this group\n         */\n        authorizeRequestsUsing: any;\n        /**\n         * Check whether an object is an instance of ItemGroup.\n         * @param obj - -\n         */\n        static isItemGroup(obj: any): boolean;\n    }\n\n    export namespace Item {\n        /**\n         * The following defines the object (or JSON) structure that one can pass to the Item while creating a new Item\n         * instance. This is also the object structure returned when `.toJSON()` is called on an Item instance.\n         * @example\n         * {\n         *     "name": "Get Headers from Echo",\n         *     "id": "my-request-1",\n         *     "description": "Makes a GET call to echo service and returns the client headers that were sent",\n         *\n         *     "request": {\n         *         "url": "https://postman-echo.com/headers",\n         *         "method": "GET"\n         *     }\n         * }\n         * @property [request] - A request represents an HTTP request. If a string, the string is assumed to\n         * be the request URL and the method is assumed to be \'GET\'.\n         * @property [responses] - Sample responses for this request can be stored along with the\n         * item definition.\n         * @property [events] - Postman allows you to configure scripts to run when specific events\n         * occur. These scripts are stored here, and can be referenced in the collection by their id.\n         */\n        type definition = {\n            request?: Request.definition;\n            responses?: Response.definition[];\n            events?: Event.definition[];\n        };\n    }\n\n    /**\n     * A Postman Collection Item that holds your request definition, responses and other stuff. An Item essentially is\n     * a HTTP request definition along with the sample responses and test scripts clubbed together. One or more of these\n     * items can be grouped together and placed in an ItemGroup and as such forms a Collection of\n     * requests.\n     * @example\n     * Add a new Item to a folder in a collection instance\n     * var Collection = require(\'postman-collection\').Collection,\n     *     Item = require(\'postman-collection\').Item,\n     *     myCollection;\n     *\n     * myCollection = new Collection({\n     *     "item": [{\n     *         "id": "my-folder-1",\n     *         "name": "The solo folder in this collection",\n     *         "item": [] // blank array indicates this is a folder\n     *     }]\n     * }); // create a collection with an empty folder\n     * // add a request to "my-folder-1" that sends a GET request\n     * myCollection.items.one("my-folder-1").items.add(new Item({\n     *     "name": "Send a GET request",\n     *     "id": "my-get-request",\n     *     "request": {\n     *         "url": "https://postman-echo.com/get",\n     *         "method": "GET"\n     *     }\n     * }));\n     * @param [definition] - While creating a new instance of Item, one can provide the initial\n     * configuration of the item with the the request it sends, the expected sample responses, tests, etc\n     */\n    export class Item extends Property {\n        constructor(definition?: Item.definition);\n        /**\n         * The instance of the Request object inside an Item defines the HTTP request that is supposed to be\n         * sent. It further contains the request method, url, request body, etc.\n         */\n        request: Request;\n        /**\n         * An Item also contains a list of sample responses that is expected when the request defined in the item is\n         * executed. The sample responses are useful in elaborating API usage and is also useful for other\n         * integrations that use the sample responses to do something - say a mock service.\n         */\n        responses: PropertyList;\n        /**\n         * Events are a set of of Scripts that are executed when certain activities are triggered on an\n         * Item. For example, on defining an event that listens to the "test" event, would cause the associated\n         * script of the event to be executed when the test runs.\n         * @example\n         * Add a script to be executed on "prerequest" event\n         * var Collection = require(\'postman-collection\').Collection,\n         *     Item = require(\'postman-collection\').Item,\n         *     myCollection;\n         *\n         * myCollection = new Collection({\n         *     "item": [{\n         *         "name": "Send a GET request",\n         *         "id": "my-get-request",\n         *         "request": {\n         *             "url": "https://postman-echo.com/get",\n         *             "method": "GET"\n         *         }\n         *     }]\n         * }); // create a collection with one request\n         *\n         * // add a pre-request script to the event list\n         * myCollection.items.one(\'my-get-request\').events.add({\n         *     "listen": "prerequest",\n         *     "script": {\n         *         "type": "text/javascript",\n         *         "exec": "console.log(new Date())"\n         *     }\n         * });\n         */\n        events: EventList;\n        /**\n         * Set of configurations used to alter the usual behavior of sending the request.\n         */\n        protocolProfileBehavior: any;\n        /**\n         * Fetches applicable AuthType from the current item.\n         */\n        getAuth(): RequestAuth;\n        /**\n         * Returns Events corresponding to a particular event name. If no name is given, returns all events. This\n         * is useful when you want to trigger all associated scripts for an event.\n         * @example\n         * Get all events for an item and evaluate their scripts\n         * var fs = require(\'fs\'), // needed to read JSON file from disk\n         *     Collection = require(\'postman-collection\').Collection,\n         *     myCollection;\n         *\n         * // Load a collection to memory from a JSON file on disk (say, sample-collection.json)\n         * myCollection = new Collection(JSON.stringify(fs.readFileSync(\'sample-collection.json\').toString()));\n         *\n         * // assuming the collection has a request called "my-request-1" in root, we get it\'s test events\n         * myCollection.items.one("my-request-1").getEvents("test").forEach(function (event) {\n         *     event.script && eval(event.script.toSource());\n         * });\n         * @param name - one of the available event types such as `test`, `prerequest`, `postrequest`, etc.\n         */\n        getEvents(name: string): Event[];\n        /**\n         * Sets authentication method for the request within this item\n         * @param type - -\n         * @param [options] - -\n         */\n        authorizeRequestUsing(type: string | RequestAuth.definition, options?: VariableList): void;\n        /**\n         * Check whether an object is an instance of PostmanItem.\n         * @param obj - -\n         */\n        static isItem(obj: any): boolean;\n    }\n\n    export namespace MutationTracker {\n        /**\n         * A JSON representation of a mutation on an object. Here objects mean instances of postman-collection classes.\n         * This captures the instruction and the parameters of the instruction so that it can be replayed on a different object.\n         * Mutations can be any change on an object. For example setting a key or unsetting a key.\n         *\n         * For example, the mutation to set `name` on an object to \'Bruce Wayne\' would look like [\'name\', \'Bruce Wayne\']. Where\n         * the first item is the key path and second item is the value. To add a property `punchLine` to the object it would be\n         * the same as updating the property i.e. [\'punchLine\', \'I\\\'m Batman\']. To remove a property `age` the mutation would\n         * look like [\'age\'].\n         *\n         * This format of representing changes is derived from\n         * http://json-delta.readthedocs.io/en/latest/philosophy.html.\n         *\n         * The `set` and `unset` are primitive instructions and can be derived from the mutation without explicitly stating the\n         * instruction. For more complex mutation the instruction would have to be explicitly stated.\n         */\n        type mutation = any[];\n        /**\n         * A JSON representation of the MutationTracker.\n         * @property stream - contains the stream mutations tracked\n         * @property compacted - contains a compacted version of the mutations\n         * @property [autoCompact = false] - when set to true, all new mutations would be compacted immediately\n         */\n        type definition = {\n            stream: any[];\n            compacted: any;\n            autoCompact?: boolean;\n        };\n    }\n\n    /**\n     * A MutationTracker allows to record mutations on any of object and store them. This stored mutations can be\n     * transported for reporting or to replay on similar objects.\n     * @param definition - serialized mutation tracker\n     */\n    export class MutationTracker extends PropertyBase {\n        constructor(definition: MutationTracker.definition);\n        /**\n         * Track a mutation.\n         * @param instruction - the type of mutation\n         * @param payload - mutation parameters\n         */\n        track(instruction: string, ...payload: any[]): void;\n        /**\n         * Compacts the recorded mutations removing duplicate mutations that apply on the same key path.\n         */\n        compact(): void;\n        /**\n         * Returns the number of mutations tracked so far.\n         */\n        count(): number;\n        /**\n         * Applies all the recorded mutations on a target object.\n         * @param target - Target to apply mutations. Must implement `applyMutation`.\n         */\n        applyOn(target: any): void;\n        /**\n         * Check whether an object is an instance of MutationTracker.\n         * @param obj - -\n         */\n        static isMutationTracker(obj: any): boolean;\n    }\n\n    export namespace PropertyBase {\n        type definition = {\n            description?: string | Description;\n        };\n    }\n\n    /**\n     * Base of all properties in Postman Collection. It defines the root for all standalone properties for postman\n     * collection.\n     * @param definition - -\n     */\n    export class PropertyBase {\n        constructor(definition: PropertyBase.definition);\n        /**\n         * Invokes the given iterator for every parent in the parent chain of the given element.\n         * @param options - A set of options for the parent chain traversal.\n         * @param [options.withRoot = false] - Set to true to include the collection object as well.\n         * @param iterator - The function to call for every parent in the ancestry chain.\n         */\n        forEachParent(options: {\n            withRoot?: boolean;\n        }, iterator: (...params: any[]) => any): void;\n        /**\n         * Tries to find the given property locally, and then proceeds to lookup in each parent,\n         * going up the chain as necessary. Lookup will continue until `customizer` returns a truthy value. If used\n         * without a customizer, the lookup will stop at the first parent that contains the property.\n         * @param property - -\n         * @param [customizer] - -\n         */\n        findInParents(property: string, customizer?: (...params: any[]) => any): any | undefined;\n        /**\n         * Returns the JSON representation of a property, which conforms to the way it is defined in a collection.\n         * You can use this method to get the instantaneous representation of any property, including a Collection.\n         */\n        toJSON(): void;\n        /**\n         * Returns the meta keys associated with the property\n         */\n        meta(): any;\n        /**\n         * Returns the parent of item\n         */\n        parent(): any | undefined;\n        /**\n         * Filter function to check whether a key starts with underscore or not. These usually are the meta properties. It\n         * returns `true` if the criteria is matched.\n         * @param value - -\n         * @param key - -\n         */\n        static propertyIsMeta(value: any, key: string): boolean;\n        /**\n         * Map function that removes the underscore prefix from an object key.\n         * @param value - -\n         * @param key - -\n         */\n        static propertyUnprefixMeta(value: any, key: string): string;\n        /**\n         * Static function which allows calling toJSON() on any object.\n         * @param obj - -\n         */\n        static toJSON(obj: any): any;\n    }\n\n    export namespace PropertyList {\n        /**\n         * An item constructed of PropertyList.Type.\n         */\n        type Type = any;\n    }\n\n    /**\n     * @param type - -\n     * @param parent - -\n     * @param populate - -\n     */\n    export class PropertyList {\n        constructor(type: (...params: any[]) => any, parent: any, populate: any[]);\n        /**\n         * Insert an element at the end of this list. When a reference member specified via second parameter is found, the\n         * member is inserted at an index before the reference member.\n         * @param item - -\n         * @param [before] - -\n         */\n        insert(item: PropertyList.Type, before?: PropertyList.Type | string): void;\n        /**\n         * Insert an element at the end of this list. When a reference member specified via second parameter is found, the\n         * member is inserted at an index after the reference member.\n         * @param item - -\n         * @param [after] - -\n         */\n        insertAfter(item: PropertyList.Type, after?: PropertyList.Type | string): void;\n        /**\n         * Adds or moves an item to the end of this list.\n         * @param item - -\n         */\n        append(item: PropertyList.Type): void;\n        /**\n         * Adds or moves an item to the beginning of this list.\n         * @param item - -\n         */\n        prepend(item: PropertyList.Type): void;\n        /**\n         * Add an item or item definition to this list.\n         * @param item - -\n         */\n        add(item: any | PropertyList.Type): void;\n        /**\n         * Add an item or update an existing item\n         * @param item - -\n         */\n        upsert(item: PropertyList.Type): boolean;\n        /**\n         * Removes all elements from the PropertyList for which the predicate returns truthy.\n         * @param predicate - -\n         * @param context - Optional context to bind the predicate to.\n         */\n        remove(predicate: ((...params: any[]) => any) | string | PropertyList.Type, context: any): void;\n        /**\n         * Removes all items in the list\n         */\n        clear(): void;\n        /**\n         * Load one or more items\n         * @param items - -\n         */\n        populate(items: any | any[]): void;\n        /**\n         * Clears the list and adds new items.\n         * @param items - -\n         */\n        repopulate(items: any | any[]): void;\n        /**\n         * Add or update values from a source list.\n         * @param source - -\n         * @param [prune = false] - Setting this to `true` will cause the extra items from the list to be deleted\n         */\n        assimilate(source: PropertyList | any[], prune?: boolean): void;\n        /**\n         * Returns a map of all items.\n         */\n        all(): any;\n        /**\n         * Get Item in this list by `ID` reference. If multiple values are allowed, the last value is returned.\n         * @param id - -\n         */\n        one(id: string): PropertyList.Type;\n        /**\n         * Get the value of an item in this list. This is similar to PropertyList.one barring the fact that it\n         * returns the value of the underlying type of the list content instead of the item itself.\n         * @param key - -\n         */\n        get(key: string | ((...params: any[]) => any)): PropertyList.Type | any;\n        /**\n         * Iterate on each item of this list.\n         * @param iterator - -\n         * @param context - -\n         */\n        each(iterator: (...params: any[]) => any, context: any): void;\n        /**\n         * @param rule - -\n         * @param context - -\n         */\n        filter(rule: (...params: any[]) => any, context: any): void;\n        /**\n         * Find an item within the item group\n         * @param rule - -\n         * @param [context] - -\n         */\n        find(rule: (...params: any[]) => any, context?: any): Item | ItemGroup;\n        /**\n         * Iterates over the property list.\n         * @param iterator - Function to call on each item.\n         * @param context - Optional context, defaults to the PropertyList itself.\n         */\n        map(iterator: (...params: any[]) => any, context: any): void;\n        /**\n         * Iterates over the property list and accumulates the result.\n         * @param iterator - Function to call on each item.\n         * @param accumulator - Accumulator initial value\n         * @param context - Optional context, defaults to the PropertyList itself.\n         */\n        reduce(iterator: (...params: any[]) => any, accumulator: any, context: any): void;\n        /**\n         * Returns the length of the PropertyList\n         */\n        count(): number;\n        /**\n         * Get a member of this list by it\'s index\n         * @param index - -\n         */\n        idx(index: number): PropertyList.Type;\n        /**\n         * Find the index of an item in this list\n         * @param item - -\n         */\n        indexOf(item: string | any): number;\n        /**\n         * Check whether an item exists in this list\n         * @param item - -\n         * @param [value] - -\n         */\n        has(item: string | PropertyList.Type, value?: any): boolean;\n        /**\n         * Iterates over all parents of the property list\n         * @param iterator - -\n         * @param [context] - -\n         */\n        eachParent(iterator: (...params: any[]) => any, context?: any): void;\n        /**\n         * Converts a list of Properties into an object where key is `_postman_propertyIndexKey` and value is determined\n         * by the `valueOf` function\n         * @param [excludeDisabled = false] - When set to true, disabled properties are excluded from the resultant\n         * object.\n         * @param [caseSensitive] - When set to true, properties are treated strictly as per their original\n         * case. The default value for this property also depends on the case insensitivity definition of the current\n         * property.\n         * @param [multiValue = false] - When set to true, only the first value of a multi valued property is\n         * returned.\n         * @param [sanitizeKeys = false] - When set to true, properties with falsy keys are removed.\n         */\n        toObject(excludeDisabled?: boolean, caseSensitive?: boolean, multiValue?: boolean, sanitizeKeys?: boolean): any;\n        /**\n         * Adds ability to convert a list to a string provided it\'s underlying format has unparse function defined.\n         */\n        toString(): string;\n        /**\n         * Checks whether an object is a PropertyList\n         * @param obj - -\n         */\n        static isPropertyList(obj: any): boolean;\n    }\n\n    export namespace Property {\n        /**\n         * @property [id] - A unique string that identifies the property.\n         * @property [name] - A distinctive and human-readable name of the property.\n         * @property [disabled] - Denotes whether the property is disabled or not.\n         * @property [info] - The meta information regarding the Property is provided as the `info` object.\n         * @property [info.id] - If set, this is used instead of the definition root\'s id.\n         * @property [info.name] - If set, this is used instead of the definition root\'s name.\n         */\n        type definition = {\n            id?: string;\n            name?: string;\n            disabled?: boolean;\n            info?: {\n                id?: string;\n                name?: string;\n            };\n        };\n    }\n\n    /**\n     * The Property class forms the base of all postman collection SDK elements. This is to be used only for SDK\n     * development or to extend the SDK with additional functionalities. All SDK classes (constructors) that are\n     * supposed to be identifyable (i.e. ones that can have a `name` and `id`) are derived from this class.\n     *\n     * For more information on what is the structure of the `definition` the function parameter, have a look at\n     * Property.definition.\n     *\n     * > This is intended to be a private class except for those who want to extend the SDK itself and add more\n     * > functionalities.\n     * @param [definition] - Every constructor inherited from `Property` is required to call the\n     * super constructor function. This implies that construction parameters of every inherited member is propagated\n     * to be sent up to this point.\n     */\n    export class Property extends PropertyBase {\n        constructor(definition?: Property.definition);\n        /**\n         * The `id` of the property is a unique string that identifies this property and can be used to refer to\n         * this property from relevant other places. It is a good practice to define the id or let the system\n         * auto generate a UUID if one is not defined for properties that require an `id`.\n         */\n        id: string;\n        /**\n         * A property can have a distinctive and human-readable name. This is to be used to display the name of the\n         * property within Postman, Newman or other runtimes that consume collection. In certain cases, the absence\n         * of name might cause the runtime to use the `id` as a fallback.\n         */\n        name: string;\n        /**\n         * This (optional) flag denotes whether this property is disabled or not. Usually, this is helpful when a\n         * property is part of a PropertyList. For example, in a PropertyList of Headers, the ones\n         * that are disabled can be filtered out and not processed.\n         */\n        disabled: boolean;\n        /**\n         * This function allows to describe the property for the purpose of detailed identification or documentation\n         * generation. This function sets or updates the `description` child-property of this property.\n         * @example\n         * Add a description to an instance of Collection\n         *  var Collection = require(\'postman-collection\').Collection,\n         *     mycollection;\n         *\n         * // create a blank collection\n         * myCollection = new Collection();\n         * myCollection.describe(\'Hey! This is a cool collection.\');\n         *\n         * console.log(myCollection.description.toString()); // read the description\n         * @param content - The content of the description can be provided here as a string. Note that it is expected\n         * that if the content is formatted in any other way than simple text, it should be specified in the subsequent\n         * `type` parameter.\n         * @param [type = "text/plain"] - The type of the content.\n         */\n        describe(content: string, type?: string): void;\n        /**\n         * Returns all the substitutions (variables) that are needed (or referenced) in this property (recursively).\n         * @example\n         * // returns [\'host\', \'path1\']\n         * prop.findSubstitutions({request: \'https://{{host}}/{{path1}}-action/\'});\n         */\n        findSubstitutions(): string[];\n        /**\n         * This function accepts a string followed by a number of variable sources as arguments. One or more variable\n         * sources can be provided and it will use the one that has the value in left-to-right order.\n         * @param str - -\n         * @param variables - -\n         */\n        static replaceSubstitutions(str: string, variables: VariableList | any | (VariableList | object)[]): string;\n        /**\n         * This function accepts an object followed by a number of variable sources as arguments. One or more variable\n         * sources can be provided and it will use the one that has the value in left-to-right order.\n         * @param obj - -\n         * @param variables - -\n         */\n        static replaceSubstitutionsIn(obj: any, variables: (VariableList | object)[]): any;\n        /**\n         * This function recursively traverses a variable and detects all instances of variable replacements\n         * within the string of the object\n         * @example\n         * // returns [\'host\', \'path1\']\n         * Property.findSubstitutions({request: \'https://{{host}}/{{path1}}-action/\'});\n         * @param obj - Any JS variable within which we are trying to discover {{variables}}\n         */\n        static findSubstitutions(obj: any): string[];\n    }\n\n    /**\n     * @example\n     * Create a new ProxyConfigList\n     * var ProxyConfigList = require(\'postman-collection\').ProxyConfigList,\n     *     myProxyConfig = new ProxyConfigList({}, [\n     *              {match: \'https://example.com/*\', host: \'proxy.com\', port: 8080, tunnel: true},\n     *              {match: \'http+https://example2.com/*\', host: \'proxy2.com\'},\n     *          ]);\n     * @param parent - -\n     * @param populate - The list of proxy objects\n     */\n    export class ProxyConfigList extends PropertyList {\n        constructor(parent: any, populate: any[]);\n        /**\n         * Matches and gets the proxy config for the particular url.\n         * @param [url] - The url for which the proxy config needs to be fetched\n         * @returns The matched proxyConfig object\n         */\n        resolve(url?: URL): ProxyConfig.definition;\n        /**\n         * Checks whether an object is a ProxyConfigList\n         * @param obj - -\n         */\n        static isProxyConfigList(obj: any): boolean;\n    }\n\n    export namespace ProxyConfig {\n        /**\n         * The following is the object structure accepted as constructor parameter while calling `new ProxyConfig(...)`. It is\n         * also the structure exported when Property.toJSON or Property.toObjectResolved is called on a\n         * Proxy instance.\n         * @example\n         * JSON definition of an example proxy object\n         * {\n         *     "match": "http+https://example.com/*",\n         *     "host": "proxy.com",\n         *     "port": "8080",\n         *     "tunnel": true,\n         *     "disabled": false,\n         *     "authenticate": true,\n         *     "username": "proxy_username",\n         *     "password": "proxy_password"\n         * }\n         * @property [match = \'http+https://*\\/*\'] - The match for which the proxy needs to be configured.\n         * @property [host = \'\'] - The proxy server url.\n         * @property [port = 8080] - The proxy server port number.\n         * @property [tunnel = false] - The tunneling option for the proxy request.\n         * @property [disabled = false] - To override the proxy for the particular url, you need to provide true.\n         * @property [authenticate = false] - To enable authentication for the proxy, you need to provide true.\n         * @property [username] - The proxy authentication username\n         * @property [password] - The proxy authentication password\n         */\n        type definition = {\n            match?: string;\n            host?: string;\n            port?: number;\n            tunnel?: boolean;\n            disabled?: boolean;\n            authenticate?: boolean;\n            username?: string;\n            password?: string;\n        };\n    }\n\n    /**\n     * A ProxyConfig definition that represents the proxy configuration for an url match.\n     * Properties can then use the `.toObjectResolved` function to procure an object representation of the property with\n     * all the variable references replaced by corresponding values.\n     * @example\n     * Create a new ProxyConfig\n     * var ProxyConfig = require(\'postman-collection\').ProxyConfig,\n     *     myProxyConfig = new ProxyConfig({\n     *          host: \'proxy.com\',\n     *          match: \'http+https://example.com/*\',\n     *          port: 8080,\n     *          tunnel: true,\n     *          disabled: false,\n     *          authenticate: true,\n     *          username: \'proxy_username\',\n     *          password: \'proxy_password\'\n     *     });\n     * @param [options] - Specifies object with props matches, server and tunnel.\n     */\n    export class ProxyConfig extends Property {\n        constructor(options?: ProxyConfig.definition);\n        /**\n         * The proxy server host or ip\n         */\n        static host: string;\n        /**\n         * The url mach for which the proxy has been associated with.\n         */\n        static match: string;\n        /**\n         * The proxy server port number\n         */\n        static port: number;\n        /**\n         * This represents whether the tunneling needs to done while proxying this request.\n         */\n        static tunnel: boolean;\n        /**\n         * Proxy bypass list\n         */\n        static bypass: UrlMatchPatternList;\n        /**\n         * Enable proxy authentication\n         */\n        static authenticate: boolean;\n        /**\n         * Proxy auth username\n         */\n        static username: string;\n        /**\n         * Proxy auth password\n         */\n        static password: string;\n        /**\n         * Updates the properties of the proxy object based on the options provided.\n         * @param options - The proxy object structure.\n         */\n        update(options: ProxyConfig.definition): void;\n        /**\n         * Updates the protocols in the match pattern\n         * @param protocols - The array of protocols\n         */\n        updateProtocols(protocols: string[]): void;\n        /**\n         * Tests the url string with the match provided.\n         * Follows the https://developer.chrome.com/extensions/match_patterns pattern for pattern validation and matching\n         * @param [urlStr] - The url string for which the proxy match needs to be done.\n         */\n        test(urlStr?: string): void;\n        /**\n         * Returns the proxy server url.\n         */\n        getProxyUrl(): string;\n        /**\n         * Returns the protocols supported.\n         */\n        getProtocols(): string[];\n        /**\n         * Check whether an object is an instance of PostmanItem.\n         * @param obj - -\n         */\n        static isProxyConfig(obj: any): boolean;\n    }\n\n    export namespace QueryParam {\n        /**\n         * @property key - The name ("key") of the query parameter.\n         * @property value - The value of the parameter.\n         */\n        type definition = {\n            key: string;\n            value: string;\n        };\n    }\n\n    /**\n     * Represents a URL query parameter, which can exist in request URL or POST data.\n     * @param options - Pass the initial definition of the query parameter. In case of\n     * string, the query parameter is parsed using QueryParam.parseSingle.\n     */\n    export class QueryParam extends Property {\n        constructor(options: FormParam.definition | string);\n        /**\n         * Converts the QueryParameter to a single param string.\n         */\n        toString(): string;\n        /**\n         * Updates the key and value of the query parameter\n         * @param param - -\n         * @param param.key - -\n         * @param [param.value] - -\n         */\n        update(param: {\n            key: string;\n            value?: string;\n        }): void;\n        /**\n         * Declare the list index key, so that property lists of query parameters work correctly\n         */\n        static _postman_propertyIndexKey: string;\n        /**\n         * Query params can have multiple values, so set this to true.\n         */\n        static _postman_propertyAllowsMultipleValues: boolean;\n        /**\n         * Parse a query string into an array of objects, where each object contains a key and a value.\n         * @param query - -\n         */\n        static parse(query: string): any[];\n        /**\n         * Parses a single query parameter.\n         * @param param - -\n         * @param idx - -\n         * @param all - array of all params, in case this is being called while parsing multiple params.\n         */\n        static parseSingle(param: string, idx: number, all: string[]): any;\n        /**\n         * Create a query string from array of parameters (or object of key-values).\n         * @param params - -\n         */\n        static unparse(params: any[] | any): string;\n        /**\n         * Takes a query param and converts to string\n         * @param obj - -\n         */\n        static unparseSingle(obj: any): string;\n    }\n\n    export namespace RequestAuth {\n        /**\n         * This defines the definition of the authentication method to be used.\n         * @example\n         * Sample auth definition for Basic Auth\n         * {\n         *   "type": "basic",\n         *   "basic": [\n         *     { "key": "username", "value": "postman" },\n         *     { "key": "password", "value": "secrets" }\n         *   ]\n         * }\n         * @property [type] - The Auth type to use. Check the names in AuthTypes\n         */\n        type definition = {\n            type?: string;\n        };\n    }\n\n    /**\n     * A Postman Auth definition that comprehensively represents different types of auth mechanisms available.\n     * @example\n     * Creating a request with two auth data and one selected\n     * var auth = new RequestAuth({\n     *   type: \'digest\',\n     *\n     *   basic: [\n     *     { key: "username", value: "postman" },\n     *     { key: "password", value: "secrets" }\n     *   ],\n     *   digest: [\n     *     { key: "nonce", value: "aef54cde" },\n     *     { key: "realm", value: "items.x" }\n     *   ]\n     * });\n     *\n     * // change the selected auth\n     * auth.use(\'basic\');\n     * @param options - Pass the initial definition of the Auth.\n     * @param [parent] - optionally pass the parent of this auth. aides variable resolution.\n     */\n    export class RequestAuth extends Property {\n        constructor(options: RequestAuth.definition, parent?: Property | PropertyList);\n        /**\n         * Update the parameters of a specific authentication type. If none is provided then it uses the one marked as to be\n         * used.\n         * @param options - -\n         * @param [type = this.type] - -\n         */\n        update(options: VariableList | any[] | any, type?: string): void;\n        /**\n         * Sets the authentication type to be used by this item.\n         * @param type - -\n         * @param options - note that options set here would replace all existing\n         * options for the particular auth\n         */\n        use(type: string, options: VariableList | any[] | any): void;\n        /**\n         * Returns the parameters of the selected auth type\n         */\n        parameters(): VariableList;\n        /**\n         * Clears the definition of an auth type.\n         * @param type - -\n         */\n        clear(type: string): void;\n        /**\n         * Determines whether an authentication type name is valid or not\n         * @param type - -\n         */\n        static isValidType(type: string): boolean;\n    }\n\n    export namespace RequestBody {\n        type definition = {\n            mode: string;\n            raw: string;\n            file: string;\n            graphql: any;\n            formdata: object[];\n            urlencoded: object[] | string;\n        };\n        /**\n         * MODES\n         */\n        enum MODES {\n            file = "file",\n            formdata = "formdata",\n            graphql = "graphql",\n            raw = "raw",\n            urlencoded = "urlencoded"\n        }\n    }\n\n    /**\n     * RequestBody holds data related to the request body. By default, it provides a nice wrapper for url-encoded,\n     * form-data, and raw types of request bodies.\n     * @param options - -\n     */\n    export class RequestBody extends PropertyBase {\n        constructor(options: any);\n        /**\n         * Set the content of this request data\n         * @param options - -\n         */\n        update(options: any): void;\n        /**\n         * Indicates the type of request data to use.\n         */\n        mode: string;\n        /**\n         * If the request has raw body data associated with it, the data is held in this field.\n         */\n        raw: string;\n        /**\n         * Any URL encoded body params go here.\n         */\n        urlencoded: PropertyList;\n        /**\n         * Form data parameters for this request are held in this field.\n         */\n        formdata: PropertyList;\n        /**\n         * Holds a reference to a file which should be read as the RequestBody. It can be a file path (when used\n         * with Node) or a unique ID (when used with the browser).\n         */\n        file: any;\n        /**\n         * If the request has raw graphql data associated with it, the data is held in this field.\n         */\n        graphql: any;\n        /**\n         * If the request has body Options associated with it, the data is held in this field.\n         */\n        options: any;\n        /**\n         * Indicates whether to include body in request or not.\n         */\n        disabled: boolean;\n        /**\n         * Stringifies and returns the request body.\n         */\n        toString(): any;\n        /**\n         * If the request body is set to a mode, but does not contain data, then we should not be sending it.\n         */\n        isEmpty(): boolean;\n        /**\n         * Convert the request body to JSON compatible plain object\n         */\n        toJSON(): any;\n    }\n\n    export namespace Request {\n        /**\n         * @property url - The URL of the request. This can be a Url.definition or a string.\n         * @property method - The request method, e.g: "GET" or "POST".\n         * @property header - The headers that should be sent as a part of this request.\n         * @property body - The request body definition.\n         * @property auth - The authentication/signing information for this request.\n         * @property proxy - The proxy information for this request.\n         * @property certificate - The certificate information for this request.\n         */\n        type definition = {\n            url: string | Url;\n            method: string;\n            header: Header.definition[];\n            body: RequestBody.definition;\n            auth: RequestAuth.definition;\n            proxy: ProxyConfig.definition;\n            certificate: Certificate.definition;\n        };\n    }\n\n    /**\n     * A Postman HTTP request object.\n     * @param options - -\n     */\n    export class Request extends Property {\n        constructor(options: Request.definition);\n        url: Url;\n        headers: HeaderList;\n        method: string;\n        /**\n         * Updates the different properties of the request.\n         * @param options - -\n         */\n        update(options: Request.definition): void;\n        body: RequestBody | undefined;\n        auth: RequestAuth;\n        proxy: ProxyConfig;\n        certificate: Certificate | undefined;\n        /**\n         * Sets authentication method for the request\n         * @param type - -\n         * @param [options] - -\n         */\n        authorizeUsing(type: string | RequestAuth.definition, options?: VariableList): void;\n        /**\n         * Returns an object where the key is a header name and value is the header value.\n         * @param [options] - -\n         * @param options.ignoreCase - When set to "true", will ensure that all the header keys are lower case.\n         * @param options.enabled - Only get the enabled headers\n         * @param options.multiValue - When set to "true", duplicate header values will be stored in an array\n         * @param options.sanitizeKeys - When set to "true", headers with falsy keys are removed\n         */\n        getHeaders(options?: {\n            ignoreCase: boolean;\n            enabled: boolean;\n            multiValue: boolean;\n            sanitizeKeys: boolean;\n        }): any;\n        /**\n         * Calls the given callback on each Header object contained within the request.\n         * @param callback - -\n         */\n        forEachHeader(callback: (...params: any[]) => any): void;\n        /**\n         * Adds a header to the PropertyList of headers.\n         * @param header - Can be a {Header} object, or a raw header object.\n         */\n        addHeader(header: Header | any): void;\n        /**\n         * Removes a header from the request.\n         * @param toRemove - A header object to remove, or a string containing the header key.\n         * @param options - -\n         * @param options.ignoreCase - If set to true, ignores case while removing the header.\n         */\n        removeHeader(toRemove: string | Header, options: {\n            ignoreCase: boolean;\n        }): void;\n        /**\n         * Updates or inserts the given header.\n         * @param header - -\n         */\n        upsertHeader(header: any): void;\n        /**\n         * Add query parameters to the request.\n         * @param params - -\n         */\n        addQueryParams(params: QueryParam[] | string): void;\n        /**\n         * Removes parameters passed in params.\n         * @param params - -\n         */\n        removeQueryParams(params: string | any[]): void;\n        /**\n         * Get the request size by computing the headers and body or using the\n         * actual content length header once the request is sent.\n         */\n        size(): any;\n        /**\n         * Converts the Request to a plain JavaScript object, which is also how the request is\n         * represented in a collection file.\n         */\n        toJSON(): any;\n        /**\n         * Creates a clone of this request\n         */\n        clone(): Request;\n        /**\n         * Check whether an object is an instance of ItemGroup.\n         * @param obj - -\n         */\n        static isRequest(obj: any): boolean;\n    }\n\n    export namespace Response {\n        /**\n         * @property code - define the response code\n         * @property [reason] - optionally, if the response has a non-standard response code reason, provide it here\n         */\n        type definition = {\n            code: number;\n            reason?: string;\n            header?: Header.definition[];\n            cookie?: Cookie.definition[];\n            body?: string;\n            stream?: Buffer | ArrayBuffer;\n            responseTime: number;\n        };\n        /**\n         * Returns the durations of each request phase in milliseconds\n         * @example\n         * Output\n         * Request.timingPhases(timings);\n         * {\n         *     prepare: Number,         // duration of request preparation\n         *     wait: Number,            // duration of socket initialization\n         *     dns: Number,             // duration of DNS lookup\n         *     tcp: Number,             // duration of TCP connection\n         *     secureHandshake: Number, // duration of secure handshake\n         *     firstByte: Number,       // duration of HTTP server response\n         *     download: Number,        // duration of HTTP download\n         *     process: Number,         // duration of response processing\n         *     total: Number            // duration entire HTTP round-trip\n         * }\n         * @property start - timestamp of the request sent from the client (in Unix Epoch milliseconds)\n         * @property offset - event timestamps in millisecond resolution relative to start\n         * @property offset.request - timestamp of the start of the request\n         * @property offset.socket - timestamp when the socket is assigned to the request\n         * @property offset.lookup - timestamp when the DNS has been resolved\n         * @property offset.connect - timestamp when the server acknowledges the TCP connection\n         * @property offset.secureConnect - timestamp when secure handshaking process is completed\n         * @property offset.response - timestamp when the first bytes are received from the server\n         * @property offset.end - timestamp when the last bytes of the response are received\n         * @property offset.done - timestamp when the response is received at the client\n         * @param timings - -\n         */\n        type timings = {\n            start: number;\n            offset: {\n                request: number;\n                socket: number;\n                lookup: number;\n                connect: number;\n                secureConnect: number;\n                response: number;\n                end: number;\n                done: number;\n            };\n        };\n        /**\n         * @property mimeType - sanitized mime type\n         * @property mimeFormat - format for the identified mime type\n         * @property charset - the normalized character set\n         * @property fileExtension - extension identified from the mime type\n         * @property fileName - file name extracted from disposition header\n         * @property contentType - sanitized content-type extracted from header\n         */\n        type ResponseContentInfo = {\n            mimeType: string;\n            mimeFormat: string;\n            charset: string;\n            fileExtension: string;\n            fileName: string;\n            contentType: string;\n        };\n    }\n\n    /**\n     * Response holds data related to the request body. By default, it provides a nice wrapper for url-encoded,\n     * form-data, and raw types of request bodies.\n     * @param options - -\n     */\n    export class Response extends Property {\n        constructor(options: Response.definition);\n        originalRequest: Request;\n        status: string;\n        code: number;\n        headers: HeaderList;\n        body: string;\n        cookies: CookieList;\n        /**\n         * Time taken for the request to complete.\n         */\n        responseTime: number;\n        /**\n         * Convert this response into a JSON serializable object. The _details meta property is omitted.\n         */\n        toJSON(): any;\n        /**\n         * Get the http response reason phrase based on the current response code.\n         */\n        reason(): string | undefined;\n        /**\n         * Get the response body as a string/text.\n         */\n        text(): string | undefined;\n        /**\n         * Get the response body as a JavaScript object. Note that it throws an error if the response is not a valid JSON\n         * @example\n         * // assuming that the response is stored in a collection instance `myCollection`\n         * var response = myCollection.items.one(\'some request\').responses.idx(0),\n         *     jsonBody;\n         * try {\n         *     jsonBody = response.json();\n         * }\n         * catch (e) {\n         *     console.log("There was an error parsing JSON ", e);\n         * }\n         * // log the root-level keys in the response JSON.\n         * console.log(\'All keys in json response: \' + Object.keys(json));\n         * @param [reviver] - -\n         * @param [strict = false] - Specify whether JSON parsing will be strict. This will fail on comments and BOM\n         */\n        json(reviver?: (...params: any[]) => any, strict?: boolean): any;\n        /**\n         * Get the JSON from response body that returns JSONP response.\n         * @param [reviver] - -\n         * @param [strict = false] - Specify whether JSON parsing will be strict. This will fail on comments and BOM\n         */\n        jsonp(reviver?: (...params: any[]) => any, strict?: boolean): void;\n        /**\n         * Extracts mime type, format, charset, extension and filename of the response content\n         * A fallback of default filename is given, if filename is not present in content-disposition header\n         * @returns - contentInfo for the response\n         */\n        contentInfo(): Response.ResponseContentInfo;\n        /**\n         * Converts the response to a dataURI that can be used for storage or serialisation. The data URI is formed using\n         * the following syntax `data:;baseg4, `.\n         */\n        dataURI(): string;\n        /**\n         * Get the response size by computing the same from content length header or using the actual response body.\n         */\n        size(): number;\n        /**\n         * Check whether an object is an instance of ItemGroup.\n         * @param obj - -\n         */\n        static isResponse(obj: any): boolean;\n        /**\n         * Converts the response object from the request module to the postman responseBody format\n         * @param response - The response object, as received from the request module\n         * @param cookies - -\n         * @returns The transformed responseBody\n         */\n        static createFromNode(response: any, cookies: any): any;\n    }\n\n    /**\n     * Postman scripts that are executed upon events on a collection  / request such as test and pre request.\n     * @param options - -\n     */\n    export class Script extends Property {\n        constructor(options: any);\n        /**\n         * Converts the script lines array to a single source string.\n         */\n        toSource(): string;\n        /**\n         * Updates the properties of a Script.\n         * @param [options] - -\n         * @param [options.type] - Script type\n         * @param [options.src] - Script source url\n         * @param [options.exec] - Script to execute\n         */\n        update(options?: {\n            type?: string;\n            src?: string;\n            exec?: string[] | string;\n        }): void;\n        type: string;\n        src: Url;\n        exec: string[];\n        /**\n         * Check whether an object is an instance of ItemGroup.\n         * @param obj - -\n         */\n        static isScript(obj: any): boolean;\n    }\n\n    /**\n     * Defines a URL.\n     * @param options - -\n     */\n    export class Url extends PropertyBase {\n        constructor(options: any | string);\n        /**\n         * Set a URL.\n         * @param url - -\n         */\n        update(url: string | any): void;\n        auth: any;\n        protocol: string;\n        port: string;\n        path: string[];\n        hash: string;\n        host: string[];\n        query: PropertyList;\n        variables: VariableList;\n        /**\n         * Add query parameters to the URL.\n         * @param params - Key value pairs to add to the URL.\n         */\n        addQueryParams(params: any | string): void;\n        /**\n         * Removes query parameters from the URL.\n         * @param params - Params should be an array of strings, or an array of\n         * actual query parameters, or a string containing the parameter key.\n         */\n        removeQueryParams(params: QueryParam[] | string[] | string): void;\n        /**\n         * Unparses a {PostmanUrl} into a string.\n         * @param [forceProtocol] - Forces the URL to have a protocol\n         */\n        toString(forceProtocol?: boolean): string;\n        /**\n         * Returns the request path, with a leading \'/\'.\n         * @param [unresolved = false] - -\n         */\n        getPath(unresolved?: boolean): string;\n        /**\n         * Returns the stringified query string for this URL.\n         */\n        getQueryString(): string;\n        /**\n         * Returns the complete path, including the query string.\n         * @example\n         * /something/postman?hi=notbye\n         */\n        getPathWithQuery(): any | string;\n        /**\n         * Returns the host part of the URL\n         */\n        getHost(): string;\n        /**\n         * Returns the host *and* port (if any), separated by a ":"\n         * @param [forcePort = false] - forces the port to be added even for the protocol default ones (89, 443)\n         */\n        getRemote(forcePort?: boolean): string;\n        /**\n         * Parses a string to a PostmanUrl, decomposing the URL into it\'s constituent parts,\n         * such as path, host, port, etc.\n         * @param url - -\n         */\n        static parse(url: string): any;\n        /**\n         * Checks whether an object is a Url\n         * @param obj - -\n         */\n        static isUrl(obj: any): boolean;\n    }\n\n    /**\n     * @param parent - -\n     * @param populate - -\n     */\n    export class VariableList extends PropertyList {\n        constructor(parent: Property, populate: any | any[]);\n        /**\n         * Replaces the variable tokens inside a string with its actual values.\n         * @param str - -\n         * @param [overrides] - additional objects to lookup for variable values\n         */\n        replace(str: string, overrides?: any): string;\n        /**\n         * Recursively replace strings in an object with instances of variables. Note that it clones the original object. If\n         * the `mutate` param is set to true, then it replaces the same object instead of creating a new one.\n         * @param obj - -\n         * @param [overrides] - additional objects to lookup for variable values\n         * @param [mutate = false] - -\n         */\n        substitute(obj: any[] | any, overrides?: object[], mutate?: boolean): any[] | any;\n        /**\n         * Using this function, one can sync the values of this variable list from a reference object.\n         * @param obj - -\n         * @param [track] - -\n         * @param [prune = true] - -\n         */\n        syncFromObject(obj: any, track?: boolean, prune?: boolean): any;\n        /**\n         * Transfer all variables from this list to an object\n         * @param [obj] - -\n         */\n        syncToObject(obj?: any): any;\n        /**\n         * Checks whether an object is a VariableList\n         * @param obj - -\n         */\n        static isVariableList(obj: any): boolean;\n    }\n\n    export namespace VariableScope {\n        /**\n         * Environment and Globals of postman is exported and imported in a specified data structure. This data structure can be\n         * passed on to the constructor parameter of VariableScope or VariableList to instantiate an instance of\n         * the same with pre-populated values from arguments.\n         * @example\n         * JSON definition of a VariableScope (environment, globals, etc)\n         * {\n         *   "name": "globals",\n         *   "values": [{\n         *     "key": "var-1",\n         *     "value": "value-1"\n         *   }, {\n         *     "key": "var-2",\n         *     "value": "value-2"\n         *   }]\n         * }\n         * @property [id] - ID of the scope\n         * @property [name] - A name of the scope\n         * @property [values] - A list of variables defined in an array in form of `{name:String,\n         * value:String}`\n         */\n        type definition = {\n            id?: string;\n            name?: string;\n            values?: Variable.definition[];\n        };\n    }\n\n    /**\n     * VariableScope is a representation of a list of variables in Postman, such as the environment variables or the\n     * globals. Using this object, it is easy to perform operations on this list of variables such as get a variable or\n     * set a variable.\n     * @example\n     * Load a environment from file, modify and save back\n     * var fs = require(\'fs\'), // assuming NodeJS\n     *     env,\n     *     sum;\n     *\n     * // load env from file assuming it has initial data\n     * env = new VariableScope(JSON.parse(fs.readFileSync(\'./my-postman-environment.postman_environment\').toString()));\n     *\n     * // get two variables and add them\n     * sum = env.get(\'one-var\') + env.get(\'another-var\');\n     *\n     * // save it back in environment and write to file\n     * env.set(\'sum\', sum, \'number\');\n     * fs.writeFileSync(\'./sum-of-vars.postman_environment\', JSON.stringify(env.toJSON()));\n     * @param definition - The constructor accepts an initial set of values for initialising\n     * the scope\n     * @param [layers] - Additional parent scopes to search for and resolve variables\n     */\n    export class VariableScope extends Property {\n        constructor(definition: VariableScope.definition, layers?: VariableList[]);\n        /**\n         * Converts a list of Variables into an object where key is `_postman_propertyIndexKey` and value is determined\n         * by the `valueOf` function\n         * @param excludeDisabled - -\n         * @param caseSensitive - -\n         */\n        toObject(excludeDisabled: boolean, caseSensitive: boolean): any;\n        /**\n         * Determines whether one particular variable is defined in this scope of variables.\n         * @param key - The name of the variable to check\n         * @returns - Returns true if an enabled variable with given key is present in current or parent scopes,\n         *                      false otherwise\n         */\n        has(key: string): boolean;\n        /**\n         * Fetches a variable from the current scope or from parent scopes if present.\n         * @param key - The name of the variable to get.\n         * @returns The value of the specified variable across scopes.\n         */\n        get(key: string): any;\n        /**\n         * Creates a new variable, or updates an existing one.\n         * @param key - The name of the variable to set.\n         * @param value - The value of the variable to be set.\n         * @param [type] - Optionally, the value of the variable can be set to a type\n         */\n        set(key: string, value: any, type?: Variable.types): void;\n        /**\n         * Removes the variable with the specified name.\n         * @param key - -\n         */\n        unset(key: string): void;\n        /**\n         * Removes *all* variables from the current scope. This is a destructive action.\n         */\n        clear(): void;\n        /**\n         * Replace all variable names with their values in the given template.\n         * @param template - A string or an object to replace variables in\n         * @returns The string or object with variables (if any) substituted with their values\n         */\n        replaceIn(template: string | any): string | any;\n        /**\n         * Enable mutation tracking.\n         * @param [options] - Options for Mutation Tracker. See MutationTracker\n         */\n        enableTracking(options?: MutationTracker.definition): void;\n        /**\n         * Disable mutation tracking.\n         */\n        disableTracking(): void;\n        /**\n         * Convert this variable scope into a JSON serialisable object. Useful to transport or store, environment and\n         * globals as a whole.\n         */\n        toJSON(): any;\n        /**\n         * Check whether an object is an instance of VariableScope.\n         * @param obj - -\n         */\n        static isVariableScope(obj: any): boolean;\n    }\n\n    export namespace Variable {\n        /**\n         * The object representation of a Variable consists the variable value and type. It also optionally includes the `id`\n         * and a friendly `name` of the variable. The `id` and the `name` of a variable is usually managed and used when a\n         * variable is made part of a VariableList instance.\n         * @example\n         * {\n         *     "id": "my-var-1",\n         *     "name": "MyFirstVariable",\n         *     "value": "Hello World",\n         *     "type": "string"\n         * }\n         * @property [value] - The value of the variable that will be stored and will be typecast to the `type`\n         * set in the variable or passed along in this parameter.\n         * @property [type] - The type of this variable from the list of types defined at Variable.types.\n         */\n        type definition = {\n            value?: any;\n            type?: string;\n        };\n        /**\n         * The possible supported types of a variable is defined here. The keys defined here are the possible values of\n         * Variable.type.\n         *\n         * Additional variable types can be supported by adding the type-casting function to this enumeration.\n         */\n        enum types {\n            /**\n             * When a variable\'s `type` is set to "string", it ensures that Variable.get converts the value of the\n             * variable to a string before returning the data.\n             */\n            string = "String",\n            /**\n             * A boolean type of variable can either be set to `true` or `false`. Any other value set is converted to\n             * Boolean when procured from Variable.get.\n             */\n            boolean = "Boolean",\n            /**\n             * A "number" type variable ensures that the value is always represented as a number. A non-number type value\n             * is returned as `NaN`.\n             */\n            number = "Number",\n            /**\n             * A "array" type value stores Array data format\n             */\n            array = "{\\"in\\":\\"\\",\\"out\\":\\"\\"}",\n            /**\n             * A "object" type value stores Object data format\n             */\n            object = "{\\"in\\":\\"\\",\\"out\\":\\"\\"}",\n            /**\n             * Free-form type of a value. This is the default for any variable, unless specified otherwise. It ensures that\n             * the variable can store data in any type and no conversion is done while using Variable.get.\n             */\n            any = "{\\"in\\":\\"\\",\\"out\\":\\"\\"}"\n        }\n    }\n\n    /**\n     * A variable inside a collection is similar to variables in any programming construct. The variable has an\n     * identifier name (provided by its id) and a value. A variable is optionally accompanied by a variable type. One\n     * or more variables can be associated with a collection and can be referred from anywhere else in the collection\n     * using the double-brace {{variable-id}} format. Properties can then use the `.toObjectResolved` function to\n     * procure an object representation of the property with all variable references replaced by corresponding values.\n     * @param [definition] - Specify the initial value and type of the variable.\n     */\n    export class Variable extends Property {\n        constructor(definition?: Variable.definition);\n        type: Variable.types;\n        value: any;\n        /**\n         * The name of the variable. This is used for referencing this variable from other locations and scripts\n         */\n        key: string;\n        /**\n         * Gets the value of the variable.\n         */\n        get(): Variable.types;\n        /**\n         * Sets the value of the variable.\n         * @param value - -\n         */\n        set(value: any): void;\n        /**\n         * An alias of this.get and this.set.\n         * @param [value] - -\n         */\n        valueOf(value?: any): any;\n        /**\n         * Returns the stringified value of the variable.\n         */\n        toString(): string;\n        /**\n         * Typecasts a value to the Variable.types of this Variable. Returns the value of the variable\n         * converted to the type specified in Variable.type.\n         * @param value - -\n         */\n        cast(value: any): any;\n        /**\n         * Sets or gets the type of the value.\n         * @param typeName - -\n         * @param _noCast - -\n         * @returns - returns the current type of the variable from the list of Variable.types\n         */\n        valueType(typeName: string, _noCast: boolean): string;\n        /**\n         * Updates the type and value of a variable from an object or JSON definition of the variable.\n         * @param options - -\n         */\n        update(options: Variable.definition): void;\n        /**\n         * @param obj - -\n         */\n        static isVariable(obj: any): boolean;\n        /**\n         * This (optional) flag denotes whether this property is disabled or not. Usually, this is helpful when a\n         * property is part of a PropertyList. For example, in a PropertyList of Headers, the ones\n         * that are disabled can be filtered out and not processed.\n         */\n        disabled: boolean;\n    }\n\n    export namespace Version {\n        type definition = any | string;\n    }\n\n    /**\n     * Defines a Version.\n     * @param definition - -\n     */\n    export class Version extends PropertyBase {\n        constructor(definition: Version.definition);\n        /**\n         * Set the version value as string or object with separate components of version\n         * @param value - -\n         */\n        set(value: any | string): void;\n        /**\n         * The raw URL string. If Version.set is called with a string parameter, the string is saved here\n         * before parsing various Version components.\n         */\n        raw: string;\n        major: string;\n        minor: string;\n        patch: string;\n        prerelease: string;\n        build: string;\n        string: string;\n    }\n\n    /**\n     * UrlMatchPattern is a list of UrlMatchPatterns.\n     * This allows you to test for any url over a list of match patterns.\n     * @example\n     * An example UrlMatchPatternList\n     * var matchPatternList = new UrlMatchPatternList([\'https://*.google.com/*\']);\n     * @param parent - -\n     * @param list - -\n     */\n    export class UrlMatchPatternList extends PropertyList {\n        constructor(parent: any, list: string[]);\n        /**\n         * Tests the url string with the match pattern list provided to see if it matches any of it.\n         * Follows the https://developer.chrome.com/extensions/match_patterns pattern for pattern validation and matching\n         * @param [urlStr] - The url string for which the proxy match needs to be done.\n         */\n        test(urlStr?: string): boolean;\n    }\n\n    export namespace UrlMatchPattern {\n        /**\n         * @property pattern - The url match pattern string\n         */\n        type definition = {\n            pattern: string;\n        };\n    }\n\n    /**\n     * UrlMatchPattern allows to create rules to define Urls to match for.\n     * It is based on Google\'s Match Pattern - https://developer.chrome.com/extensions/match_patterns\n     * @example\n     * An example UrlMatchPattern\n     * var matchPattern = new UrlMatchPattern(\'https://*.google.com/*\');\n     * @param options - -\n     */\n    export class UrlMatchPattern extends Property {\n        constructor(options: UrlMatchPattern.definition);\n        /**\n         * The url match pattern string\n         */\n        static pattern: string;\n        /**\n         * Assigns the given properties to the UrlMatchPattern.\n         * @param options - -\n         */\n        update(options: any): void;\n        /**\n         * Tests if the given protocol string, is allowed by the pattern.\n         * @param [protocol] - The protocol to be checked if the pattern allows.\n         */\n        testProtocol(protocol?: string): boolean;\n        /**\n         * Returns the protocols supported\n         */\n        getProtocols(): string[];\n        /**\n         * Tests if the given host string, is allowed by the pattern.\n         * @param [host] - The host to be checked if the pattern allows.\n         */\n        testHost(host?: string): boolean;\n        /**\n         * Tests if the current pattern allows the given port.\n         * @param port - The port to be checked if the pattern allows.\n         * @param protocol - Protocol to refer default port.\n         */\n        testPort(port: string, protocol: string): boolean;\n        /**\n         * Tests if the current pattern allows the given path.\n         * @param [path] - The path to be checked if the pattern allows.\n         */\n        testPath(path?: string): boolean;\n        /**\n         * Tests the url string with the match pattern provided.\n         * Follows the https://developer.chrome.com/extensions/match_patterns pattern for pattern validation and matching\n         * @param [urlStr] - The url string for which the proxy match needs to be done.\n         */\n        test(urlStr?: string): boolean;\n        /**\n         * Returns a string representation of the match pattern\n         * @returns pattern\n         */\n        toString(): string;\n        /**\n         * Returns the JSON representation.\n         */\n        toJSON(): any;\n        /**\n         * Multiple protocols in the match pattern should be separated by this string\n         */\n        static readonly PROTOCOL_DELIMITER: string;\n        /**\n         * String representation for matching all urls - \n         */\n        static readonly MATCH_ALL_URLS: string;\n    }\n\n}\n'},"./node_modules/raw-loader/dist/cjs.js!./node_modules/postman-sandbox/types/sandbox/prerequest.d.ts":function(e,t,n){"use strict";n.r(t),t.default='// Type definitions for postman-sandbox 3.5.7\n// Project: https://github.com/postmanlabs/postman-sandbox\n// Definitions by: PostmanLabs\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.4\n/// <reference types="node" />\ndeclare var postman: PostmanLegacy;\n\ndeclare interface PostmanLegacy {\n    /***\n     * Sets the next request to be executed.\n     * @param requestName Name of the next request to be executed.\n     */\n    setNextRequest(requestName: string): void;\n}\n\ndeclare class Postman {\n    constructor(bridge: EventEmitter, execution: Execution, onRequest: (...params: any[]) => any, cookieStore: any);\n    /**\n     * The pm.info object contains information pertaining to the script being executed.\n     * Useful information such as the request name, request Id, and iteration count are\n     * stored inside of this object.\n     */\n    info: Info;\n    globals: import("postman-collection").VariableScope;\n    environment: import("postman-collection").VariableScope;\n    collectionVariables: import("postman-collection").VariableScope;\n    variables: import("postman-collection").VariableScope;\n    /**\n     * The iterationData object contains data from the data file provided during a collection run.\n     */\n    iterationData: import("postman-collection").VariableScope;\n    /**\n     * The request object inside pm is a representation of the request for which this script is being run.\n     * For a pre-request script, this is the request that is about to be sent and when in a test script,\n     * this is the representation of the request that was sent.\n     */\n    request: import("postman-collection").Request;\n    /**\n     * The cookies object contains a list of cookies that are associated with the domain\n     * to which the request was made.\n     */\n    cookies: import("postman-collection").CookieList;\n    visualizer: Visualizer;\n    /**\n     * Allows one to send request from script asynchronously.\n     */\n    sendRequest(req: import("postman-collection").Request | string, callback: (...params: any[]) => any): void;\n    expect: Chai.ExpectStatic;\n}\n\n/**\n * Contains information pertaining to the script execution\n */\ndeclare interface Info {\n    /**\n     * Contains information whether the script being executed is a "prerequest" or a "test" script.\n     */\n    eventName: string;\n    /**\n     * Is the value of the current iteration being run.\n     */\n    iteration: number;\n    /**\n     * Is the total number of iterations that are scheduled to run.\n     */\n    iterationCount: number;\n    /**\n     * The saved name of the individual request being run.\n     */\n    requestName: string;\n    /**\n     * The unique guid that identifies the request being run.\n     */\n    requestId: string;\n}\n\ndeclare interface Visualizer {\n    /**\n     * Set visualizer template and its options\n     * @param template - visualisation layout in form of template\n     * @param [data] - data object to be used in template\n     * @param [options] - options to use while processing the template\n     */\n    set(template: string, data?: any, options?: any): void;\n    /**\n     * Clear all visualizer data\n     */\n    clear(): void;\n}\n\n/**\n * The pm object encloses all information pertaining to the script being executed and\n * allows one to access a copy of the request being sent or the response received.\n * It also allows one to get and set environment and global variables.\n */\ndeclare var pm: Postman;\n\ndeclare interface PostmanCookieJar {\n    /**\n     * Get the cookie value with the given name.\n     */\n    get(url: string, name: string, callback: (...params: any[]) => any): void;\n    /**\n     * Get all the cookies for the given URL.\n     */\n    getAll(url: string, options?: any, callback: (...params: any[]) => any): void;\n    /**\n     * Set or update a cookie.\n     */\n    set(url: string, name: string | any, value?: string | ((...params: any[]) => any), callback?: (...params: any[]) => any): void;\n    /**\n     * Remove single cookie with the given name.\n     */\n    unset(url: string, name: string, callback?: (...params: any[]) => any): void;\n    /**\n     * Remove all the cookies for the given URL.\n     */\n    clear(url: string, callback?: (...params: any[]) => any): void;\n}\n\n\n\ninterface Postman {\n    test: Test;\n}\n\ninterface Test {\n\n    /**\n     * You can use this function to write test specifications inside either the Pre-request Script or Tests sandbox.\n     * Writing tests inside this function allows you to name the test accurately and this function also ensures the\n     * rest of the script is not blocked even if there are errors inside the function.\n     * @param testName\n     * @param specFunction\n     */\n    (testName: string, specFunction: Function): void\n\n    /**\n     * Get the total number tests from a specific location.\n     */\n    index(): number,\n\n    /**\n     * By appending .skip(), you may tell test runner to ignore test case.\n     * @param testName\n     */\n    skip(testName: string): void\n}\n\ndeclare module "postman-collection" {\n\ninterface CookieList {\n    jar() : PostmanCookieJar\n}\n\n}\n'},"./node_modules/raw-loader/dist/cjs.js!./node_modules/postman-sandbox/types/sandbox/test.d.ts":function(e,t,n){"use strict";n.r(t),t.default='// Type definitions for postman-sandbox 3.5.7\n// Project: https://github.com/postmanlabs/postman-sandbox\n// Definitions by: PostmanLabs\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.4\n/// <reference types="node" />\ndeclare var postman: PostmanLegacy;\n\ndeclare interface PostmanLegacy {\n    /***\n     * Sets the next request to be executed.\n     * @param requestName Name of the next request to be executed.\n     */\n    setNextRequest(requestName: string): void;\n}\n\ndeclare class Postman {\n    constructor(bridge: EventEmitter, execution: Execution, onRequest: (...params: any[]) => any, cookieStore: any);\n    /**\n     * The pm.info object contains information pertaining to the script being executed.\n     * Useful information such as the request name, request Id, and iteration count are\n     * stored inside of this object.\n     */\n    info: Info;\n    globals: import("postman-collection").VariableScope;\n    environment: import("postman-collection").VariableScope;\n    collectionVariables: import("postman-collection").VariableScope;\n    variables: import("postman-collection").VariableScope;\n    /**\n     * The iterationData object contains data from the data file provided during a collection run.\n     */\n    iterationData: import("postman-collection").VariableScope;\n    /**\n     * The request object inside pm is a representation of the request for which this script is being run.\n     * For a pre-request script, this is the request that is about to be sent and when in a test script,\n     * this is the representation of the request that was sent.\n     */\n    request: import("postman-collection").Request;\n    /**\n     * Inside the test scripts, the pm.response object contains all information pertaining\n     * to the response that was received.\n     */\n    response: import("postman-collection").Response;\n    /**\n     * The cookies object contains a list of cookies that are associated with the domain\n     * to which the request was made.\n     */\n    cookies: import("postman-collection").CookieList;\n    visualizer: Visualizer;\n    /**\n     * Allows one to send request from script asynchronously.\n     */\n    sendRequest(req: import("postman-collection").Request | string, callback: (...params: any[]) => any): void;\n    expect: Chai.ExpectStatic;\n}\n\n/**\n * Contains information pertaining to the script execution\n */\ndeclare interface Info {\n    /**\n     * Contains information whether the script being executed is a "prerequest" or a "test" script.\n     */\n    eventName: string;\n    /**\n     * Is the value of the current iteration being run.\n     */\n    iteration: number;\n    /**\n     * Is the total number of iterations that are scheduled to run.\n     */\n    iterationCount: number;\n    /**\n     * The saved name of the individual request being run.\n     */\n    requestName: string;\n    /**\n     * The unique guid that identifies the request being run.\n     */\n    requestId: string;\n}\n\ndeclare interface Visualizer {\n    /**\n     * Set visualizer template and its options\n     * @param template - visualisation layout in form of template\n     * @param [data] - data object to be used in template\n     * @param [options] - options to use while processing the template\n     */\n    set(template: string, data?: any, options?: any): void;\n    /**\n     * Clear all visualizer data\n     */\n    clear(): void;\n}\n\n/**\n * The pm object encloses all information pertaining to the script being executed and\n * allows one to access a copy of the request being sent or the response received.\n * It also allows one to get and set environment and global variables.\n */\ndeclare var pm: Postman;\n\ndeclare interface PostmanCookieJar {\n    /**\n     * Get the cookie value with the given name.\n     */\n    get(url: string, name: string, callback: (...params: any[]) => any): void;\n    /**\n     * Get all the cookies for the given URL.\n     */\n    getAll(url: string, options?: any, callback: (...params: any[]) => any): void;\n    /**\n     * Set or update a cookie.\n     */\n    set(url: string, name: string | any, value?: string | ((...params: any[]) => any), callback?: (...params: any[]) => any): void;\n    /**\n     * Remove single cookie with the given name.\n     */\n    unset(url: string, name: string, callback?: (...params: any[]) => any): void;\n    /**\n     * Remove all the cookies for the given URL.\n     */\n    clear(url: string, callback?: (...params: any[]) => any): void;\n}\n\n\n\ninterface Postman {\n    test: Test;\n}\n\ninterface Test {\n\n    /**\n     * You can use this function to write test specifications inside either the Pre-request Script or Tests sandbox.\n     * Writing tests inside this function allows you to name the test accurately and this function also ensures the\n     * rest of the script is not blocked even if there are errors inside the function.\n     * @param testName\n     * @param specFunction\n     */\n    (testName: string, specFunction: Function): void\n\n    /**\n     * Get the total number tests from a specific location.\n     */\n    index(): number,\n\n    /**\n     * By appending .skip(), you may tell test runner to ignore test case.\n     * @param testName\n     */\n    skip(testName: string): void\n}\n\ndeclare module "postman-collection" {\n\ninterface CookieList {\n    jar() : PostmanCookieJar\n}\n\ninterface Response extends Assertable {\n\n}\n\ninterface Assertable {\n    to: {\n        have: AssertableHave\n\n        /**\n         * The properties inside the "pm.response.to.be" object allows you to easily assert a set of pre-defined rules.\n         */\n        be: AssertableBe\n    }\n}\n\ninterface AssertableHave {\n    status(code: number): any\n    status(reason: string): any\n    header(key: string): any\n    header(key: string, optionalValue: string): any\n    body(): any\n    body(optionalStringValue: string): any\n    body(optionalRegExpValue: RegExp): any\n    jsonBody(): any\n    jsonBody(optionalExpectEqual: object): any\n    jsonBody(optionalExpectPath: string): any\n    jsonBody(optionalExpectPath: string, optionalValue: any): any\n    jsonSchema(schema: object): any\n    jsonSchema(schema: object, ajvOptions: object): any\n}\n\ninterface AssertableBe {\n\n    /**\n     * Checks 1XX status code\n     */\n    info: number\n\n    /**\n     * Checks 2XX status code\n     */\n    success: number\n\n    /**\n     * Checks 3XX status code\n     */\n    redirection: number\n\n    /**\n     * Checks 4XX status code\n     */\n    clientError: number\n\n    /**\n     * Checks 5XX\n     */\n    serverError: number\n\n    /**\n     * Checks 4XX or 5XX\n     */\n    error: number\n\n    /**\n     * Status code must be 200\n     */\n    ok: number\n\n    /**\n     * Status code must be 202\n     */\n    accepted: number\n\n    /**\n     * Status code must be 400\n     */\n    badRequest: number\n\n    /**\n     * Status code must be 401\n     */\n    unauthorized: number\n\n    /**\n     * Status code 403\n     */\n    forbidden: number\n\n    /**\n     * Status code of response is checked to be 404\n     */\n    notFound: number\n\n    /**\n     * Checks whether response status code is 429\n     */\n    rateLimited: number\n}\n\n}\n'},"./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.collection.d.ts":function(e,t,n){"use strict";n.r(t),t.default='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface Map<K, V> {\r\n    clear(): void;\r\n    delete(key: K): boolean;\r\n    forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\r\n    get(key: K): V | undefined;\r\n    has(key: K): boolean;\r\n    set(key: K, value: V): this;\r\n    readonly size: number;\r\n}\r\n\r\ninterface MapConstructor {\r\n    new(): Map<any, any>;\r\n    new<K, V>(entries?: readonly (readonly [K, V])[] | null): Map<K, V>;\r\n    readonly prototype: Map<any, any>;\r\n}\r\ndeclare var Map: MapConstructor;\r\n\r\ninterface ReadonlyMap<K, V> {\r\n    forEach(callbackfn: (value: V, key: K, map: ReadonlyMap<K, V>) => void, thisArg?: any): void;\r\n    get(key: K): V | undefined;\r\n    has(key: K): boolean;\r\n    readonly size: number;\r\n}\r\n\r\ninterface WeakMap<K extends object, V> {\r\n    delete(key: K): boolean;\r\n    get(key: K): V | undefined;\r\n    has(key: K): boolean;\r\n    set(key: K, value: V): this;\r\n}\r\n\r\ninterface WeakMapConstructor {\r\n    new <K extends object = object, V = any>(entries?: readonly [K, V][] | null): WeakMap<K, V>;\r\n    readonly prototype: WeakMap<object, any>;\r\n}\r\ndeclare var WeakMap: WeakMapConstructor;\r\n\r\ninterface Set<T> {\r\n    add(value: T): this;\r\n    clear(): void;\r\n    delete(value: T): boolean;\r\n    forEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;\r\n    has(value: T): boolean;\r\n    readonly size: number;\r\n}\r\n\r\ninterface SetConstructor {\r\n    new <T = any>(values?: readonly T[] | null): Set<T>;\r\n    readonly prototype: Set<any>;\r\n}\r\ndeclare var Set: SetConstructor;\r\n\r\ninterface ReadonlySet<T> {\r\n    forEach(callbackfn: (value: T, value2: T, set: ReadonlySet<T>) => void, thisArg?: any): void;\r\n    has(value: T): boolean;\r\n    readonly size: number;\r\n}\r\n\r\ninterface WeakSet<T extends object> {\r\n    add(value: T): this;\r\n    delete(value: T): boolean;\r\n    has(value: T): boolean;\r\n}\r\n\r\ninterface WeakSetConstructor {\r\n    new <T extends object = object>(values?: readonly T[] | null): WeakSet<T>;\r\n    readonly prototype: WeakSet<object>;\r\n}\r\ndeclare var WeakSet: WeakSetConstructor;\r\n'},"./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.core.d.ts":function(e,t,n){"use strict";n.r(t),t.default='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface Array<T> {\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find<S extends T>(predicate: (this: void, value: T, index: number, obj: T[]) => value is S, thisArg?: any): S | undefined;\r\n    find(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): T | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): number;\r\n\r\n    /**\r\n     * Returns the this object after filling the section identified by start and end with value\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: T, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n}\r\n\r\ninterface ArrayConstructor {\r\n    /**\r\n     * Creates an array from an array-like object.\r\n     * @param arrayLike An array-like object to convert to an array.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>): T[];\r\n\r\n    /**\r\n     * Creates an array from an iterable object.\r\n     * @param arrayLike An array-like object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\r\n     */\r\n    from<T, U>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => U, thisArg?: any): U[];\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of<T>(...items: T[]): T[];\r\n}\r\n\r\ninterface DateConstructor {\r\n    new (value: number | string | Date): Date;\r\n}\r\n\r\ninterface Function {\r\n    /**\r\n     * Returns the name of the function. Function names are read-only and can not be changed.\r\n     */\r\n    readonly name: string;\r\n}\r\n\r\ninterface Math {\r\n    /**\r\n     * Returns the number of leading zero bits in the 32-bit binary representation of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    clz32(x: number): number;\r\n\r\n    /**\r\n     * Returns the result of 32-bit multiplication of two numbers.\r\n     * @param x First number\r\n     * @param y Second number\r\n     */\r\n    imul(x: number, y: number): number;\r\n\r\n    /**\r\n     * Returns the sign of the x, indicating whether x is positive, negative or zero.\r\n     * @param x The numeric expression to test\r\n     */\r\n    sign(x: number): number;\r\n\r\n    /**\r\n     * Returns the base 10 logarithm of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    log10(x: number): number;\r\n\r\n    /**\r\n     * Returns the base 2 logarithm of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    log2(x: number): number;\r\n\r\n    /**\r\n     * Returns the natural logarithm of 1 + x.\r\n     * @param x A numeric expression.\r\n     */\r\n    log1p(x: number): number;\r\n\r\n    /**\r\n     * Returns the result of (e^x - 1), which is an implementation-dependent approximation to\r\n     * subtracting 1 from the exponential function of x (e raised to the power of x, where e\r\n     * is the base of the natural logarithms).\r\n     * @param x A numeric expression.\r\n     */\r\n    expm1(x: number): number;\r\n\r\n    /**\r\n     * Returns the hyperbolic cosine of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    cosh(x: number): number;\r\n\r\n    /**\r\n     * Returns the hyperbolic sine of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    sinh(x: number): number;\r\n\r\n    /**\r\n     * Returns the hyperbolic tangent of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    tanh(x: number): number;\r\n\r\n    /**\r\n     * Returns the inverse hyperbolic cosine of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    acosh(x: number): number;\r\n\r\n    /**\r\n     * Returns the inverse hyperbolic sine of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    asinh(x: number): number;\r\n\r\n    /**\r\n     * Returns the inverse hyperbolic tangent of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    atanh(x: number): number;\r\n\r\n    /**\r\n     * Returns the square root of the sum of squares of its arguments.\r\n     * @param values Values to compute the square root for.\r\n     *     If no arguments are passed, the result is +0.\r\n     *     If there is only one argument, the result is the absolute value.\r\n     *     If any argument is +Infinity or -Infinity, the result is +Infinity.\r\n     *     If any argument is NaN, the result is NaN.\r\n     *     If all arguments are either +0 or −0, the result is +0.\r\n     */\r\n    hypot(...values: number[]): number;\r\n\r\n    /**\r\n     * Returns the integral part of the a numeric expression, x, removing any fractional digits.\r\n     * If x is already an integer, the result is x.\r\n     * @param x A numeric expression.\r\n     */\r\n    trunc(x: number): number;\r\n\r\n    /**\r\n     * Returns the nearest single precision float representation of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    fround(x: number): number;\r\n\r\n    /**\r\n     * Returns an implementation-dependent approximation to the cube root of number.\r\n     * @param x A numeric expression.\r\n     */\r\n    cbrt(x: number): number;\r\n}\r\n\r\ninterface NumberConstructor {\r\n    /**\r\n     * The value of Number.EPSILON is the difference between 1 and the smallest value greater than 1\r\n     * that is representable as a Number value, which is approximately:\r\n     * 2.2204460492503130808472633361816 x 10‍−‍16.\r\n     */\r\n    readonly EPSILON: number;\r\n\r\n    /**\r\n     * Returns true if passed value is finite.\r\n     * Unlike the global isFinite, Number.isFinite doesn\'t forcibly convert the parameter to a\r\n     * number. Only finite values of the type number, result in true.\r\n     * @param number A numeric value.\r\n     */\r\n    isFinite(number: unknown): boolean;\r\n\r\n    /**\r\n     * Returns true if the value passed is an integer, false otherwise.\r\n     * @param number A numeric value.\r\n     */\r\n    isInteger(number: unknown): boolean;\r\n\r\n    /**\r\n     * Returns a Boolean value that indicates whether a value is the reserved value NaN (not a\r\n     * number). Unlike the global isNaN(), Number.isNaN() doesn\'t forcefully convert the parameter\r\n     * to a number. Only values of the type number, that are also NaN, result in true.\r\n     * @param number A numeric value.\r\n     */\r\n    isNaN(number: unknown): boolean;\r\n\r\n    /**\r\n     * Returns true if the value passed is a safe integer.\r\n     * @param number A numeric value.\r\n     */\r\n    isSafeInteger(number: unknown): boolean;\r\n\r\n    /**\r\n     * The value of the largest integer n such that n and n + 1 are both exactly representable as\r\n     * a Number value.\r\n     * The value of Number.MAX_SAFE_INTEGER is 9007199254740991 2^53 − 1.\r\n     */\r\n    readonly MAX_SAFE_INTEGER: number;\r\n\r\n    /**\r\n     * The value of the smallest integer n such that n and n − 1 are both exactly representable as\r\n     * a Number value.\r\n     * The value of Number.MIN_SAFE_INTEGER is −9007199254740991 (−(2^53 − 1)).\r\n     */\r\n    readonly MIN_SAFE_INTEGER: number;\r\n\r\n    /**\r\n     * Converts a string to a floating-point number.\r\n     * @param string A string that contains a floating-point number.\r\n     */\r\n    parseFloat(string: string): number;\r\n\r\n    /**\r\n     * Converts A string to an integer.\r\n     * @param s A string to convert into a number.\r\n     * @param radix A value between 2 and 36 that specifies the base of the number in numString.\r\n     * If this argument is not supplied, strings with a prefix of \'0x\' are considered hexadecimal.\r\n     * All other strings are considered decimal.\r\n     */\r\n    parseInt(string: string, radix?: number): number;\r\n}\r\n\r\ninterface ObjectConstructor {\r\n    /**\r\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\r\n     * target object. Returns the target object.\r\n     * @param target The target object to copy to.\r\n     * @param source The source object from which to copy properties.\r\n     */\r\n    assign<T, U>(target: T, source: U): T & U;\r\n\r\n    /**\r\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\r\n     * target object. Returns the target object.\r\n     * @param target The target object to copy to.\r\n     * @param source1 The first source object from which to copy properties.\r\n     * @param source2 The second source object from which to copy properties.\r\n     */\r\n    assign<T, U, V>(target: T, source1: U, source2: V): T & U & V;\r\n\r\n    /**\r\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\r\n     * target object. Returns the target object.\r\n     * @param target The target object to copy to.\r\n     * @param source1 The first source object from which to copy properties.\r\n     * @param source2 The second source object from which to copy properties.\r\n     * @param source3 The third source object from which to copy properties.\r\n     */\r\n    assign<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\r\n\r\n    /**\r\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\r\n     * target object. Returns the target object.\r\n     * @param target The target object to copy to.\r\n     * @param sources One or more source objects from which to copy properties\r\n     */\r\n    assign(target: object, ...sources: any[]): any;\r\n\r\n    /**\r\n     * Returns an array of all symbol properties found directly on object o.\r\n     * @param o Object to retrieve the symbols from.\r\n     */\r\n    getOwnPropertySymbols(o: any): symbol[];\r\n\r\n    /**\r\n     * Returns the names of the enumerable string properties and methods of an object.\r\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n     */\r\n    keys(o: {}): string[];\r\n\r\n    /**\r\n     * Returns true if the values are the same value, false otherwise.\r\n     * @param value1 The first value.\r\n     * @param value2 The second value.\r\n     */\r\n    is(value1: any, value2: any): boolean;\r\n\r\n    /**\r\n     * Sets the prototype of a specified object o to object proto or null. Returns the object o.\r\n     * @param o The object to change its prototype.\r\n     * @param proto The value of the new prototype or null.\r\n     */\r\n    setPrototypeOf(o: any, proto: object | null): any;\r\n}\r\n\r\ninterface ReadonlyArray<T> {\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find<S extends T>(predicate: (this: void, value: T, index: number, obj: readonly T[]) => value is S, thisArg?: any): S | undefined;\r\n    find(predicate: (value: T, index: number, obj: readonly T[]) => unknown, thisArg?: any): T | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: T, index: number, obj: readonly T[]) => unknown, thisArg?: any): number;\r\n}\r\n\r\ninterface RegExp {\r\n    /**\r\n     * Returns a string indicating the flags of the regular expression in question. This field is read-only.\r\n     * The characters in this string are sequenced and concatenated in the following order:\r\n     *\r\n     *    - "g" for global\r\n     *    - "i" for ignoreCase\r\n     *    - "m" for multiline\r\n     *    - "u" for unicode\r\n     *    - "y" for sticky\r\n     *\r\n     * If no flags are set, the value is the empty string.\r\n     */\r\n    readonly flags: string;\r\n\r\n    /**\r\n     * Returns a Boolean value indicating the state of the sticky flag (y) used with a regular\r\n     * expression. Default is false. Read-only.\r\n     */\r\n    readonly sticky: boolean;\r\n\r\n    /**\r\n     * Returns a Boolean value indicating the state of the Unicode flag (u) used with a regular\r\n     * expression. Default is false. Read-only.\r\n     */\r\n    readonly unicode: boolean;\r\n}\r\n\r\ninterface RegExpConstructor {\r\n    new (pattern: RegExp | string, flags?: string): RegExp;\r\n    (pattern: RegExp | string, flags?: string): RegExp;\r\n}\r\n\r\ninterface String {\r\n    /**\r\n     * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\r\n     * value of the UTF-16 encoded code point starting at the string element at position pos in\r\n     * the String resulting from converting this object to a String.\r\n     * If there is no element at that position, the result is undefined.\r\n     * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\r\n     */\r\n    codePointAt(pos: number): number | undefined;\r\n\r\n    /**\r\n     * Returns true if searchString appears as a substring of the result of converting this\r\n     * object to a String, at one or more positions that are\r\n     * greater than or equal to position; otherwise, returns false.\r\n     * @param searchString search string\r\n     * @param position If position is undefined, 0 is assumed, so as to search all of the String.\r\n     */\r\n    includes(searchString: string, position?: number): boolean;\r\n\r\n    /**\r\n     * Returns true if the sequence of elements of searchString converted to a String is the\r\n     * same as the corresponding elements of this object (converted to a String) starting at\r\n     * endPosition – length(this). Otherwise returns false.\r\n     */\r\n    endsWith(searchString: string, endPosition?: number): boolean;\r\n\r\n    /**\r\n     * Returns the String value result of normalizing the string into the normalization form\r\n     * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\r\n     * @param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\r\n     * is "NFC"\r\n     */\r\n    normalize(form: "NFC" | "NFD" | "NFKC" | "NFKD"): string;\r\n\r\n    /**\r\n     * Returns the String value result of normalizing the string into the normalization form\r\n     * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\r\n     * @param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\r\n     * is "NFC"\r\n     */\r\n    normalize(form?: string): string;\r\n\r\n    /**\r\n     * Returns a String value that is made from count copies appended together. If count is 0,\r\n     * the empty string is returned.\r\n     * @param count number of copies to append\r\n     */\r\n    repeat(count: number): string;\r\n\r\n    /**\r\n     * Returns true if the sequence of elements of searchString converted to a String is the\r\n     * same as the corresponding elements of this object (converted to a String) starting at\r\n     * position. Otherwise returns false.\r\n     */\r\n    startsWith(searchString: string, position?: number): boolean;\r\n\r\n    /**\r\n     * Returns an <a> HTML anchor element and sets the name attribute to the text value\r\n     * @param name\r\n     */\r\n    anchor(name: string): string;\r\n\r\n    /** Returns a <big> HTML element */\r\n    big(): string;\r\n\r\n    /** Returns a <blink> HTML element */\r\n    blink(): string;\r\n\r\n    /** Returns a <b> HTML element */\r\n    bold(): string;\r\n\r\n    /** Returns a <tt> HTML element */\r\n    fixed(): string;\r\n\r\n    /** Returns a <font> HTML element and sets the color attribute value */\r\n    fontcolor(color: string): string;\r\n\r\n    /** Returns a <font> HTML element and sets the size attribute value */\r\n    fontsize(size: number): string;\r\n\r\n    /** Returns a <font> HTML element and sets the size attribute value */\r\n    fontsize(size: string): string;\r\n\r\n    /** Returns an <i> HTML element */\r\n    italics(): string;\r\n\r\n    /** Returns an <a> HTML element and sets the href attribute value */\r\n    link(url: string): string;\r\n\r\n    /** Returns a <small> HTML element */\r\n    small(): string;\r\n\r\n    /** Returns a <strike> HTML element */\r\n    strike(): string;\r\n\r\n    /** Returns a <sub> HTML element */\r\n    sub(): string;\r\n\r\n    /** Returns a <sup> HTML element */\r\n    sup(): string;\r\n}\r\n\r\ninterface StringConstructor {\r\n    /**\r\n     * Return the String value whose elements are, in order, the elements in the List elements.\r\n     * If length is 0, the empty string is returned.\r\n     */\r\n    fromCodePoint(...codePoints: number[]): string;\r\n\r\n    /**\r\n     * String.raw is intended for use as a tag function of a Tagged Template String. When called\r\n     * as such the first argument will be a well formed template call site object and the rest\r\n     * parameter will contain the substitution values.\r\n     * @param template A well-formed template string call site representation.\r\n     * @param substitutions A set of substitution values.\r\n     */\r\n    raw(template: TemplateStringsArray, ...substitutions: any[]): string;\r\n}\r\n'},"./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.generator.d.ts":function(e,t,n){"use strict";n.r(t),t.default='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2015.iterable" />\r\n\r\ninterface Generator<T = unknown, TReturn = any, TNext = unknown> extends Iterator<T, TReturn, TNext> {\r\n    // NOTE: \'next\' is defined using a tuple to ensure we report the correct assignability errors in all places.\r\n    next(...args: [] | [TNext]): IteratorResult<T, TReturn>;\r\n    return(value: TReturn): IteratorResult<T, TReturn>;\r\n    throw(e: any): IteratorResult<T, TReturn>;\r\n    [Symbol.iterator](): Generator<T, TReturn, TNext>;\r\n}\r\n\r\ninterface GeneratorFunction {\r\n    /**\r\n     * Creates a new Generator object.\r\n     * @param args A list of arguments the function accepts.\r\n     */\r\n    new (...args: any[]): Generator;\r\n    /**\r\n     * Creates a new Generator object.\r\n     * @param args A list of arguments the function accepts.\r\n     */\r\n    (...args: any[]): Generator;\r\n    /**\r\n     * The length of the arguments.\r\n     */\r\n    readonly length: number;\r\n    /**\r\n     * Returns the name of the function.\r\n     */\r\n    readonly name: string;\r\n    /**\r\n     * A reference to the prototype.\r\n     */\r\n    readonly prototype: Generator;\r\n}\r\n\r\ninterface GeneratorFunctionConstructor {\r\n    /**\r\n     * Creates a new Generator function.\r\n     * @param args A list of arguments the function accepts.\r\n     */\r\n    new (...args: string[]): GeneratorFunction;\r\n    /**\r\n     * Creates a new Generator function.\r\n     * @param args A list of arguments the function accepts.\r\n     */\r\n    (...args: string[]): GeneratorFunction;\r\n    /**\r\n     * The length of the arguments.\r\n     */\r\n    readonly length: number;\r\n    /**\r\n     * Returns the name of the function.\r\n     */\r\n    readonly name: string;\r\n    /**\r\n     * A reference to the prototype.\r\n     */\r\n    readonly prototype: GeneratorFunction;\r\n}\r\n'},"./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.iterable.d.ts":function(e,t,n){"use strict";n.r(t),t.default="/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib=\"true\"/>\r\n\n\n/// <reference lib=\"es2015.symbol\" />\r\n\r\ninterface SymbolConstructor {\r\n    /**\r\n     * A method that returns the default iterator for an object. Called by the semantics of the\r\n     * for-of statement.\r\n     */\r\n    readonly iterator: symbol;\r\n}\r\n\r\ninterface IteratorYieldResult<TYield> {\r\n    done?: false;\r\n    value: TYield;\r\n}\r\n\r\ninterface IteratorReturnResult<TReturn> {\r\n    done: true;\r\n    value: TReturn;\r\n}\r\n\r\ntype IteratorResult<T, TReturn = any> = IteratorYieldResult<T> | IteratorReturnResult<TReturn>;\r\n\r\ninterface Iterator<T, TReturn = any, TNext = undefined> {\r\n    // NOTE: 'next' is defined using a tuple to ensure we report the correct assignability errors in all places.\r\n    next(...args: [] | [TNext]): IteratorResult<T, TReturn>;\r\n    return?(value?: TReturn): IteratorResult<T, TReturn>;\r\n    throw?(e?: any): IteratorResult<T, TReturn>;\r\n}\r\n\r\ninterface Iterable<T> {\r\n    [Symbol.iterator](): Iterator<T>;\r\n}\r\n\r\ninterface IterableIterator<T> extends Iterator<T> {\r\n    [Symbol.iterator](): IterableIterator<T>;\r\n}\r\n\r\ninterface Array<T> {\r\n    /** Iterator */\r\n    [Symbol.iterator](): IterableIterator<T>;\r\n\r\n    /**\r\n     * Returns an iterable of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, T]>;\r\n\r\n    /**\r\n     * Returns an iterable of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n\r\n    /**\r\n     * Returns an iterable of values in the array\r\n     */\r\n    values(): IterableIterator<T>;\r\n}\r\n\r\ninterface ArrayConstructor {\r\n    /**\r\n     * Creates an array from an iterable object.\r\n     * @param iterable An iterable object to convert to an array.\r\n     */\r\n    from<T>(iterable: Iterable<T> | ArrayLike<T>): T[];\r\n\r\n    /**\r\n     * Creates an array from an iterable object.\r\n     * @param iterable An iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T, U>(iterable: Iterable<T> | ArrayLike<T>, mapfn: (v: T, k: number) => U, thisArg?: any): U[];\r\n}\r\n\r\ninterface ReadonlyArray<T> {\r\n    /** Iterator of values in the array. */\r\n    [Symbol.iterator](): IterableIterator<T>;\r\n\r\n    /**\r\n     * Returns an iterable of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, T]>;\r\n\r\n    /**\r\n     * Returns an iterable of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n\r\n    /**\r\n     * Returns an iterable of values in the array\r\n     */\r\n    values(): IterableIterator<T>;\r\n}\r\n\r\ninterface IArguments {\r\n    /** Iterator */\r\n    [Symbol.iterator](): IterableIterator<any>;\r\n}\r\n\r\ninterface Map<K, V> {\r\n    /** Returns an iterable of entries in the map. */\r\n    [Symbol.iterator](): IterableIterator<[K, V]>;\r\n\r\n    /**\r\n     * Returns an iterable of key, value pairs for every entry in the map.\r\n     */\r\n    entries(): IterableIterator<[K, V]>;\r\n\r\n    /**\r\n     * Returns an iterable of keys in the map\r\n     */\r\n    keys(): IterableIterator<K>;\r\n\r\n    /**\r\n     * Returns an iterable of values in the map\r\n     */\r\n    values(): IterableIterator<V>;\r\n}\r\n\r\ninterface ReadonlyMap<K, V> {\r\n    /** Returns an iterable of entries in the map. */\r\n    [Symbol.iterator](): IterableIterator<[K, V]>;\r\n\r\n    /**\r\n     * Returns an iterable of key, value pairs for every entry in the map.\r\n     */\r\n    entries(): IterableIterator<[K, V]>;\r\n\r\n    /**\r\n     * Returns an iterable of keys in the map\r\n     */\r\n    keys(): IterableIterator<K>;\r\n\r\n    /**\r\n     * Returns an iterable of values in the map\r\n     */\r\n    values(): IterableIterator<V>;\r\n}\r\n\r\ninterface MapConstructor {\r\n    new <K, V>(iterable: Iterable<readonly [K, V]>): Map<K, V>;\r\n}\r\n\r\ninterface WeakMap<K extends object, V> { }\r\n\r\ninterface WeakMapConstructor {\r\n    new <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\r\n}\r\n\r\ninterface Set<T> {\r\n    /** Iterates over values in the set. */\r\n    [Symbol.iterator](): IterableIterator<T>;\r\n    /**\r\n     * Returns an iterable of [v,v] pairs for every value `v` in the set.\r\n     */\r\n    entries(): IterableIterator<[T, T]>;\r\n    /**\r\n     * Despite its name, returns an iterable of the values in the set,\r\n     */\r\n    keys(): IterableIterator<T>;\r\n\r\n    /**\r\n     * Returns an iterable of values in the set.\r\n     */\r\n    values(): IterableIterator<T>;\r\n}\r\n\r\ninterface ReadonlySet<T> {\r\n    /** Iterates over values in the set. */\r\n    [Symbol.iterator](): IterableIterator<T>;\r\n\r\n    /**\r\n     * Returns an iterable of [v,v] pairs for every value `v` in the set.\r\n     */\r\n    entries(): IterableIterator<[T, T]>;\r\n\r\n    /**\r\n     * Despite its name, returns an iterable of the values in the set,\r\n     */\r\n    keys(): IterableIterator<T>;\r\n\r\n    /**\r\n     * Returns an iterable of values in the set.\r\n     */\r\n    values(): IterableIterator<T>;\r\n}\r\n\r\ninterface SetConstructor {\r\n    new <T>(iterable?: Iterable<T> | null): Set<T>;\r\n}\r\n\r\ninterface WeakSet<T extends object> { }\r\n\r\ninterface WeakSetConstructor {\r\n    new <T extends object = object>(iterable: Iterable<T>): WeakSet<T>;\r\n}\r\n\r\ninterface Promise<T> { }\r\n\r\ninterface PromiseConstructor {\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\r\n     * resolve, or rejected when any Promise is rejected.\r\n     * @param values An iterable of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    all<T>(values: Iterable<T | PromiseLike<T>>): Promise<T[]>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\r\n     * or rejected.\r\n     * @param values An iterable of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    race<T>(values: Iterable<T>): Promise<T extends PromiseLike<infer U> ? U : T>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\r\n     * or rejected.\r\n     * @param values An iterable of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    race<T>(values: Iterable<T | PromiseLike<T>>): Promise<T>;\r\n}\r\n\r\ndeclare namespace Reflect {\r\n    function enumerate(target: object): IterableIterator<any>;\r\n}\r\n\r\ninterface String {\r\n    /** Iterator */\r\n    [Symbol.iterator](): IterableIterator<string>;\r\n}\r\n\r\ninterface Int8Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Int8ArrayConstructor {\r\n    new (elements: Iterable<number>): Int8Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int8Array;\r\n}\r\n\r\ninterface Uint8Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Uint8ArrayConstructor {\r\n    new (elements: Iterable<number>): Uint8Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint8Array;\r\n}\r\n\r\ninterface Uint8ClampedArray {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Uint8ClampedArrayConstructor {\r\n    new (elements: Iterable<number>): Uint8ClampedArray;\r\n\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint8ClampedArray;\r\n}\r\n\r\ninterface Int16Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Int16ArrayConstructor {\r\n    new (elements: Iterable<number>): Int16Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int16Array;\r\n}\r\n\r\ninterface Uint16Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Uint16ArrayConstructor {\r\n    new (elements: Iterable<number>): Uint16Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint16Array;\r\n}\r\n\r\ninterface Int32Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Int32ArrayConstructor {\r\n    new (elements: Iterable<number>): Int32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int32Array;\r\n}\r\n\r\ninterface Uint32Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Uint32ArrayConstructor {\r\n    new (elements: Iterable<number>): Uint32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint32Array;\r\n}\r\n\r\ninterface Float32Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Float32ArrayConstructor {\r\n    new (elements: Iterable<number>): Float32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Float32Array;\r\n}\r\n\r\ninterface Float64Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Float64ArrayConstructor {\r\n    new (elements: Iterable<number>): Float64Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Float64Array;\r\n}\r\n"},"./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.promise.d.ts":function(e,t,n){"use strict";n.r(t),t.default='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface PromiseConstructor {\r\n    /**\r\n     * A reference to the prototype.\r\n     */\r\n    readonly prototype: Promise<any>;\r\n\r\n    /**\r\n     * Creates a new Promise.\r\n     * @param executor A callback used to initialize the promise. This callback is passed two arguments:\r\n     * a resolve callback used to resolve the promise with a value or the result of another promise,\r\n     * and a reject callback used to reject the promise with a provided reason or error.\r\n     */\r\n    new <T>(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void): Promise<T>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\r\n     * resolve, or rejected when any Promise is rejected.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    all<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\r\n     * resolve, or rejected when any Promise is rejected.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    all<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\r\n     * resolve, or rejected when any Promise is rejected.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    all<T1, T2, T3, T4, T5, T6, T7, T8>(values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8]>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\r\n     * resolve, or rejected when any Promise is rejected.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    all<T1, T2, T3, T4, T5, T6, T7>(values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]): Promise<[T1, T2, T3, T4, T5, T6, T7]>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\r\n     * resolve, or rejected when any Promise is rejected.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    all<T1, T2, T3, T4, T5, T6>(values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]): Promise<[T1, T2, T3, T4, T5, T6]>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\r\n     * resolve, or rejected when any Promise is rejected.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    all<T1, T2, T3, T4, T5>(values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>]): Promise<[T1, T2, T3, T4, T5]>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\r\n     * resolve, or rejected when any Promise is rejected.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    all<T1, T2, T3, T4>(values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]): Promise<[T1, T2, T3, T4]>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\r\n     * resolve, or rejected when any Promise is rejected.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    all<T1, T2, T3>(values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]): Promise<[T1, T2, T3]>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\r\n     * resolve, or rejected when any Promise is rejected.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    all<T1, T2>(values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): Promise<[T1, T2]>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\r\n     * resolve, or rejected when any Promise is rejected.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    all<T>(values: readonly (T | PromiseLike<T>)[]): Promise<T[]>;\r\n\r\n    // see: lib.es2015.iterable.d.ts\r\n    // all<T>(values: Iterable<T | PromiseLike<T>>): Promise<T[]>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\r\n     * or rejected.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    race<T>(values: readonly T[]): Promise<T extends PromiseLike<infer U> ? U : T>;\r\n\r\n    // see: lib.es2015.iterable.d.ts\r\n    // race<T>(values: Iterable<T>): Promise<T extends PromiseLike<infer U> ? U : T>;\r\n\r\n    /**\r\n     * Creates a new rejected promise for the provided reason.\r\n     * @param reason The reason the promise was rejected.\r\n     * @returns A new rejected Promise.\r\n     */\r\n    reject<T = never>(reason?: any): Promise<T>;\r\n\r\n    /**\r\n     * Creates a new resolved promise for the provided value.\r\n     * @param value A promise.\r\n     * @returns A promise whose internal state matches the provided promise.\r\n     */\r\n    resolve<T>(value: T | PromiseLike<T>): Promise<T>;\r\n\r\n    /**\r\n     * Creates a new resolved promise .\r\n     * @returns A resolved promise.\r\n     */\r\n    resolve(): Promise<void>;\r\n}\r\n\r\ndeclare var Promise: PromiseConstructor;\r\n'},"./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.proxy.d.ts":function(e,t,n){"use strict";n.r(t),t.default='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface ProxyHandler<T extends object> {\r\n    getPrototypeOf? (target: T): object | null;\r\n    setPrototypeOf? (target: T, v: any): boolean;\r\n    isExtensible? (target: T): boolean;\r\n    preventExtensions? (target: T): boolean;\r\n    getOwnPropertyDescriptor? (target: T, p: PropertyKey): PropertyDescriptor | undefined;\r\n    has? (target: T, p: PropertyKey): boolean;\r\n    get? (target: T, p: PropertyKey, receiver: any): any;\r\n    set? (target: T, p: PropertyKey, value: any, receiver: any): boolean;\r\n    deleteProperty? (target: T, p: PropertyKey): boolean;\r\n    defineProperty? (target: T, p: PropertyKey, attributes: PropertyDescriptor): boolean;\r\n    enumerate? (target: T): PropertyKey[];\r\n    ownKeys? (target: T): PropertyKey[];\r\n    apply? (target: T, thisArg: any, argArray?: any): any;\r\n    construct? (target: T, argArray: any, newTarget?: any): object;\r\n}\r\n\r\ninterface ProxyConstructor {\r\n    revocable<T extends object>(target: T, handler: ProxyHandler<T>): { proxy: T; revoke: () => void; };\r\n    new <T extends object>(target: T, handler: ProxyHandler<T>): T;\r\n}\r\ndeclare var Proxy: ProxyConstructor;\r\n'},"./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.reflect.d.ts":function(e,t,n){"use strict";n.r(t),t.default='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ndeclare namespace Reflect {\r\n    function apply(target: Function, thisArgument: any, argumentsList: ArrayLike<any>): any;\r\n    function construct(target: Function, argumentsList: ArrayLike<any>, newTarget?: any): any;\r\n    function defineProperty(target: object, propertyKey: PropertyKey, attributes: PropertyDescriptor): boolean;\r\n    function deleteProperty(target: object, propertyKey: PropertyKey): boolean;\r\n    function get(target: object, propertyKey: PropertyKey, receiver?: any): any;\r\n    function getOwnPropertyDescriptor(target: object, propertyKey: PropertyKey): PropertyDescriptor | undefined;\r\n    function getPrototypeOf(target: object): object;\r\n    function has(target: object, propertyKey: PropertyKey): boolean;\r\n    function isExtensible(target: object): boolean;\r\n    function ownKeys(target: object): PropertyKey[];\r\n    function preventExtensions(target: object): boolean;\r\n    function set(target: object, propertyKey: PropertyKey, value: any, receiver?: any): boolean;\r\n    function setPrototypeOf(target: object, proto: any): boolean;\r\n}\r\n'},"./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.symbol.d.ts":function(e,t,n){"use strict";n.r(t),t.default='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface SymbolConstructor {\r\n    /**\r\n     * A reference to the prototype.\r\n     */\r\n    readonly prototype: Symbol;\r\n\r\n    /**\r\n     * Returns a new unique Symbol value.\r\n     * @param  description Description of the new Symbol object.\r\n     */\r\n    (description?: string | number): symbol;\r\n\r\n    /**\r\n     * Returns a Symbol object from the global symbol registry matching the given key if found.\r\n     * Otherwise, returns a new symbol with this key.\r\n     * @param key key to search for.\r\n     */\r\n    for(key: string): symbol;\r\n\r\n    /**\r\n     * Returns a key from the global symbol registry matching the given Symbol if found.\r\n     * Otherwise, returns a undefined.\r\n     * @param sym Symbol to find the key for.\r\n     */\r\n    keyFor(sym: symbol): string | undefined;\r\n}\r\n\r\ndeclare var Symbol: SymbolConstructor;'},"./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.symbol.wellknown.d.ts":function(e,t,n){"use strict";n.r(t),t.default='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2015.symbol" />\r\n\r\ninterface SymbolConstructor {\r\n    /**\r\n     * A method that determines if a constructor object recognizes an object as one of the\r\n     * constructor’s instances. Called by the semantics of the instanceof operator.\r\n     */\r\n    readonly hasInstance: symbol;\r\n\r\n    /**\r\n     * A Boolean value that if true indicates that an object should flatten to its array elements\r\n     * by Array.prototype.concat.\r\n     */\r\n    readonly isConcatSpreadable: symbol;\r\n\r\n    /**\r\n     * A regular expression method that matches the regular expression against a string. Called\r\n     * by the String.prototype.match method.\r\n     */\r\n    readonly match: symbol;\r\n\r\n    /**\r\n     * A regular expression method that replaces matched substrings of a string. Called by the\r\n     * String.prototype.replace method.\r\n     */\r\n    readonly replace: symbol;\r\n\r\n    /**\r\n     * A regular expression method that returns the index within a string that matches the\r\n     * regular expression. Called by the String.prototype.search method.\r\n     */\r\n    readonly search: symbol;\r\n\r\n    /**\r\n     * A function valued property that is the constructor function that is used to create\r\n     * derived objects.\r\n     */\r\n    readonly species: symbol;\r\n\r\n    /**\r\n     * A regular expression method that splits a string at the indices that match the regular\r\n     * expression. Called by the String.prototype.split method.\r\n     */\r\n    readonly split: symbol;\r\n\r\n    /**\r\n     * A method that converts an object to a corresponding primitive value.\r\n     * Called by the ToPrimitive abstract operation.\r\n     */\r\n    readonly toPrimitive: symbol;\r\n\r\n    /**\r\n     * A String value that is used in the creation of the default string description of an object.\r\n     * Called by the built-in method Object.prototype.toString.\r\n     */\r\n    readonly toStringTag: symbol;\r\n\r\n    /**\r\n     * An Object whose own property names are property names that are excluded from the \'with\'\r\n     * environment bindings of the associated objects.\r\n     */\r\n    readonly unscopables: symbol;\r\n}\r\n\r\ninterface Symbol {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface Array<T> {\r\n    /**\r\n     * Returns an object whose properties have the value \'true\'\r\n     * when they will be absent when used in a \'with\' statement.\r\n     */\r\n    [Symbol.unscopables](): {\r\n        copyWithin: boolean;\r\n        entries: boolean;\r\n        fill: boolean;\r\n        find: boolean;\r\n        findIndex: boolean;\r\n        keys: boolean;\r\n        values: boolean;\r\n    };\r\n}\r\n\r\ninterface Date {\r\n    /**\r\n     * Converts a Date object to a string.\r\n     */\r\n    [Symbol.toPrimitive](hint: "default"): string;\r\n    /**\r\n     * Converts a Date object to a string.\r\n     */\r\n    [Symbol.toPrimitive](hint: "string"): string;\r\n    /**\r\n     * Converts a Date object to a number.\r\n     */\r\n    [Symbol.toPrimitive](hint: "number"): number;\r\n    /**\r\n     * Converts a Date object to a string or number.\r\n     *\r\n     * @param hint The strings "number", "string", or "default" to specify what primitive to return.\r\n     *\r\n     * @throws {TypeError} If \'hint\' was given something other than "number", "string", or "default".\r\n     * @returns A number if \'hint\' was "number", a string if \'hint\' was "string" or "default".\r\n     */\r\n    [Symbol.toPrimitive](hint: string): string | number;\r\n}\r\n\r\ninterface Map<K, V> {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface WeakMap<K extends object, V> {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface Set<T> {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface WeakSet<T extends object> {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface JSON {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface Function {\r\n    /**\r\n     * Determines whether the given value inherits from this function if this function was used\r\n     * as a constructor function.\r\n     *\r\n     * A constructor function can control which objects are recognized as its instances by\r\n     * \'instanceof\' by overriding this method.\r\n     */\r\n    [Symbol.hasInstance](value: any): boolean;\r\n}\r\n\r\ninterface GeneratorFunction {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface Math {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface Promise<T> {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface PromiseConstructor {\r\n    readonly [Symbol.species]: PromiseConstructor;\r\n}\r\n\r\ninterface RegExp {\r\n    /**\r\n     * Matches a string with this regular expression, and returns an array containing the results of\r\n     * that search.\r\n     * @param string A string to search within.\r\n     */\r\n    [Symbol.match](string: string): RegExpMatchArray | null;\r\n\r\n    /**\r\n     * Replaces text in a string, using this regular expression.\r\n     * @param string A String object or string literal whose contents matching against\r\n     *               this regular expression will be replaced\r\n     * @param replaceValue A String object or string literal containing the text to replace for every\r\n     *                     successful match of this regular expression.\r\n     */\r\n    [Symbol.replace](string: string, replaceValue: string): string;\r\n\r\n    /**\r\n     * Replaces text in a string, using this regular expression.\r\n     * @param string A String object or string literal whose contents matching against\r\n     *               this regular expression will be replaced\r\n     * @param replacer A function that returns the replacement text.\r\n     */\r\n    [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string;\r\n\r\n    /**\r\n     * Finds the position beginning first substring match in a regular expression search\r\n     * using this regular expression.\r\n     *\r\n     * @param string The string to search within.\r\n     */\r\n    [Symbol.search](string: string): number;\r\n\r\n    /**\r\n     * Returns an array of substrings that were delimited by strings in the original input that\r\n     * match against this regular expression.\r\n     *\r\n     * If the regular expression contains capturing parentheses, then each time this\r\n     * regular expression matches, the results (including any undefined results) of the\r\n     * capturing parentheses are spliced.\r\n     *\r\n     * @param string string value to split\r\n     * @param limit if not undefined, the output array is truncated so that it contains no more\r\n     * than \'limit\' elements.\r\n     */\r\n    [Symbol.split](string: string, limit?: number): string[];\r\n}\r\n\r\ninterface RegExpConstructor {\r\n    readonly [Symbol.species]: RegExpConstructor;\r\n}\r\n\r\ninterface String {\r\n    /**\r\n     * Matches a string or an object that supports being matched against, and returns an array\r\n     * containing the results of that search, or null if no matches are found.\r\n     * @param matcher An object that supports being matched against.\r\n     */\r\n    match(matcher: { [Symbol.match](string: string): RegExpMatchArray | null; }): RegExpMatchArray | null;\r\n\r\n    /**\r\n     * Replaces text in a string, using an object that supports replacement within a string.\r\n     * @param searchValue A object can search for and replace matches within a string.\r\n     * @param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\r\n     */\r\n    replace(searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string;\r\n\r\n    /**\r\n     * Replaces text in a string, using an object that supports replacement within a string.\r\n     * @param searchValue A object can search for and replace matches within a string.\r\n     * @param replacer A function that returns the replacement text.\r\n     */\r\n    replace(searchValue: { [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string; }, replacer: (substring: string, ...args: any[]) => string): string;\r\n\r\n    /**\r\n     * Finds the first substring match in a regular expression search.\r\n     * @param searcher An object which supports searching within a string.\r\n     */\r\n    search(searcher: { [Symbol.search](string: string): number; }): number;\r\n\r\n    /**\r\n     * Split a string into substrings using the specified separator and return them as an array.\r\n     * @param splitter An object that can split a string.\r\n     * @param limit A value used to limit the number of elements returned in the array.\r\n     */\r\n    split(splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[];\r\n}\r\n\r\ninterface ArrayBuffer {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface DataView {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface Int8Array {\r\n    readonly [Symbol.toStringTag]: "Int8Array";\r\n}\r\n\r\ninterface Uint8Array {\r\n    readonly [Symbol.toStringTag]: "Uint8Array";\r\n}\r\n\r\ninterface Uint8ClampedArray {\r\n    readonly [Symbol.toStringTag]: "Uint8ClampedArray";\r\n}\r\n\r\ninterface Int16Array {\r\n    readonly [Symbol.toStringTag]: "Int16Array";\r\n}\r\n\r\ninterface Uint16Array {\r\n    readonly [Symbol.toStringTag]: "Uint16Array";\r\n}\r\n\r\ninterface Int32Array {\r\n    readonly [Symbol.toStringTag]: "Int32Array";\r\n}\r\n\r\ninterface Uint32Array {\r\n    readonly [Symbol.toStringTag]: "Uint32Array";\r\n}\r\n\r\ninterface Float32Array {\r\n    readonly [Symbol.toStringTag]: "Float32Array";\r\n}\r\n\r\ninterface Float64Array {\r\n    readonly [Symbol.toStringTag]: "Float64Array";\r\n}\r\n\r\ninterface ArrayConstructor {\r\n    readonly [Symbol.species]: ArrayConstructor;\r\n}\r\ninterface MapConstructor {\r\n    readonly [Symbol.species]: MapConstructor;\r\n}\r\ninterface SetConstructor {\r\n    readonly [Symbol.species]: SetConstructor;\r\n}\r\ninterface ArrayBufferConstructor {\r\n    readonly [Symbol.species]: ArrayBufferConstructor;\r\n}\r\n'},"./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es5.d.ts":function(e,t,n){"use strict";n.r(t),t.default="/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib=\"true\"/>\r\n\n\n/////////////////////////////\r\n/// ECMAScript APIs\r\n/////////////////////////////\r\n\r\ndeclare var NaN: number;\r\ndeclare var Infinity: number;\r\n\r\n/**\r\n * Evaluates JavaScript code and executes it.\r\n * @param x A String value that contains valid JavaScript code.\r\n */\r\ndeclare function eval(x: string): any;\r\n\r\n/**\r\n * Converts a string to an integer.\r\n * @param s A string to convert into a number.\r\n * @param radix A value between 2 and 36 that specifies the base of the number in numString.\r\n * If this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\r\n * All other strings are considered decimal.\r\n */\r\ndeclare function parseInt(s: string, radix?: number): number;\r\n\r\n/**\r\n * Converts a string to a floating-point number.\r\n * @param string A string that contains a floating-point number.\r\n */\r\ndeclare function parseFloat(string: string): number;\r\n\r\n/**\r\n * Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).\r\n * @param number A numeric value.\r\n */\r\ndeclare function isNaN(number: number): boolean;\r\n\r\n/**\r\n * Determines whether a supplied number is finite.\r\n * @param number Any numeric value.\r\n */\r\ndeclare function isFinite(number: number): boolean;\r\n\r\n/**\r\n * Gets the unencoded version of an encoded Uniform Resource Identifier (URI).\r\n * @param encodedURI A value representing an encoded URI.\r\n */\r\ndeclare function decodeURI(encodedURI: string): string;\r\n\r\n/**\r\n * Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).\r\n * @param encodedURIComponent A value representing an encoded URI component.\r\n */\r\ndeclare function decodeURIComponent(encodedURIComponent: string): string;\r\n\r\n/**\r\n * Encodes a text string as a valid Uniform Resource Identifier (URI)\r\n * @param uri A value representing an encoded URI.\r\n */\r\ndeclare function encodeURI(uri: string): string;\r\n\r\n/**\r\n * Encodes a text string as a valid component of a Uniform Resource Identifier (URI).\r\n * @param uriComponent A value representing an encoded URI component.\r\n */\r\ndeclare function encodeURIComponent(uriComponent: string | number | boolean): string;\r\n\r\n/**\r\n * Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.\r\n * @param string A string value\r\n */\r\ndeclare function escape(string: string): string;\r\n\r\n/**\r\n * Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.\r\n * @param string A string value\r\n */\r\ndeclare function unescape(string: string): string;\r\n\r\ninterface Symbol {\r\n    /** Returns a string representation of an object. */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): symbol;\r\n}\r\n\r\ndeclare type PropertyKey = string | number | symbol;\r\n\r\ninterface PropertyDescriptor {\r\n    configurable?: boolean;\r\n    enumerable?: boolean;\r\n    value?: any;\r\n    writable?: boolean;\r\n    get?(): any;\r\n    set?(v: any): void;\r\n}\r\n\r\ninterface PropertyDescriptorMap {\r\n    [s: string]: PropertyDescriptor;\r\n}\r\n\r\ninterface Object {\r\n    /** The initial value of Object.prototype.constructor is the standard built-in Object constructor. */\r\n    constructor: Function;\r\n\r\n    /** Returns a string representation of an object. */\r\n    toString(): string;\r\n\r\n    /** Returns a date converted to a string using the current locale. */\r\n    toLocaleString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Object;\r\n\r\n    /**\r\n     * Determines whether an object has a property with the specified name.\r\n     * @param v A property name.\r\n     */\r\n    hasOwnProperty(v: PropertyKey): boolean;\r\n\r\n    /**\r\n     * Determines whether an object exists in another object's prototype chain.\r\n     * @param v Another object whose prototype chain is to be checked.\r\n     */\r\n    isPrototypeOf(v: Object): boolean;\r\n\r\n    /**\r\n     * Determines whether a specified property is enumerable.\r\n     * @param v A property name.\r\n     */\r\n    propertyIsEnumerable(v: PropertyKey): boolean;\r\n}\r\n\r\ninterface ObjectConstructor {\r\n    new(value?: any): Object;\r\n    (): any;\r\n    (value: any): any;\r\n\r\n    /** A reference to the prototype for a class of objects. */\r\n    readonly prototype: Object;\r\n\r\n    /**\r\n     * Returns the prototype of an object.\r\n     * @param o The object that references the prototype.\r\n     */\r\n    getPrototypeOf(o: any): any;\r\n\r\n    /**\r\n     * Gets the own property descriptor of the specified object.\r\n     * An own property descriptor is one that is defined directly on the object and is not inherited from the object's prototype.\r\n     * @param o Object that contains the property.\r\n     * @param p Name of the property.\r\n     */\r\n    getOwnPropertyDescriptor(o: any, p: PropertyKey): PropertyDescriptor | undefined;\r\n\r\n    /**\r\n     * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\r\n     * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\r\n     * @param o Object that contains the own properties.\r\n     */\r\n    getOwnPropertyNames(o: any): string[];\r\n\r\n    /**\r\n     * Creates an object that has the specified prototype or that has null prototype.\r\n     * @param o Object to use as a prototype. May be null.\r\n     */\r\n    create(o: object | null): any;\r\n\r\n    /**\r\n     * Creates an object that has the specified prototype, and that optionally contains specified properties.\r\n     * @param o Object to use as a prototype. May be null\r\n     * @param properties JavaScript object that contains one or more property descriptors.\r\n     */\r\n    create(o: object | null, properties: PropertyDescriptorMap & ThisType<any>): any;\r\n\r\n    /**\r\n     * Adds a property to an object, or modifies attributes of an existing property.\r\n     * @param o Object on which to add or modify the property. This can be a native JavaScript object (that is, a user-defined object or a built in object) or a DOM object.\r\n     * @param p The property name.\r\n     * @param attributes Descriptor for the property. It can be for a data property or an accessor property.\r\n     */\r\n    defineProperty(o: any, p: PropertyKey, attributes: PropertyDescriptor & ThisType<any>): any;\r\n\r\n    /**\r\n     * Adds one or more properties to an object, and/or modifies attributes of existing properties.\r\n     * @param o Object on which to add or modify the properties. This can be a native JavaScript object or a DOM object.\r\n     * @param properties JavaScript object that contains one or more descriptor objects. Each descriptor object describes a data property or an accessor property.\r\n     */\r\n    defineProperties(o: any, properties: PropertyDescriptorMap & ThisType<any>): any;\r\n\r\n    /**\r\n     * Prevents the modification of attributes of existing properties, and prevents the addition of new properties.\r\n     * @param o Object on which to lock the attributes.\r\n     */\r\n    seal<T>(o: T): T;\r\n\r\n    /**\r\n     * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\r\n     * @param o Object on which to lock the attributes.\r\n     */\r\n    freeze<T>(a: T[]): readonly T[];\r\n\r\n    /**\r\n     * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\r\n     * @param o Object on which to lock the attributes.\r\n     */\r\n    freeze<T extends Function>(f: T): T;\r\n\r\n    /**\r\n     * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\r\n     * @param o Object on which to lock the attributes.\r\n     */\r\n    freeze<T>(o: T): Readonly<T>;\r\n\r\n    /**\r\n     * Prevents the addition of new properties to an object.\r\n     * @param o Object to make non-extensible.\r\n     */\r\n    preventExtensions<T>(o: T): T;\r\n\r\n    /**\r\n     * Returns true if existing property attributes cannot be modified in an object and new properties cannot be added to the object.\r\n     * @param o Object to test.\r\n     */\r\n    isSealed(o: any): boolean;\r\n\r\n    /**\r\n     * Returns true if existing property attributes and values cannot be modified in an object, and new properties cannot be added to the object.\r\n     * @param o Object to test.\r\n     */\r\n    isFrozen(o: any): boolean;\r\n\r\n    /**\r\n     * Returns a value that indicates whether new properties can be added to an object.\r\n     * @param o Object to test.\r\n     */\r\n    isExtensible(o: any): boolean;\r\n\r\n    /**\r\n     * Returns the names of the enumerable string properties and methods of an object.\r\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n     */\r\n    keys(o: object): string[];\r\n}\r\n\r\n/**\r\n * Provides functionality common to all JavaScript objects.\r\n */\r\ndeclare var Object: ObjectConstructor;\r\n\r\n/**\r\n * Creates a new function.\r\n */\r\ninterface Function {\r\n    /**\r\n     * Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.\r\n     * @param thisArg The object to be used as the this object.\r\n     * @param argArray A set of arguments to be passed to the function.\r\n     */\r\n    apply(this: Function, thisArg: any, argArray?: any): any;\r\n\r\n    /**\r\n     * Calls a method of an object, substituting another object for the current object.\r\n     * @param thisArg The object to be used as the current object.\r\n     * @param argArray A list of arguments to be passed to the method.\r\n     */\r\n    call(this: Function, thisArg: any, ...argArray: any[]): any;\r\n\r\n    /**\r\n     * For a given function, creates a bound function that has the same body as the original function.\r\n     * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\r\n     * @param thisArg An object to which the this keyword can refer inside the new function.\r\n     * @param argArray A list of arguments to be passed to the new function.\r\n     */\r\n    bind(this: Function, thisArg: any, ...argArray: any[]): any;\r\n\r\n    /** Returns a string representation of a function. */\r\n    toString(): string;\r\n\r\n    prototype: any;\r\n    readonly length: number;\r\n\r\n    // Non-standard extensions\r\n    arguments: any;\r\n    caller: Function;\r\n}\r\n\r\ninterface FunctionConstructor {\r\n    /**\r\n     * Creates a new function.\r\n     * @param args A list of arguments the function accepts.\r\n     */\r\n    new(...args: string[]): Function;\r\n    (...args: string[]): Function;\r\n    readonly prototype: Function;\r\n}\r\n\r\ndeclare var Function: FunctionConstructor;\r\n\r\n/**\r\n * Extracts the type of the 'this' parameter of a function type, or 'unknown' if the function type has no 'this' parameter.\r\n */\r\ntype ThisParameterType<T> = T extends (this: infer U, ...args: any[]) => any ? U : unknown;\r\n\r\n/**\r\n * Removes the 'this' parameter from a function type.\r\n */\r\ntype OmitThisParameter<T> = unknown extends ThisParameterType<T> ? T : T extends (...args: infer A) => infer R ? (...args: A) => R : T;\r\n\r\ninterface CallableFunction extends Function {\r\n    /**\r\n     * Calls the function with the specified object as the this value and the elements of specified array as the arguments.\r\n     * @param thisArg The object to be used as the this object.\r\n     * @param args An array of argument values to be passed to the function.\r\n     */\r\n    apply<T, R>(this: (this: T) => R, thisArg: T): R;\r\n    apply<T, A extends any[], R>(this: (this: T, ...args: A) => R, thisArg: T, args: A): R;\r\n\r\n    /**\r\n     * Calls the function with the specified object as the this value and the specified rest arguments as the arguments.\r\n     * @param thisArg The object to be used as the this object.\r\n     * @param args Argument values to be passed to the function.\r\n     */\r\n    call<T, A extends any[], R>(this: (this: T, ...args: A) => R, thisArg: T, ...args: A): R;\r\n\r\n    /**\r\n     * For a given function, creates a bound function that has the same body as the original function.\r\n     * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\r\n     * @param thisArg The object to be used as the this object.\r\n     * @param args Arguments to bind to the parameters of the function.\r\n     */\r\n    bind<T>(this: T, thisArg: ThisParameterType<T>): OmitThisParameter<T>;\r\n    bind<T, A0, A extends any[], R>(this: (this: T, arg0: A0, ...args: A) => R, thisArg: T, arg0: A0): (...args: A) => R;\r\n    bind<T, A0, A1, A extends any[], R>(this: (this: T, arg0: A0, arg1: A1, ...args: A) => R, thisArg: T, arg0: A0, arg1: A1): (...args: A) => R;\r\n    bind<T, A0, A1, A2, A extends any[], R>(this: (this: T, arg0: A0, arg1: A1, arg2: A2, ...args: A) => R, thisArg: T, arg0: A0, arg1: A1, arg2: A2): (...args: A) => R;\r\n    bind<T, A0, A1, A2, A3, A extends any[], R>(this: (this: T, arg0: A0, arg1: A1, arg2: A2, arg3: A3, ...args: A) => R, thisArg: T, arg0: A0, arg1: A1, arg2: A2, arg3: A3): (...args: A) => R;\r\n    bind<T, AX, R>(this: (this: T, ...args: AX[]) => R, thisArg: T, ...args: AX[]): (...args: AX[]) => R;\r\n}\r\n\r\ninterface NewableFunction extends Function {\r\n    /**\r\n     * Calls the function with the specified object as the this value and the elements of specified array as the arguments.\r\n     * @param thisArg The object to be used as the this object.\r\n     * @param args An array of argument values to be passed to the function.\r\n     */\r\n    apply<T>(this: new () => T, thisArg: T): void;\r\n    apply<T, A extends any[]>(this: new (...args: A) => T, thisArg: T, args: A): void;\r\n\r\n    /**\r\n     * Calls the function with the specified object as the this value and the specified rest arguments as the arguments.\r\n     * @param thisArg The object to be used as the this object.\r\n     * @param args Argument values to be passed to the function.\r\n     */\r\n    call<T, A extends any[]>(this: new (...args: A) => T, thisArg: T, ...args: A): void;\r\n\r\n    /**\r\n     * For a given function, creates a bound function that has the same body as the original function.\r\n     * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\r\n     * @param thisArg The object to be used as the this object.\r\n     * @param args Arguments to bind to the parameters of the function.\r\n     */\r\n    bind<T>(this: T, thisArg: any): T;\r\n    bind<A0, A extends any[], R>(this: new (arg0: A0, ...args: A) => R, thisArg: any, arg0: A0): new (...args: A) => R;\r\n    bind<A0, A1, A extends any[], R>(this: new (arg0: A0, arg1: A1, ...args: A) => R, thisArg: any, arg0: A0, arg1: A1): new (...args: A) => R;\r\n    bind<A0, A1, A2, A extends any[], R>(this: new (arg0: A0, arg1: A1, arg2: A2, ...args: A) => R, thisArg: any, arg0: A0, arg1: A1, arg2: A2): new (...args: A) => R;\r\n    bind<A0, A1, A2, A3, A extends any[], R>(this: new (arg0: A0, arg1: A1, arg2: A2, arg3: A3, ...args: A) => R, thisArg: any, arg0: A0, arg1: A1, arg2: A2, arg3: A3): new (...args: A) => R;\r\n    bind<AX, R>(this: new (...args: AX[]) => R, thisArg: any, ...args: AX[]): new (...args: AX[]) => R;\r\n}\r\n\r\ninterface IArguments {\r\n    [index: number]: any;\r\n    length: number;\r\n    callee: Function;\r\n}\r\n\r\ninterface String {\r\n    /** Returns a string representation of a string. */\r\n    toString(): string;\r\n\r\n    /**\r\n     * Returns the character at the specified index.\r\n     * @param pos The zero-based index of the desired character.\r\n     */\r\n    charAt(pos: number): string;\r\n\r\n    /**\r\n     * Returns the Unicode value of the character at the specified location.\r\n     * @param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\r\n     */\r\n    charCodeAt(index: number): number;\r\n\r\n    /**\r\n     * Returns a string that contains the concatenation of two or more strings.\r\n     * @param strings The strings to append to the end of the string.\r\n     */\r\n    concat(...strings: string[]): string;\r\n\r\n    /**\r\n     * Returns the position of the first occurrence of a substring.\r\n     * @param searchString The substring to search for in the string\r\n     * @param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\r\n     */\r\n    indexOf(searchString: string, position?: number): number;\r\n\r\n    /**\r\n     * Returns the last occurrence of a substring in the string.\r\n     * @param searchString The substring to search for.\r\n     * @param position The index at which to begin searching. If omitted, the search begins at the end of the string.\r\n     */\r\n    lastIndexOf(searchString: string, position?: number): number;\r\n\r\n    /**\r\n     * Determines whether two strings are equivalent in the current locale.\r\n     * @param that String to compare to target string\r\n     */\r\n    localeCompare(that: string): number;\r\n\r\n    /**\r\n     * Matches a string with a regular expression, and returns an array containing the results of that search.\r\n     * @param regexp A variable name or string literal containing the regular expression pattern and flags.\r\n     */\r\n    match(regexp: string | RegExp): RegExpMatchArray | null;\r\n\r\n    /**\r\n     * Replaces text in a string, using a regular expression or search string.\r\n     * @param searchValue A string to search for.\r\n     * @param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\r\n     */\r\n    replace(searchValue: string | RegExp, replaceValue: string): string;\r\n\r\n    /**\r\n     * Replaces text in a string, using a regular expression or search string.\r\n     * @param searchValue A string to search for.\r\n     * @param replacer A function that returns the replacement text.\r\n     */\r\n    replace(searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string;\r\n\r\n    /**\r\n     * Finds the first substring match in a regular expression search.\r\n     * @param regexp The regular expression pattern and applicable flags.\r\n     */\r\n    search(regexp: string | RegExp): number;\r\n\r\n    /**\r\n     * Returns a section of a string.\r\n     * @param start The index to the beginning of the specified portion of stringObj.\r\n     * @param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\r\n     * If this value is not specified, the substring continues to the end of stringObj.\r\n     */\r\n    slice(start?: number, end?: number): string;\r\n\r\n    /**\r\n     * Split a string into substrings using the specified separator and return them as an array.\r\n     * @param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\r\n     * @param limit A value used to limit the number of elements returned in the array.\r\n     */\r\n    split(separator: string | RegExp, limit?: number): string[];\r\n\r\n    /**\r\n     * Returns the substring at the specified location within a String object.\r\n     * @param start The zero-based index number indicating the beginning of the substring.\r\n     * @param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\r\n     * If end is omitted, the characters from start through the end of the original string are returned.\r\n     */\r\n    substring(start: number, end?: number): string;\r\n\r\n    /** Converts all the alphabetic characters in a string to lowercase. */\r\n    toLowerCase(): string;\r\n\r\n    /** Converts all alphabetic characters to lowercase, taking into account the host environment's current locale. */\r\n    toLocaleLowerCase(locales?: string | string[]): string;\r\n\r\n    /** Converts all the alphabetic characters in a string to uppercase. */\r\n    toUpperCase(): string;\r\n\r\n    /** Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale. */\r\n    toLocaleUpperCase(locales?: string | string[]): string;\r\n\r\n    /** Removes the leading and trailing white space and line terminator characters from a string. */\r\n    trim(): string;\r\n\r\n    /** Returns the length of a String object. */\r\n    readonly length: number;\r\n\r\n    // IE extensions\r\n    /**\r\n     * Gets a substring beginning at the specified location and having the specified length.\r\n     * @param from The starting position of the desired substring. The index of the first character in the string is zero.\r\n     * @param length The number of characters to include in the returned substring.\r\n     */\r\n    substr(from: number, length?: number): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): string;\r\n\r\n    readonly [index: number]: string;\r\n}\r\n\r\ninterface StringConstructor {\r\n    new(value?: any): String;\r\n    (value?: any): string;\r\n    readonly prototype: String;\r\n    fromCharCode(...codes: number[]): string;\r\n}\r\n\r\n/**\r\n * Allows manipulation and formatting of text strings and determination and location of substrings within strings.\r\n */\r\ndeclare var String: StringConstructor;\r\n\r\ninterface Boolean {\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): boolean;\r\n}\r\n\r\ninterface BooleanConstructor {\r\n    new(value?: any): Boolean;\r\n    <T>(value?: T): boolean;\r\n    readonly prototype: Boolean;\r\n}\r\n\r\ndeclare var Boolean: BooleanConstructor;\r\n\r\ninterface Number {\r\n    /**\r\n     * Returns a string representation of an object.\r\n     * @param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.\r\n     */\r\n    toString(radix?: number): string;\r\n\r\n    /**\r\n     * Returns a string representing a number in fixed-point notation.\r\n     * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\r\n     */\r\n    toFixed(fractionDigits?: number): string;\r\n\r\n    /**\r\n     * Returns a string containing a number represented in exponential notation.\r\n     * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\r\n     */\r\n    toExponential(fractionDigits?: number): string;\r\n\r\n    /**\r\n     * Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\r\n     * @param precision Number of significant digits. Must be in the range 1 - 21, inclusive.\r\n     */\r\n    toPrecision(precision?: number): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): number;\r\n}\r\n\r\ninterface NumberConstructor {\r\n    new(value?: any): Number;\r\n    (value?: any): number;\r\n    readonly prototype: Number;\r\n\r\n    /** The largest number that can be represented in JavaScript. Equal to approximately 1.79E+308. */\r\n    readonly MAX_VALUE: number;\r\n\r\n    /** The closest number to zero that can be represented in JavaScript. Equal to approximately 5.00E-324. */\r\n    readonly MIN_VALUE: number;\r\n\r\n    /**\r\n     * A value that is not a number.\r\n     * In equality comparisons, NaN does not equal any value, including itself. To test whether a value is equivalent to NaN, use the isNaN function.\r\n     */\r\n    readonly NaN: number;\r\n\r\n    /**\r\n     * A value that is less than the largest negative number that can be represented in JavaScript.\r\n     * JavaScript displays NEGATIVE_INFINITY values as -infinity.\r\n     */\r\n    readonly NEGATIVE_INFINITY: number;\r\n\r\n    /**\r\n     * A value greater than the largest number that can be represented in JavaScript.\r\n     * JavaScript displays POSITIVE_INFINITY values as infinity.\r\n     */\r\n    readonly POSITIVE_INFINITY: number;\r\n}\r\n\r\n/** An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers. */\r\ndeclare var Number: NumberConstructor;\r\n\r\ninterface TemplateStringsArray extends ReadonlyArray<string> {\r\n    readonly raw: readonly string[];\r\n}\r\n\r\n/**\r\n * The type of `import.meta`.\r\n *\r\n * If you need to declare that a given property exists on `import.meta`,\r\n * this type may be augmented via interface merging.\r\n */\r\ninterface ImportMeta {\r\n}\r\n\r\ninterface Math {\r\n    /** The mathematical constant e. This is Euler's number, the base of natural logarithms. */\r\n    readonly E: number;\r\n    /** The natural logarithm of 10. */\r\n    readonly LN10: number;\r\n    /** The natural logarithm of 2. */\r\n    readonly LN2: number;\r\n    /** The base-2 logarithm of e. */\r\n    readonly LOG2E: number;\r\n    /** The base-10 logarithm of e. */\r\n    readonly LOG10E: number;\r\n    /** Pi. This is the ratio of the circumference of a circle to its diameter. */\r\n    readonly PI: number;\r\n    /** The square root of 0.5, or, equivalently, one divided by the square root of 2. */\r\n    readonly SQRT1_2: number;\r\n    /** The square root of 2. */\r\n    readonly SQRT2: number;\r\n    /**\r\n     * Returns the absolute value of a number (the value without regard to whether it is positive or negative).\r\n     * For example, the absolute value of -5 is the same as the absolute value of 5.\r\n     * @param x A numeric expression for which the absolute value is needed.\r\n     */\r\n    abs(x: number): number;\r\n    /**\r\n     * Returns the arc cosine (or inverse cosine) of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    acos(x: number): number;\r\n    /**\r\n     * Returns the arcsine of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    asin(x: number): number;\r\n    /**\r\n     * Returns the arctangent of a number.\r\n     * @param x A numeric expression for which the arctangent is needed.\r\n     */\r\n    atan(x: number): number;\r\n    /**\r\n     * Returns the angle (in radians) from the X axis to a point.\r\n     * @param y A numeric expression representing the cartesian y-coordinate.\r\n     * @param x A numeric expression representing the cartesian x-coordinate.\r\n     */\r\n    atan2(y: number, x: number): number;\r\n    /**\r\n     * Returns the smallest integer greater than or equal to its numeric argument.\r\n     * @param x A numeric expression.\r\n     */\r\n    ceil(x: number): number;\r\n    /**\r\n     * Returns the cosine of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    cos(x: number): number;\r\n    /**\r\n     * Returns e (the base of natural logarithms) raised to a power.\r\n     * @param x A numeric expression representing the power of e.\r\n     */\r\n    exp(x: number): number;\r\n    /**\r\n     * Returns the greatest integer less than or equal to its numeric argument.\r\n     * @param x A numeric expression.\r\n     */\r\n    floor(x: number): number;\r\n    /**\r\n     * Returns the natural logarithm (base e) of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    log(x: number): number;\r\n    /**\r\n     * Returns the larger of a set of supplied numeric expressions.\r\n     * @param values Numeric expressions to be evaluated.\r\n     */\r\n    max(...values: number[]): number;\r\n    /**\r\n     * Returns the smaller of a set of supplied numeric expressions.\r\n     * @param values Numeric expressions to be evaluated.\r\n     */\r\n    min(...values: number[]): number;\r\n    /**\r\n     * Returns the value of a base expression taken to a specified power.\r\n     * @param x The base value of the expression.\r\n     * @param y The exponent value of the expression.\r\n     */\r\n    pow(x: number, y: number): number;\r\n    /** Returns a pseudorandom number between 0 and 1. */\r\n    random(): number;\r\n    /**\r\n     * Returns a supplied numeric expression rounded to the nearest integer.\r\n     * @param x The value to be rounded to the nearest integer.\r\n     */\r\n    round(x: number): number;\r\n    /**\r\n     * Returns the sine of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    sin(x: number): number;\r\n    /**\r\n     * Returns the square root of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    sqrt(x: number): number;\r\n    /**\r\n     * Returns the tangent of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    tan(x: number): number;\r\n}\r\n/** An intrinsic object that provides basic mathematics functionality and constants. */\r\ndeclare var Math: Math;\r\n\r\n/** Enables basic storage and retrieval of dates and times. */\r\ninterface Date {\r\n    /** Returns a string representation of a date. The format of the string depends on the locale. */\r\n    toString(): string;\r\n    /** Returns a date as a string value. */\r\n    toDateString(): string;\r\n    /** Returns a time as a string value. */\r\n    toTimeString(): string;\r\n    /** Returns a value as a string value appropriate to the host environment's current locale. */\r\n    toLocaleString(): string;\r\n    /** Returns a date as a string value appropriate to the host environment's current locale. */\r\n    toLocaleDateString(): string;\r\n    /** Returns a time as a string value appropriate to the host environment's current locale. */\r\n    toLocaleTimeString(): string;\r\n    /** Returns the stored time value in milliseconds since midnight, January 1, 1970 UTC. */\r\n    valueOf(): number;\r\n    /** Gets the time value in milliseconds. */\r\n    getTime(): number;\r\n    /** Gets the year, using local time. */\r\n    getFullYear(): number;\r\n    /** Gets the year using Universal Coordinated Time (UTC). */\r\n    getUTCFullYear(): number;\r\n    /** Gets the month, using local time. */\r\n    getMonth(): number;\r\n    /** Gets the month of a Date object using Universal Coordinated Time (UTC). */\r\n    getUTCMonth(): number;\r\n    /** Gets the day-of-the-month, using local time. */\r\n    getDate(): number;\r\n    /** Gets the day-of-the-month, using Universal Coordinated Time (UTC). */\r\n    getUTCDate(): number;\r\n    /** Gets the day of the week, using local time. */\r\n    getDay(): number;\r\n    /** Gets the day of the week using Universal Coordinated Time (UTC). */\r\n    getUTCDay(): number;\r\n    /** Gets the hours in a date, using local time. */\r\n    getHours(): number;\r\n    /** Gets the hours value in a Date object using Universal Coordinated Time (UTC). */\r\n    getUTCHours(): number;\r\n    /** Gets the minutes of a Date object, using local time. */\r\n    getMinutes(): number;\r\n    /** Gets the minutes of a Date object using Universal Coordinated Time (UTC). */\r\n    getUTCMinutes(): number;\r\n    /** Gets the seconds of a Date object, using local time. */\r\n    getSeconds(): number;\r\n    /** Gets the seconds of a Date object using Universal Coordinated Time (UTC). */\r\n    getUTCSeconds(): number;\r\n    /** Gets the milliseconds of a Date, using local time. */\r\n    getMilliseconds(): number;\r\n    /** Gets the milliseconds of a Date object using Universal Coordinated Time (UTC). */\r\n    getUTCMilliseconds(): number;\r\n    /** Gets the difference in minutes between the time on the local computer and Universal Coordinated Time (UTC). */\r\n    getTimezoneOffset(): number;\r\n    /**\r\n     * Sets the date and time value in the Date object.\r\n     * @param time A numeric value representing the number of elapsed milliseconds since midnight, January 1, 1970 GMT.\r\n     */\r\n    setTime(time: number): number;\r\n    /**\r\n     * Sets the milliseconds value in the Date object using local time.\r\n     * @param ms A numeric value equal to the millisecond value.\r\n     */\r\n    setMilliseconds(ms: number): number;\r\n    /**\r\n     * Sets the milliseconds value in the Date object using Universal Coordinated Time (UTC).\r\n     * @param ms A numeric value equal to the millisecond value.\r\n     */\r\n    setUTCMilliseconds(ms: number): number;\r\n\r\n    /**\r\n     * Sets the seconds value in the Date object using local time.\r\n     * @param sec A numeric value equal to the seconds value.\r\n     * @param ms A numeric value equal to the milliseconds value.\r\n     */\r\n    setSeconds(sec: number, ms?: number): number;\r\n    /**\r\n     * Sets the seconds value in the Date object using Universal Coordinated Time (UTC).\r\n     * @param sec A numeric value equal to the seconds value.\r\n     * @param ms A numeric value equal to the milliseconds value.\r\n     */\r\n    setUTCSeconds(sec: number, ms?: number): number;\r\n    /**\r\n     * Sets the minutes value in the Date object using local time.\r\n     * @param min A numeric value equal to the minutes value.\r\n     * @param sec A numeric value equal to the seconds value.\r\n     * @param ms A numeric value equal to the milliseconds value.\r\n     */\r\n    setMinutes(min: number, sec?: number, ms?: number): number;\r\n    /**\r\n     * Sets the minutes value in the Date object using Universal Coordinated Time (UTC).\r\n     * @param min A numeric value equal to the minutes value.\r\n     * @param sec A numeric value equal to the seconds value.\r\n     * @param ms A numeric value equal to the milliseconds value.\r\n     */\r\n    setUTCMinutes(min: number, sec?: number, ms?: number): number;\r\n    /**\r\n     * Sets the hour value in the Date object using local time.\r\n     * @param hours A numeric value equal to the hours value.\r\n     * @param min A numeric value equal to the minutes value.\r\n     * @param sec A numeric value equal to the seconds value.\r\n     * @param ms A numeric value equal to the milliseconds value.\r\n     */\r\n    setHours(hours: number, min?: number, sec?: number, ms?: number): number;\r\n    /**\r\n     * Sets the hours value in the Date object using Universal Coordinated Time (UTC).\r\n     * @param hours A numeric value equal to the hours value.\r\n     * @param min A numeric value equal to the minutes value.\r\n     * @param sec A numeric value equal to the seconds value.\r\n     * @param ms A numeric value equal to the milliseconds value.\r\n     */\r\n    setUTCHours(hours: number, min?: number, sec?: number, ms?: number): number;\r\n    /**\r\n     * Sets the numeric day-of-the-month value of the Date object using local time.\r\n     * @param date A numeric value equal to the day of the month.\r\n     */\r\n    setDate(date: number): number;\r\n    /**\r\n     * Sets the numeric day of the month in the Date object using Universal Coordinated Time (UTC).\r\n     * @param date A numeric value equal to the day of the month.\r\n     */\r\n    setUTCDate(date: number): number;\r\n    /**\r\n     * Sets the month value in the Date object using local time.\r\n     * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\r\n     * @param date A numeric value representing the day of the month. If this value is not supplied, the value from a call to the getDate method is used.\r\n     */\r\n    setMonth(month: number, date?: number): number;\r\n    /**\r\n     * Sets the month value in the Date object using Universal Coordinated Time (UTC).\r\n     * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\r\n     * @param date A numeric value representing the day of the month. If it is not supplied, the value from a call to the getUTCDate method is used.\r\n     */\r\n    setUTCMonth(month: number, date?: number): number;\r\n    /**\r\n     * Sets the year of the Date object using local time.\r\n     * @param year A numeric value for the year.\r\n     * @param month A zero-based numeric value for the month (0 for January, 11 for December). Must be specified if numDate is specified.\r\n     * @param date A numeric value equal for the day of the month.\r\n     */\r\n    setFullYear(year: number, month?: number, date?: number): number;\r\n    /**\r\n     * Sets the year value in the Date object using Universal Coordinated Time (UTC).\r\n     * @param year A numeric value equal to the year.\r\n     * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively. Must be supplied if numDate is supplied.\r\n     * @param date A numeric value equal to the day of the month.\r\n     */\r\n    setUTCFullYear(year: number, month?: number, date?: number): number;\r\n    /** Returns a date converted to a string using Universal Coordinated Time (UTC). */\r\n    toUTCString(): string;\r\n    /** Returns a date as a string value in ISO format. */\r\n    toISOString(): string;\r\n    /** Used by the JSON.stringify method to enable the transformation of an object's data for JavaScript Object Notation (JSON) serialization. */\r\n    toJSON(key?: any): string;\r\n}\r\n\r\ninterface DateConstructor {\r\n    new(): Date;\r\n    new(value: number | string): Date;\r\n    new(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): Date;\r\n    (): string;\r\n    readonly prototype: Date;\r\n    /**\r\n     * Parses a string containing a date, and returns the number of milliseconds between that date and midnight, January 1, 1970.\r\n     * @param s A date string\r\n     */\r\n    parse(s: string): number;\r\n    /**\r\n     * Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.\r\n     * @param year The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.\r\n     * @param month The month as a number between 0 and 11 (January to December).\r\n     * @param date The date as a number between 1 and 31.\r\n     * @param hours Must be supplied if minutes is supplied. A number from 0 to 23 (midnight to 11pm) that specifies the hour.\r\n     * @param minutes Must be supplied if seconds is supplied. A number from 0 to 59 that specifies the minutes.\r\n     * @param seconds Must be supplied if milliseconds is supplied. A number from 0 to 59 that specifies the seconds.\r\n     * @param ms A number from 0 to 999 that specifies the milliseconds.\r\n     */\r\n    UTC(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): number;\r\n    now(): number;\r\n}\r\n\r\ndeclare var Date: DateConstructor;\r\n\r\ninterface RegExpMatchArray extends Array<string> {\r\n    index?: number;\r\n    input?: string;\r\n}\r\n\r\ninterface RegExpExecArray extends Array<string> {\r\n    index: number;\r\n    input: string;\r\n}\r\n\r\ninterface RegExp {\r\n    /**\r\n     * Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.\r\n     * @param string The String object or string literal on which to perform the search.\r\n     */\r\n    exec(string: string): RegExpExecArray | null;\r\n\r\n    /**\r\n     * Returns a Boolean value that indicates whether or not a pattern exists in a searched string.\r\n     * @param string String on which to perform the search.\r\n     */\r\n    test(string: string): boolean;\r\n\r\n    /** Returns a copy of the text of the regular expression pattern. Read-only. The regExp argument is a Regular expression object. It can be a variable name or a literal. */\r\n    readonly source: string;\r\n\r\n    /** Returns a Boolean value indicating the state of the global flag (g) used with a regular expression. Default is false. Read-only. */\r\n    readonly global: boolean;\r\n\r\n    /** Returns a Boolean value indicating the state of the ignoreCase flag (i) used with a regular expression. Default is false. Read-only. */\r\n    readonly ignoreCase: boolean;\r\n\r\n    /** Returns a Boolean value indicating the state of the multiline flag (m) used with a regular expression. Default is false. Read-only. */\r\n    readonly multiline: boolean;\r\n\r\n    lastIndex: number;\r\n\r\n    // Non-standard extensions\r\n    compile(): this;\r\n}\r\n\r\ninterface RegExpConstructor {\r\n    new(pattern: RegExp | string): RegExp;\r\n    new(pattern: string, flags?: string): RegExp;\r\n    (pattern: RegExp | string): RegExp;\r\n    (pattern: string, flags?: string): RegExp;\r\n    readonly prototype: RegExp;\r\n\r\n    // Non-standard extensions\r\n    $1: string;\r\n    $2: string;\r\n    $3: string;\r\n    $4: string;\r\n    $5: string;\r\n    $6: string;\r\n    $7: string;\r\n    $8: string;\r\n    $9: string;\r\n    lastMatch: string;\r\n}\r\n\r\ndeclare var RegExp: RegExpConstructor;\r\n\r\ninterface Error {\r\n    name: string;\r\n    message: string;\r\n    stack?: string;\r\n}\r\n\r\ninterface ErrorConstructor {\r\n    new(message?: string): Error;\r\n    (message?: string): Error;\r\n    readonly prototype: Error;\r\n}\r\n\r\ndeclare var Error: ErrorConstructor;\r\n\r\ninterface EvalError extends Error {\r\n}\r\n\r\ninterface EvalErrorConstructor extends ErrorConstructor {\r\n    new(message?: string): EvalError;\r\n    (message?: string): EvalError;\r\n    readonly prototype: EvalError;\r\n}\r\n\r\ndeclare var EvalError: EvalErrorConstructor;\r\n\r\ninterface RangeError extends Error {\r\n}\r\n\r\ninterface RangeErrorConstructor extends ErrorConstructor {\r\n    new(message?: string): RangeError;\r\n    (message?: string): RangeError;\r\n    readonly prototype: RangeError;\r\n}\r\n\r\ndeclare var RangeError: RangeErrorConstructor;\r\n\r\ninterface ReferenceError extends Error {\r\n}\r\n\r\ninterface ReferenceErrorConstructor extends ErrorConstructor {\r\n    new(message?: string): ReferenceError;\r\n    (message?: string): ReferenceError;\r\n    readonly prototype: ReferenceError;\r\n}\r\n\r\ndeclare var ReferenceError: ReferenceErrorConstructor;\r\n\r\ninterface SyntaxError extends Error {\r\n}\r\n\r\ninterface SyntaxErrorConstructor extends ErrorConstructor {\r\n    new(message?: string): SyntaxError;\r\n    (message?: string): SyntaxError;\r\n    readonly prototype: SyntaxError;\r\n}\r\n\r\ndeclare var SyntaxError: SyntaxErrorConstructor;\r\n\r\ninterface TypeError extends Error {\r\n}\r\n\r\ninterface TypeErrorConstructor extends ErrorConstructor {\r\n    new(message?: string): TypeError;\r\n    (message?: string): TypeError;\r\n    readonly prototype: TypeError;\r\n}\r\n\r\ndeclare var TypeError: TypeErrorConstructor;\r\n\r\ninterface URIError extends Error {\r\n}\r\n\r\ninterface URIErrorConstructor extends ErrorConstructor {\r\n    new(message?: string): URIError;\r\n    (message?: string): URIError;\r\n    readonly prototype: URIError;\r\n}\r\n\r\ndeclare var URIError: URIErrorConstructor;\r\n\r\ninterface JSON {\r\n    /**\r\n     * Converts a JavaScript Object Notation (JSON) string into an object.\r\n     * @param text A valid JSON string.\r\n     * @param reviver A function that transforms the results. This function is called for each member of the object.\r\n     * If a member contains nested objects, the nested objects are transformed before the parent object is.\r\n     */\r\n    parse(text: string, reviver?: (this: any, key: string, value: any) => any): any;\r\n    /**\r\n     * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\r\n     * @param value A JavaScript value, usually an object or array, to be converted.\r\n     * @param replacer A function that transforms the results.\r\n     * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.\r\n     */\r\n    stringify(value: any, replacer?: (this: any, key: string, value: any) => any, space?: string | number): string;\r\n    /**\r\n     * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\r\n     * @param value A JavaScript value, usually an object or array, to be converted.\r\n     * @param replacer An array of strings and numbers that acts as a approved list for selecting the object properties that will be stringified.\r\n     * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.\r\n     */\r\n    stringify(value: any, replacer?: (number | string)[] | null, space?: string | number): string;\r\n}\r\n\r\n/**\r\n * An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.\r\n */\r\ndeclare var JSON: JSON;\r\n\r\n\r\n/////////////////////////////\r\n/// ECMAScript Array API (specially handled by compiler)\r\n/////////////////////////////\r\n\r\ninterface ReadonlyArray<T> {\r\n    /**\r\n     * Gets the length of the array. This is a number one higher than the highest element defined in an array.\r\n     */\r\n    readonly length: number;\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n    /**\r\n     * Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\r\n     */\r\n    toLocaleString(): string;\r\n    /**\r\n     * Combines two or more arrays.\r\n     * @param items Additional items to add to the end of array1.\r\n     */\r\n    concat(...items: ConcatArray<T>[]): T[];\r\n    /**\r\n     * Combines two or more arrays.\r\n     * @param items Additional items to add to the end of array1.\r\n     */\r\n    concat(...items: (T | ConcatArray<T>)[]): T[];\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): T[];\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n     */\r\n    indexOf(searchElement: T, fromIndex?: number): number;\r\n    /**\r\n     * Returns the index of the last occurrence of a specified value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\r\n     */\r\n    lastIndexOf(searchElement: T, fromIndex?: number): number;\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param callbackfn A function that accepts up to three arguments. The every method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(callbackfn: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): boolean;\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param callbackfn A function that accepts up to three arguments. The some method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(callbackfn: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): boolean;\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: T, index: number, array: readonly T[]) => void, thisArg?: any): void;\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map<U>(callbackfn: (value: T, index: number, array: readonly T[]) => U, thisArg?: any): U[];\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter<S extends T>(callbackfn: (value: T, index: number, array: readonly T[]) => value is S, thisArg?: any): S[];\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(callbackfn: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): T[];\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T): T;\r\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T, initialValue: T): T;\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: readonly T[]) => U, initialValue: U): U;\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T): T;\r\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T, initialValue: T): T;\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: readonly T[]) => U, initialValue: U): U;\r\n\r\n    readonly [n: number]: T;\r\n}\r\n\r\ninterface ConcatArray<T> {\r\n    readonly length: number;\r\n    readonly [n: number]: T;\r\n    join(separator?: string): string;\r\n    slice(start?: number, end?: number): T[];\r\n}\r\n\r\ninterface Array<T> {\r\n    /**\r\n     * Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.\r\n     */\r\n    length: number;\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n    /**\r\n     * Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\r\n     */\r\n    toLocaleString(): string;\r\n    /**\r\n     * Removes the last element from an array and returns it.\r\n     */\r\n    pop(): T | undefined;\r\n    /**\r\n     * Appends new elements to an array, and returns the new length of the array.\r\n     * @param items New elements of the Array.\r\n     */\r\n    push(...items: T[]): number;\r\n    /**\r\n     * Combines two or more arrays.\r\n     * @param items Additional items to add to the end of array1.\r\n     */\r\n    concat(...items: ConcatArray<T>[]): T[];\r\n    /**\r\n     * Combines two or more arrays.\r\n     * @param items Additional items to add to the end of array1.\r\n     */\r\n    concat(...items: (T | ConcatArray<T>)[]): T[];\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): T[];\r\n    /**\r\n     * Removes the first element from an array and returns it.\r\n     */\r\n    shift(): T | undefined;\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): T[];\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: T, b: T) => number): this;\r\n    /**\r\n     * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\r\n     * @param start The zero-based location in the array from which to start removing elements.\r\n     * @param deleteCount The number of elements to remove.\r\n     */\r\n    splice(start: number, deleteCount?: number): T[];\r\n    /**\r\n     * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\r\n     * @param start The zero-based location in the array from which to start removing elements.\r\n     * @param deleteCount The number of elements to remove.\r\n     * @param items Elements to insert into the array in place of the deleted elements.\r\n     */\r\n    splice(start: number, deleteCount: number, ...items: T[]): T[];\r\n    /**\r\n     * Inserts new elements at the start of an array.\r\n     * @param items  Elements to insert at the start of the Array.\r\n     */\r\n    unshift(...items: T[]): number;\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n     */\r\n    indexOf(searchElement: T, fromIndex?: number): number;\r\n    /**\r\n     * Returns the index of the last occurrence of a specified value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\r\n     */\r\n    lastIndexOf(searchElement: T, fromIndex?: number): number;\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param callbackfn A function that accepts up to three arguments. The every method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(callbackfn: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean;\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param callbackfn A function that accepts up to three arguments. The some method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(callbackfn: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean;\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void;\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter<S extends T>(callbackfn: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[];\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(callbackfn: (value: T, index: number, array: T[]) => unknown, thisArg?: any): T[];\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\r\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\r\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\r\n\r\n    [n: number]: T;\r\n}\r\n\r\ninterface ArrayConstructor {\r\n    new(arrayLength?: number): any[];\r\n    new <T>(arrayLength: number): T[];\r\n    new <T>(...items: T[]): T[];\r\n    (arrayLength?: number): any[];\r\n    <T>(arrayLength: number): T[];\r\n    <T>(...items: T[]): T[];\r\n    isArray(arg: any): arg is any[];\r\n    readonly prototype: any[];\r\n}\r\n\r\ndeclare var Array: ArrayConstructor;\r\n\r\ninterface TypedPropertyDescriptor<T> {\r\n    enumerable?: boolean;\r\n    configurable?: boolean;\r\n    writable?: boolean;\r\n    value?: T;\r\n    get?: () => T;\r\n    set?: (value: T) => void;\r\n}\r\n\r\ndeclare type ClassDecorator = <TFunction extends Function>(target: TFunction) => TFunction | void;\r\ndeclare type PropertyDecorator = (target: Object, propertyKey: string | symbol) => void;\r\ndeclare type MethodDecorator = <T>(target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T> | void;\r\ndeclare type ParameterDecorator = (target: Object, propertyKey: string | symbol, parameterIndex: number) => void;\r\n\r\ndeclare type PromiseConstructorLike = new <T>(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void) => PromiseLike<T>;\r\n\r\ninterface PromiseLike<T> {\r\n    /**\r\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\r\n     * @param onfulfilled The callback to execute when the Promise is resolved.\r\n     * @param onrejected The callback to execute when the Promise is rejected.\r\n     * @returns A Promise for the completion of which ever callback is executed.\r\n     */\r\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): PromiseLike<TResult1 | TResult2>;\r\n}\r\n\r\n/**\r\n * Represents the completion of an asynchronous operation\r\n */\r\ninterface Promise<T> {\r\n    /**\r\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\r\n     * @param onfulfilled The callback to execute when the Promise is resolved.\r\n     * @param onrejected The callback to execute when the Promise is rejected.\r\n     * @returns A Promise for the completion of which ever callback is executed.\r\n     */\r\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;\r\n\r\n    /**\r\n     * Attaches a callback for only the rejection of the Promise.\r\n     * @param onrejected The callback to execute when the Promise is rejected.\r\n     * @returns A Promise for the completion of the callback.\r\n     */\r\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;\r\n}\r\n\r\ninterface ArrayLike<T> {\r\n    readonly length: number;\r\n    readonly [n: number]: T;\r\n}\r\n\r\n/**\r\n * Make all properties in T optional\r\n */\r\ntype Partial<T> = {\r\n    [P in keyof T]?: T[P];\r\n};\r\n\r\n/**\r\n * Make all properties in T required\r\n */\r\ntype Required<T> = {\r\n    [P in keyof T]-?: T[P];\r\n};\r\n\r\n/**\r\n * Make all properties in T readonly\r\n */\r\ntype Readonly<T> = {\r\n    readonly [P in keyof T]: T[P];\r\n};\r\n\r\n/**\r\n * From T, pick a set of properties whose keys are in the union K\r\n */\r\ntype Pick<T, K extends keyof T> = {\r\n    [P in K]: T[P];\r\n};\r\n\r\n/**\r\n * Construct a type with a set of properties K of type T\r\n */\r\ntype Record<K extends keyof any, T> = {\r\n    [P in K]: T;\r\n};\r\n\r\n/**\r\n * Exclude from T those types that are assignable to U\r\n */\r\ntype Exclude<T, U> = T extends U ? never : T;\r\n\r\n/**\r\n * Extract from T those types that are assignable to U\r\n */\r\ntype Extract<T, U> = T extends U ? T : never;\r\n\r\n/**\r\n * Construct a type with the properties of T except for those in type K.\r\n */\r\ntype Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>;\r\n\r\n/**\r\n * Exclude null and undefined from T\r\n */\r\ntype NonNullable<T> = T extends null | undefined ? never : T;\r\n\r\n/**\r\n * Obtain the parameters of a function type in a tuple\r\n */\r\ntype Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never;\r\n\r\n/**\r\n * Obtain the parameters of a constructor function type in a tuple\r\n */\r\ntype ConstructorParameters<T extends new (...args: any) => any> = T extends new (...args: infer P) => any ? P : never;\r\n\r\n/**\r\n * Obtain the return type of a function type\r\n */\r\ntype ReturnType<T extends (...args: any) => any> = T extends (...args: any) => infer R ? R : any;\r\n\r\n/**\r\n * Obtain the return type of a constructor function type\r\n */\r\ntype InstanceType<T extends new (...args: any) => any> = T extends new (...args: any) => infer R ? R : any;\r\n\r\n/**\r\n * Marker for contextual 'this' type\r\n */\r\ninterface ThisType<T> { }\r\n\r\n/**\r\n * Represents a raw buffer of binary data, which is used to store data for the\r\n * different typed arrays. ArrayBuffers cannot be read from or written to directly,\r\n * but can be passed to a typed array or DataView Object to interpret the raw\r\n * buffer as needed.\r\n */\r\ninterface ArrayBuffer {\r\n    /**\r\n     * Read-only. The length of the ArrayBuffer (in bytes).\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * Returns a section of an ArrayBuffer.\r\n     */\r\n    slice(begin: number, end?: number): ArrayBuffer;\r\n}\r\n\r\n/**\r\n * Allowed ArrayBuffer types for the buffer of an ArrayBufferView and related Typed Arrays.\r\n */\r\ninterface ArrayBufferTypes {\r\n    ArrayBuffer: ArrayBuffer;\r\n}\r\ntype ArrayBufferLike = ArrayBufferTypes[keyof ArrayBufferTypes];\r\n\r\ninterface ArrayBufferConstructor {\r\n    readonly prototype: ArrayBuffer;\r\n    new(byteLength: number): ArrayBuffer;\r\n    isView(arg: any): arg is ArrayBufferView;\r\n}\r\ndeclare var ArrayBuffer: ArrayBufferConstructor;\r\n\r\ninterface ArrayBufferView {\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    byteOffset: number;\r\n}\r\n\r\ninterface DataView {\r\n    readonly buffer: ArrayBuffer;\r\n    readonly byteLength: number;\r\n    readonly byteOffset: number;\r\n    /**\r\n     * Gets the Float32 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getFloat32(byteOffset: number, littleEndian?: boolean): number;\r\n\r\n    /**\r\n     * Gets the Float64 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getFloat64(byteOffset: number, littleEndian?: boolean): number;\r\n\r\n    /**\r\n     * Gets the Int8 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getInt8(byteOffset: number): number;\r\n\r\n    /**\r\n     * Gets the Int16 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getInt16(byteOffset: number, littleEndian?: boolean): number;\r\n    /**\r\n     * Gets the Int32 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getInt32(byteOffset: number, littleEndian?: boolean): number;\r\n\r\n    /**\r\n     * Gets the Uint8 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getUint8(byteOffset: number): number;\r\n\r\n    /**\r\n     * Gets the Uint16 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getUint16(byteOffset: number, littleEndian?: boolean): number;\r\n\r\n    /**\r\n     * Gets the Uint32 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getUint32(byteOffset: number, littleEndian?: boolean): number;\r\n\r\n    /**\r\n     * Stores an Float32 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     * @param littleEndian If false or undefined, a big-endian value should be written,\r\n     * otherwise a little-endian value should be written.\r\n     */\r\n    setFloat32(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n\r\n    /**\r\n     * Stores an Float64 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     * @param littleEndian If false or undefined, a big-endian value should be written,\r\n     * otherwise a little-endian value should be written.\r\n     */\r\n    setFloat64(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n\r\n    /**\r\n     * Stores an Int8 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     */\r\n    setInt8(byteOffset: number, value: number): void;\r\n\r\n    /**\r\n     * Stores an Int16 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     * @param littleEndian If false or undefined, a big-endian value should be written,\r\n     * otherwise a little-endian value should be written.\r\n     */\r\n    setInt16(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n\r\n    /**\r\n     * Stores an Int32 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     * @param littleEndian If false or undefined, a big-endian value should be written,\r\n     * otherwise a little-endian value should be written.\r\n     */\r\n    setInt32(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n\r\n    /**\r\n     * Stores an Uint8 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     */\r\n    setUint8(byteOffset: number, value: number): void;\r\n\r\n    /**\r\n     * Stores an Uint16 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     * @param littleEndian If false or undefined, a big-endian value should be written,\r\n     * otherwise a little-endian value should be written.\r\n     */\r\n    setUint16(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n\r\n    /**\r\n     * Stores an Uint32 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     * @param littleEndian If false or undefined, a big-endian value should be written,\r\n     * otherwise a little-endian value should be written.\r\n     */\r\n    setUint32(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n}\r\n\r\ninterface DataViewConstructor {\r\n    new(buffer: ArrayBufferLike, byteOffset?: number, byteLength?: number): DataView;\r\n}\r\ndeclare var DataView: DataViewConstructor;\r\n\r\n/**\r\n * A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\r\n * number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Int8Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param callbackfn A function that accepts up to three arguments. The every method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(callbackfn: (value: number, index: number, array: Int8Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Returns the this object after filling the section identified by start and end with value\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(callbackfn: (value: number, index: number, array: Int8Array) => any, thisArg?: any): Int8Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Int8Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Int8Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Int8Array) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Int8Array) => number, thisArg?: any): Int8Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int8Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int8Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Int8Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Int8Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param callbackfn A function that accepts up to three arguments. The some method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(callbackfn: (value: number, index: number, array: Int8Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Int8Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Int8Array;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Int8Array;\r\n\r\n    [index: number]: number;\r\n}\r\ninterface Int8ArrayConstructor {\r\n    readonly prototype: Int8Array;\r\n    new(length: number): Int8Array;\r\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Int8Array;\r\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Int8Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Int8Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Int8Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int8Array;\r\n\r\n\r\n}\r\ndeclare var Int8Array: Int8ArrayConstructor;\r\n\r\n/**\r\n * A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\r\n * requested number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Uint8Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param callbackfn A function that accepts up to three arguments. The every method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(callbackfn: (value: number, index: number, array: Uint8Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Returns the this object after filling the section identified by start and end with value\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(callbackfn: (value: number, index: number, array: Uint8Array) => any, thisArg?: any): Uint8Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Uint8Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Uint8Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Uint8Array) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Uint8Array) => number, thisArg?: any): Uint8Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Uint8Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Uint8Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param callbackfn A function that accepts up to three arguments. The some method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(callbackfn: (value: number, index: number, array: Uint8Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Uint8Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Uint8Array;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Uint8Array;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Uint8ArrayConstructor {\r\n    readonly prototype: Uint8Array;\r\n    new(length: number): Uint8Array;\r\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint8Array;\r\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint8Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Uint8Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Uint8Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint8Array;\r\n\r\n}\r\ndeclare var Uint8Array: Uint8ArrayConstructor;\r\n\r\n/**\r\n * A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\r\n * If the requested number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Uint8ClampedArray {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param callbackfn A function that accepts up to three arguments. The every method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Returns the this object after filling the section identified by start and end with value\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => any, thisArg?: any): Uint8ClampedArray;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Uint8ClampedArray) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Uint8ClampedArray) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => number, thisArg?: any): Uint8ClampedArray;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Uint8ClampedArray;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Uint8ClampedArray;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param callbackfn A function that accepts up to three arguments. The some method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Uint8ClampedArray view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Uint8ClampedArray;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Uint8ClampedArray;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Uint8ClampedArrayConstructor {\r\n    readonly prototype: Uint8ClampedArray;\r\n    new(length: number): Uint8ClampedArray;\r\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint8ClampedArray;\r\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint8ClampedArray;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Uint8ClampedArray;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Uint8ClampedArray;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint8ClampedArray;\r\n}\r\ndeclare var Uint8ClampedArray: Uint8ClampedArrayConstructor;\r\n\r\n/**\r\n * A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\r\n * requested number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Int16Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param callbackfn A function that accepts up to three arguments. The every method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(callbackfn: (value: number, index: number, array: Int16Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Returns the this object after filling the section identified by start and end with value\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(callbackfn: (value: number, index: number, array: Int16Array) => any, thisArg?: any): Int16Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Int16Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Int16Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Int16Array) => void, thisArg?: any): void;\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Int16Array) => number, thisArg?: any): Int16Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int16Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int16Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Int16Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Int16Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param callbackfn A function that accepts up to three arguments. The some method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(callbackfn: (value: number, index: number, array: Int16Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Int16Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Int16Array;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Int16Array;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Int16ArrayConstructor {\r\n    readonly prototype: Int16Array;\r\n    new(length: number): Int16Array;\r\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Int16Array;\r\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Int16Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Int16Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Int16Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int16Array;\r\n\r\n\r\n}\r\ndeclare var Int16Array: Int16ArrayConstructor;\r\n\r\n/**\r\n * A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\r\n * requested number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Uint16Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param callbackfn A function that accepts up to three arguments. The every method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(callbackfn: (value: number, index: number, array: Uint16Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Returns the this object after filling the section identified by start and end with value\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(callbackfn: (value: number, index: number, array: Uint16Array) => any, thisArg?: any): Uint16Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Uint16Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Uint16Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Uint16Array) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Uint16Array) => number, thisArg?: any): Uint16Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint16Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint16Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Uint16Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Uint16Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param callbackfn A function that accepts up to three arguments. The some method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(callbackfn: (value: number, index: number, array: Uint16Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Uint16Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Uint16Array;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Uint16Array;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Uint16ArrayConstructor {\r\n    readonly prototype: Uint16Array;\r\n    new(length: number): Uint16Array;\r\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint16Array;\r\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint16Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Uint16Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Uint16Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint16Array;\r\n\r\n\r\n}\r\ndeclare var Uint16Array: Uint16ArrayConstructor;\r\n/**\r\n * A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\r\n * requested number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Int32Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param callbackfn A function that accepts up to three arguments. The every method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(callbackfn: (value: number, index: number, array: Int32Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Returns the this object after filling the section identified by start and end with value\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(callbackfn: (value: number, index: number, array: Int32Array) => any, thisArg?: any): Int32Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Int32Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Int32Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Int32Array) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Int32Array) => number, thisArg?: any): Int32Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int32Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int32Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Int32Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Int32Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param callbackfn A function that accepts up to three arguments. The some method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(callbackfn: (value: number, index: number, array: Int32Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Int32Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Int32Array;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Int32Array;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Int32ArrayConstructor {\r\n    readonly prototype: Int32Array;\r\n    new(length: number): Int32Array;\r\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Int32Array;\r\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Int32Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Int32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Int32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int32Array;\r\n\r\n}\r\ndeclare var Int32Array: Int32ArrayConstructor;\r\n\r\n/**\r\n * A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\r\n * requested number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Uint32Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param callbackfn A function that accepts up to three arguments. The every method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(callbackfn: (value: number, index: number, array: Uint32Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Returns the this object after filling the section identified by start and end with value\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(callbackfn: (value: number, index: number, array: Uint32Array) => any, thisArg?: any): Uint32Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Uint32Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Uint32Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Uint32Array) => void, thisArg?: any): void;\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Uint32Array) => number, thisArg?: any): Uint32Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint32Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint32Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Uint32Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Uint32Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param callbackfn A function that accepts up to three arguments. The some method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(callbackfn: (value: number, index: number, array: Uint32Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Uint32Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Uint32Array;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Uint32Array;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Uint32ArrayConstructor {\r\n    readonly prototype: Uint32Array;\r\n    new(length: number): Uint32Array;\r\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint32Array;\r\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint32Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Uint32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Uint32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint32Array;\r\n\r\n}\r\ndeclare var Uint32Array: Uint32ArrayConstructor;\r\n\r\n/**\r\n * A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\r\n * of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Float32Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param callbackfn A function that accepts up to three arguments. The every method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(callbackfn: (value: number, index: number, array: Float32Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Returns the this object after filling the section identified by start and end with value\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(callbackfn: (value: number, index: number, array: Float32Array) => any, thisArg?: any): Float32Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Float32Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Float32Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Float32Array) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Float32Array) => number, thisArg?: any): Float32Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float32Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float32Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Float32Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Float32Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param callbackfn A function that accepts up to three arguments. The some method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(callbackfn: (value: number, index: number, array: Float32Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Float32Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Float32Array;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Float32Array;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Float32ArrayConstructor {\r\n    readonly prototype: Float32Array;\r\n    new(length: number): Float32Array;\r\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Float32Array;\r\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Float32Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Float32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Float32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float32Array;\r\n\r\n\r\n}\r\ndeclare var Float32Array: Float32ArrayConstructor;\r\n\r\n/**\r\n * A typed array of 64-bit float values. The contents are initialized to 0. If the requested\r\n * number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Float64Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param callbackfn A function that accepts up to three arguments. The every method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(callbackfn: (value: number, index: number, array: Float64Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Returns the this object after filling the section identified by start and end with value\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(callbackfn: (value: number, index: number, array: Float64Array) => any, thisArg?: any): Float64Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Float64Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Float64Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Float64Array) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Float64Array) => number, thisArg?: any): Float64Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float64Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float64Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Float64Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Float64Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param callbackfn A function that accepts up to three arguments. The some method calls\r\n     * the callbackfn function for each element in the array until the callbackfn returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(callbackfn: (value: number, index: number, array: Float64Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Float64Array;\r\n\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Float64Array;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Float64ArrayConstructor {\r\n    readonly prototype: Float64Array;\r\n    new(length: number): Float64Array;\r\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Float64Array;\r\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Float64Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Float64Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Float64Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float64Array;\r\n\r\n}\r\ndeclare var Float64Array: Float64ArrayConstructor;\r\n\r\n/////////////////////////////\r\n/// ECMAScript Internationalization API\r\n/////////////////////////////\r\n\r\ndeclare namespace Intl {\r\n    interface CollatorOptions {\r\n        usage?: string;\r\n        localeMatcher?: string;\r\n        numeric?: boolean;\r\n        caseFirst?: string;\r\n        sensitivity?: string;\r\n        ignorePunctuation?: boolean;\r\n    }\r\n\r\n    interface ResolvedCollatorOptions {\r\n        locale: string;\r\n        usage: string;\r\n        sensitivity: string;\r\n        ignorePunctuation: boolean;\r\n        collation: string;\r\n        caseFirst: string;\r\n        numeric: boolean;\r\n    }\r\n\r\n    interface Collator {\r\n        compare(x: string, y: string): number;\r\n        resolvedOptions(): ResolvedCollatorOptions;\r\n    }\r\n    var Collator: {\r\n        new(locales?: string | string[], options?: CollatorOptions): Collator;\r\n        (locales?: string | string[], options?: CollatorOptions): Collator;\r\n        supportedLocalesOf(locales: string | string[], options?: CollatorOptions): string[];\r\n    };\r\n\r\n    interface NumberFormatOptions {\r\n        localeMatcher?: string;\r\n        style?: string;\r\n        currency?: string;\r\n        currencyDisplay?: string;\r\n        useGrouping?: boolean;\r\n        minimumIntegerDigits?: number;\r\n        minimumFractionDigits?: number;\r\n        maximumFractionDigits?: number;\r\n        minimumSignificantDigits?: number;\r\n        maximumSignificantDigits?: number;\r\n    }\r\n\r\n    interface ResolvedNumberFormatOptions {\r\n        locale: string;\r\n        numberingSystem: string;\r\n        style: string;\r\n        currency?: string;\r\n        currencyDisplay?: string;\r\n        minimumIntegerDigits: number;\r\n        minimumFractionDigits: number;\r\n        maximumFractionDigits: number;\r\n        minimumSignificantDigits?: number;\r\n        maximumSignificantDigits?: number;\r\n        useGrouping: boolean;\r\n    }\r\n\r\n    interface NumberFormat {\r\n        format(value: number): string;\r\n        resolvedOptions(): ResolvedNumberFormatOptions;\r\n    }\r\n    var NumberFormat: {\r\n        new(locales?: string | string[], options?: NumberFormatOptions): NumberFormat;\r\n        (locales?: string | string[], options?: NumberFormatOptions): NumberFormat;\r\n        supportedLocalesOf(locales: string | string[], options?: NumberFormatOptions): string[];\r\n    };\r\n\r\n    interface DateTimeFormatOptions {\r\n        localeMatcher?: string;\r\n        weekday?: string;\r\n        era?: string;\r\n        year?: string;\r\n        month?: string;\r\n        day?: string;\r\n        hour?: string;\r\n        minute?: string;\r\n        second?: string;\r\n        timeZoneName?: string;\r\n        formatMatcher?: string;\r\n        hour12?: boolean;\r\n        timeZone?: string;\r\n    }\r\n\r\n    interface ResolvedDateTimeFormatOptions {\r\n        locale: string;\r\n        calendar: string;\r\n        numberingSystem: string;\r\n        timeZone: string;\r\n        hour12?: boolean;\r\n        weekday?: string;\r\n        era?: string;\r\n        year?: string;\r\n        month?: string;\r\n        day?: string;\r\n        hour?: string;\r\n        minute?: string;\r\n        second?: string;\r\n        timeZoneName?: string;\r\n    }\r\n\r\n    interface DateTimeFormat {\r\n        format(date?: Date | number): string;\r\n        resolvedOptions(): ResolvedDateTimeFormatOptions;\r\n    }\r\n    var DateTimeFormat: {\r\n        new(locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;\r\n        (locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;\r\n        supportedLocalesOf(locales: string | string[], options?: DateTimeFormatOptions): string[];\r\n    };\r\n}\r\n\r\ninterface String {\r\n    /**\r\n     * Determines whether two strings are equivalent in the current or specified locale.\r\n     * @param that String to compare to target string\r\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\r\n     * @param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\r\n     */\r\n    localeCompare(that: string, locales?: string | string[], options?: Intl.CollatorOptions): number;\r\n}\r\n\r\ninterface Number {\r\n    /**\r\n     * Converts a number to a string by using the current or specified locale.\r\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\r\n     * @param options An object that contains one or more properties that specify comparison options.\r\n     */\r\n    toLocaleString(locales?: string | string[], options?: Intl.NumberFormatOptions): string;\r\n}\r\n\r\ninterface Date {\r\n    /**\r\n     * Converts a date and time to a string by using the current or specified locale.\r\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\r\n     * @param options An object that contains one or more properties that specify comparison options.\r\n     */\r\n    toLocaleString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\r\n    /**\r\n     * Converts a date to a string by using the current or specified locale.\r\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\r\n     * @param options An object that contains one or more properties that specify comparison options.\r\n     */\r\n    toLocaleDateString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\r\n\r\n    /**\r\n     * Converts a time to a string by using the current or specified locale.\r\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\r\n     * @param options An object that contains one or more properties that specify comparison options.\r\n     */\r\n    toLocaleTimeString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\r\n}\r\n"},"./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/node/globals.d.ts":function(e,t,n){"use strict";n.r(t),t.default='// This needs to be global to avoid TS2403 in case lib.dom.d.ts is present in the same build\ninterface Console {\n    /**\n     * The `console.debug()` function is an alias for {@link console.log()}.\n     */\n    debug(message?: any, ...optionalParams: any[]): void;\n    /**\n     * The {@link console.info()} function is an alias for {@link console.log()}.\n     */\n    info(message?: any, ...optionalParams: any[]): void;\n    /**\n     * Prints to `stdout` with newline.\n     */\n    log(message?: any, ...optionalParams: any[]): void;\n    /**\n     * The {@link console.warn()} function is an alias for {@link console.error()}.\n     */\n    warn(message?: any, ...optionalParams: any[]): void;\n    /**\n     * Prints to `stderr` with newline.\n     */\n    error(message?: any, ...optionalParams: any[]): void;\n}\n\ninterface Error {\n    stack?: string;\n}\n\n// Declare "static" methods in Error\ninterface ErrorConstructor {\n    /** Create .stack property on a target object */\n    captureStackTrace(targetObject: Object, constructorOpt?: Function): void;\n\n    /**\n     * Optional override for formatting stack traces\n     *\n     * @see https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n     */\n    prepareStackTrace?: (err: Error, stackTraces: NodeJS.CallSite[]) => any;\n\n    stackTraceLimit: number;\n}\n\ninterface SymbolConstructor {\n    readonly observable: symbol;\n}\n\n// Node.js ESNEXT support\ninterface String {\n    /** Removes whitespace from the left end of a string. */\n    trimLeft(): string;\n    /** Removes whitespace from the right end of a string. */\n    trimRight(): string;\n}\n\ninterface ImportMeta {\n    url: string;\n}\n\n/*-----------------------------------------------*\n *                                               *\n *                   GLOBAL                      *\n *                                               *\n ------------------------------------------------*/\ndeclare var process: NodeJS.Process;\ndeclare var global: NodeJS.Global;\ndeclare var console: Console;\n\ndeclare var __filename: string;\ndeclare var __dirname: string;\n\ndeclare function setTimeout(callback: (...args: any[]) => void, ms: number, ...args: any[]): NodeJS.Timeout;\ndeclare namespace setTimeout {\n    function __promisify__(ms: number): Promise<void>;\n    function __promisify__<T>(ms: number, value: T): Promise<T>;\n}\ndeclare function clearTimeout(timeoutId: NodeJS.Timeout): void;\ndeclare function setInterval(callback: (...args: any[]) => void, ms: number, ...args: any[]): NodeJS.Timeout;\ndeclare function clearInterval(intervalId: NodeJS.Timeout): void;\ndeclare function setImmediate(callback: (...args: any[]) => void, ...args: any[]): NodeJS.Immediate;\ndeclare namespace setImmediate {\n    function __promisify__(): Promise<void>;\n    function __promisify__<T>(value: T): Promise<T>;\n}\ndeclare function clearImmediate(immediateId: NodeJS.Immediate): void;\n\ndeclare function queueMicrotask(callback: () => void): void;\n\n// TODO: change to `type NodeRequireFunction = (id: string) => any;` in next mayor version.\ninterface NodeRequireFunction {\n    /* tslint:disable-next-line:callable-types */\n    (id: string): any;\n}\n\ninterface NodeRequire extends NodeRequireFunction {\n    resolve: RequireResolve;\n    cache: any;\n    /**\n     * @deprecated\n     */\n    extensions: NodeExtensions;\n    main: NodeModule | undefined;\n}\n\ninterface RequireResolve {\n    (id: string, options?: { paths?: string[]; }): string;\n    paths(request: string): string[] | null;\n}\n\ninterface NodeExtensions {\n    \'.js\': (m: NodeModule, filename: string) => any;\n    \'.json\': (m: NodeModule, filename: string) => any;\n    \'.node\': (m: NodeModule, filename: string) => any;\n    [ext: string]: (m: NodeModule, filename: string) => any;\n}\n\ndeclare var require: NodeRequire;\n\ninterface NodeModule {\n    exports: any;\n    require: NodeRequireFunction;\n    id: string;\n    filename: string;\n    loaded: boolean;\n    parent: NodeModule | null;\n    children: NodeModule[];\n    paths: string[];\n}\n\ndeclare var module: NodeModule;\n\n// Same as module.exports\ndeclare var exports: any;\n\n// Buffer class\ntype BufferEncoding = "ascii" | "utf8" | "utf-8" | "utf16le" | "ucs2" | "ucs-2" | "base64" | "latin1" | "binary" | "hex";\n\ninterface Buffer {\n    constructor: typeof Buffer;\n}\n\n/**\n * Raw data is stored in instances of the Buffer class.\n * A Buffer is similar to an array of integers but corresponds to a raw memory allocation outside the V8 heap.  A Buffer cannot be resized.\n * Valid string encodings: \'ascii\'|\'utf8\'|\'utf16le\'|\'ucs2\'(alias of \'utf16le\')|\'base64\'|\'binary\'(deprecated)|\'hex\'\n */\ndeclare class Buffer extends Uint8Array {\n    /**\n     * Allocates a new buffer containing the given {str}.\n     *\n     * @param str String to store in buffer.\n     * @param encoding encoding to use, optional.  Default is \'utf8\'\n     * @deprecated since v10.0.0 - Use `Buffer.from(string[, encoding])` instead.\n     */\n    constructor(str: string, encoding?: BufferEncoding);\n    /**\n     * Allocates a new buffer of {size} octets.\n     *\n     * @param size count of octets to allocate.\n     * @deprecated since v10.0.0 - Use `Buffer.alloc()` instead (also see `Buffer.allocUnsafe()`).\n     */\n    constructor(size: number);\n    /**\n     * Allocates a new buffer containing the given {array} of octets.\n     *\n     * @param array The octets to store.\n     * @deprecated since v10.0.0 - Use `Buffer.from(array)` instead.\n     */\n    constructor(array: Uint8Array);\n    /**\n     * Produces a Buffer backed by the same allocated memory as\n     * the given {ArrayBuffer}/{SharedArrayBuffer}.\n     *\n     *\n     * @param arrayBuffer The ArrayBuffer with which to share memory.\n     * @deprecated since v10.0.0 - Use `Buffer.from(arrayBuffer[, byteOffset[, length]])` instead.\n     */\n    constructor(arrayBuffer: ArrayBuffer | SharedArrayBuffer);\n    /**\n     * Allocates a new buffer containing the given {array} of octets.\n     *\n     * @param array The octets to store.\n     * @deprecated since v10.0.0 - Use `Buffer.from(array)` instead.\n     */\n    constructor(array: any[]);\n    /**\n     * Copies the passed {buffer} data onto a new {Buffer} instance.\n     *\n     * @param buffer The buffer to copy.\n     * @deprecated since v10.0.0 - Use `Buffer.from(buffer)` instead.\n     */\n    constructor(buffer: Buffer);\n    /**\n     * When passed a reference to the .buffer property of a TypedArray instance,\n     * the newly created Buffer will share the same allocated memory as the TypedArray.\n     * The optional {byteOffset} and {length} arguments specify a memory range\n     * within the {arrayBuffer} that will be shared by the Buffer.\n     *\n     * @param arrayBuffer The .buffer property of any TypedArray or a new ArrayBuffer()\n     */\n    static from(arrayBuffer: ArrayBuffer | SharedArrayBuffer, byteOffset?: number, length?: number): Buffer;\n    /**\n     * Creates a new Buffer using the passed {data}\n     * @param data data to create a new Buffer\n     */\n    static from(data: number[]): Buffer;\n    static from(data: Uint8Array): Buffer;\n    /**\n     * Creates a new Buffer containing the given JavaScript string {str}.\n     * If provided, the {encoding} parameter identifies the character encoding.\n     * If not provided, {encoding} defaults to \'utf8\'.\n     */\n    static from(str: string, encoding?: BufferEncoding): Buffer;\n    /**\n     * Creates a new Buffer using the passed {data}\n     * @param values to create a new Buffer\n     */\n    static of(...items: number[]): Buffer;\n    /**\n     * Returns true if {obj} is a Buffer\n     *\n     * @param obj object to test.\n     */\n    static isBuffer(obj: any): obj is Buffer;\n    /**\n     * Returns true if {encoding} is a valid encoding argument.\n     * Valid string encodings in Node 0.12: \'ascii\'|\'utf8\'|\'utf16le\'|\'ucs2\'(alias of \'utf16le\')|\'base64\'|\'binary\'(deprecated)|\'hex\'\n     *\n     * @param encoding string to test.\n     */\n    static isEncoding(encoding: string): encoding is BufferEncoding;\n    /**\n     * Gives the actual byte length of a string. encoding defaults to \'utf8\'.\n     * This is not the same as String.prototype.length since that returns the number of characters in a string.\n     *\n     * @param string string to test.\n     * @param encoding encoding used to evaluate (defaults to \'utf8\')\n     */\n    static byteLength(\n        string: string | NodeJS.ArrayBufferView | ArrayBuffer | SharedArrayBuffer,\n        encoding?: BufferEncoding\n    ): number;\n    /**\n     * Returns a buffer which is the result of concatenating all the buffers in the list together.\n     *\n     * If the list has no items, or if the totalLength is 0, then it returns a zero-length buffer.\n     * If the list has exactly one item, then the first item of the list is returned.\n     * If the list has more than one item, then a new Buffer is created.\n     *\n     * @param list An array of Buffer objects to concatenate\n     * @param totalLength Total length of the buffers when concatenated.\n     *   If totalLength is not provided, it is read from the buffers in the list. However, this adds an additional loop to the function, so it is faster to provide the length explicitly.\n     */\n    static concat(list: Uint8Array[], totalLength?: number): Buffer;\n    /**\n     * The same as buf1.compare(buf2).\n     */\n    static compare(buf1: Uint8Array, buf2: Uint8Array): number;\n    /**\n     * Allocates a new buffer of {size} octets.\n     *\n     * @param size count of octets to allocate.\n     * @param fill if specified, buffer will be initialized by calling buf.fill(fill).\n     *    If parameter is omitted, buffer will be filled with zeros.\n     * @param encoding encoding used for call to buf.fill while initalizing\n     */\n    static alloc(size: number, fill?: string | Buffer | number, encoding?: BufferEncoding): Buffer;\n    /**\n     * Allocates a new buffer of {size} octets, leaving memory not initialized, so the contents\n     * of the newly created Buffer are unknown and may contain sensitive data.\n     *\n     * @param size count of octets to allocate\n     */\n    static allocUnsafe(size: number): Buffer;\n    /**\n     * Allocates a new non-pooled buffer of {size} octets, leaving memory not initialized, so the contents\n     * of the newly created Buffer are unknown and may contain sensitive data.\n     *\n     * @param size count of octets to allocate\n     */\n    static allocUnsafeSlow(size: number): Buffer;\n    /**\n     * This is the number of bytes used to determine the size of pre-allocated, internal Buffer instances used for pooling. This value may be modified.\n     */\n    static poolSize: number;\n\n    write(string: string, encoding?: BufferEncoding): number;\n    write(string: string, offset: number, encoding?: BufferEncoding): number;\n    write(string: string, offset: number, length: number, encoding?: BufferEncoding): number;\n    toString(encoding?: string, start?: number, end?: number): string;\n    toJSON(): { type: \'Buffer\'; data: number[] };\n    equals(otherBuffer: Uint8Array): boolean;\n    compare(\n        otherBuffer: Uint8Array,\n        targetStart?: number,\n        targetEnd?: number,\n        sourceStart?: number,\n        sourceEnd?: number\n    ): number;\n    copy(targetBuffer: Uint8Array, targetStart?: number, sourceStart?: number, sourceEnd?: number): number;\n    /**\n     * Returns a new `Buffer` that references **the same memory as the original**, but offset and cropped by the start and end indices.\n     *\n     * This method is incompatible with `Uint8Array#slice()`, which returns a copy of the original memory.\n     *\n     * @param begin Where the new `Buffer` will start. Default: `0`.\n     * @param end Where the new `Buffer` will end (not inclusive). Default: `buf.length`.\n     */\n    slice(begin?: number, end?: number): Buffer;\n    /**\n     * Returns a new `Buffer` that references **the same memory as the original**, but offset and cropped by the start and end indices.\n     *\n     * This method is compatible with `Uint8Array#subarray()`.\n     *\n     * @param begin Where the new `Buffer` will start. Default: `0`.\n     * @param end Where the new `Buffer` will end (not inclusive). Default: `buf.length`.\n     */\n    subarray(begin?: number, end?: number): Buffer;\n    writeUIntLE(value: number, offset: number, byteLength: number): number;\n    writeUIntBE(value: number, offset: number, byteLength: number): number;\n    writeIntLE(value: number, offset: number, byteLength: number): number;\n    writeIntBE(value: number, offset: number, byteLength: number): number;\n    readUIntLE(offset: number, byteLength: number): number;\n    readUIntBE(offset: number, byteLength: number): number;\n    readIntLE(offset: number, byteLength: number): number;\n    readIntBE(offset: number, byteLength: number): number;\n    readUInt8(offset: number): number;\n    readUInt16LE(offset: number): number;\n    readUInt16BE(offset: number): number;\n    readUInt32LE(offset: number): number;\n    readUInt32BE(offset: number): number;\n    readInt8(offset: number): number;\n    readInt16LE(offset: number): number;\n    readInt16BE(offset: number): number;\n    readInt32LE(offset: number): number;\n    readInt32BE(offset: number): number;\n    readFloatLE(offset: number): number;\n    readFloatBE(offset: number): number;\n    readDoubleLE(offset: number): number;\n    readDoubleBE(offset: number): number;\n    reverse(): this;\n    swap16(): Buffer;\n    swap32(): Buffer;\n    swap64(): Buffer;\n    writeUInt8(value: number, offset: number): number;\n    writeUInt16LE(value: number, offset: number): number;\n    writeUInt16BE(value: number, offset: number): number;\n    writeUInt32LE(value: number, offset: number): number;\n    writeUInt32BE(value: number, offset: number): number;\n    writeInt8(value: number, offset: number): number;\n    writeInt16LE(value: number, offset: number): number;\n    writeInt16BE(value: number, offset: number): number;\n    writeInt32LE(value: number, offset: number): number;\n    writeInt32BE(value: number, offset: number): number;\n    writeFloatLE(value: number, offset: number): number;\n    writeFloatBE(value: number, offset: number): number;\n    writeDoubleLE(value: number, offset: number): number;\n    writeDoubleBE(value: number, offset: number): number;\n\n    fill(value: string | Uint8Array | number, offset?: number, end?: number, encoding?: BufferEncoding): this;\n\n    indexOf(value: string | number | Uint8Array, byteOffset?: number, encoding?: BufferEncoding): number;\n    lastIndexOf(value: string | number | Uint8Array, byteOffset?: number, encoding?: BufferEncoding): number;\n    entries(): IterableIterator<[number, number]>;\n    includes(value: string | number | Buffer, byteOffset?: number, encoding?: BufferEncoding): boolean;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n\n/*----------------------------------------------*\n*                                               *\n*               GLOBAL INTERFACES               *\n*                                               *\n*-----------------------------------------------*/\ndeclare namespace NodeJS {\n    interface InspectOptions {\n        /**\n         * If set to `true`, getters are going to be\n         * inspected as well. If set to `\'get\'` only getters without setter are going\n         * to be inspected. If set to `\'set\'` only getters having a corresponding\n         * setter are going to be inspected. This might cause side effects depending on\n         * the getter function.\n         * @default `false`\n         */\n        getters?: \'get\' | \'set\' | boolean;\n        showHidden?: boolean;\n        /**\n         * @default 2\n         */\n        depth?: number | null;\n        colors?: boolean;\n        customInspect?: boolean;\n        showProxy?: boolean;\n        maxArrayLength?: number | null;\n        breakLength?: number;\n        /**\n         * Setting this to `false` causes each object key\n         * to be displayed on a new line. It will also add new lines to text that is\n         * longer than `breakLength`. If set to a number, the most `n` inner elements\n         * are united on a single line as long as all properties fit into\n         * `breakLength`. Short array elements are also grouped together. Note that no\n         * text will be reduced below 16 characters, no matter the `breakLength` size.\n         * For more information, see the example below.\n         * @default `true`\n         */\n        compact?: boolean | number;\n        sorted?: boolean | ((a: string, b: string) => number);\n    }\n\n    interface ConsoleConstructorOptions {\n        stdout: WritableStream;\n        stderr?: WritableStream;\n        ignoreErrors?: boolean;\n        colorMode?: boolean | \'auto\';\n        inspectOptions?: InspectOptions;\n    }\n\n    interface ConsoleConstructor {\n        prototype: Console;\n        new(stdout: WritableStream, stderr?: WritableStream, ignoreErrors?: boolean): Console;\n        new(options: ConsoleConstructorOptions): Console;\n    }\n\n    interface CallSite {\n        /**\n         * Value of "this"\n         */\n        getThis(): any;\n\n        /**\n         * Type of "this" as a string.\n         * This is the name of the function stored in the constructor field of\n         * "this", if available.  Otherwise the object\'s [[Class]] internal\n         * property.\n         */\n        getTypeName(): string | null;\n\n        /**\n         * Current function\n         */\n        getFunction(): Function | undefined;\n\n        /**\n         * Name of the current function, typically its name property.\n         * If a name property is not available an attempt will be made to try\n         * to infer a name from the function\'s context.\n         */\n        getFunctionName(): string | null;\n\n        /**\n         * Name of the property [of "this" or one of its prototypes] that holds\n         * the current function\n         */\n        getMethodName(): string | null;\n\n        /**\n         * Name of the script [if this function was defined in a script]\n         */\n        getFileName(): string | null;\n\n        /**\n         * Current line number [if this function was defined in a script]\n         */\n        getLineNumber(): number | null;\n\n        /**\n         * Current column number [if this function was defined in a script]\n         */\n        getColumnNumber(): number | null;\n\n        /**\n         * A call site object representing the location where eval was called\n         * [if this function was created using a call to eval]\n         */\n        getEvalOrigin(): string | undefined;\n\n        /**\n         * Is this a toplevel invocation, that is, is "this" the global object?\n         */\n        isToplevel(): boolean;\n\n        /**\n         * Does this call take place in code defined by a call to eval?\n         */\n        isEval(): boolean;\n\n        /**\n         * Is this call in native V8 code?\n         */\n        isNative(): boolean;\n\n        /**\n         * Is this a constructor call?\n         */\n        isConstructor(): boolean;\n    }\n\n    interface ErrnoException extends Error {\n        errno?: number;\n        code?: string;\n        path?: string;\n        syscall?: string;\n        stack?: string;\n    }\n\n    class EventEmitter {\n        addListener(event: string | symbol, listener: (...args: any[]) => void): this;\n        on(event: string | symbol, listener: (...args: any[]) => void): this;\n        once(event: string | symbol, listener: (...args: any[]) => void): this;\n        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;\n        off(event: string | symbol, listener: (...args: any[]) => void): this;\n        removeAllListeners(event?: string | symbol): this;\n        setMaxListeners(n: number): this;\n        getMaxListeners(): number;\n        listeners(event: string | symbol): Function[];\n        rawListeners(event: string | symbol): Function[];\n        emit(event: string | symbol, ...args: any[]): boolean;\n        listenerCount(type: string | symbol): number;\n        // Added in Node 6...\n        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;\n        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;\n        eventNames(): Array<string | symbol>;\n    }\n\n    interface ReadableStream extends EventEmitter {\n        readable: boolean;\n        read(size?: number): string | Buffer;\n        setEncoding(encoding: string): this;\n        pause(): this;\n        resume(): this;\n        isPaused(): boolean;\n        pipe<T extends WritableStream>(destination: T, options?: { end?: boolean; }): T;\n        unpipe(destination?: WritableStream): this;\n        unshift(chunk: string | Uint8Array, encoding?: BufferEncoding): void;\n        wrap(oldStream: ReadableStream): this;\n        [Symbol.asyncIterator](): AsyncIterableIterator<string | Buffer>;\n    }\n\n    interface WritableStream extends EventEmitter {\n        writable: boolean;\n        write(buffer: Uint8Array | string, cb?: (err?: Error | null) => void): boolean;\n        write(str: string, encoding?: string, cb?: (err?: Error | null) => void): boolean;\n        end(cb?: () => void): void;\n        end(data: string | Uint8Array, cb?: () => void): void;\n        end(str: string, encoding?: string, cb?: () => void): void;\n    }\n\n    interface ReadWriteStream extends ReadableStream, WritableStream { }\n\n    interface Domain extends EventEmitter {\n        run<T>(fn: (...args: any[]) => T, ...args: any[]): T;\n        add(emitter: EventEmitter | Timer): void;\n        remove(emitter: EventEmitter | Timer): void;\n        bind<T extends Function>(cb: T): T;\n        intercept<T extends Function>(cb: T): T;\n\n        addListener(event: string, listener: (...args: any[]) => void): this;\n        on(event: string, listener: (...args: any[]) => void): this;\n        once(event: string, listener: (...args: any[]) => void): this;\n        removeListener(event: string, listener: (...args: any[]) => void): this;\n        removeAllListeners(event?: string): this;\n    }\n\n    interface MemoryUsage {\n        rss: number;\n        heapTotal: number;\n        heapUsed: number;\n        external: number;\n    }\n\n    interface CpuUsage {\n        user: number;\n        system: number;\n    }\n\n    interface ProcessRelease {\n        name: string;\n        sourceUrl?: string;\n        headersUrl?: string;\n        libUrl?: string;\n        lts?: string;\n    }\n\n    interface ProcessVersions {\n        http_parser: string;\n        node: string;\n        v8: string;\n        ares: string;\n        uv: string;\n        zlib: string;\n        modules: string;\n        openssl: string;\n    }\n\n    type Platform = \'aix\'\n        | \'android\'\n        | \'darwin\'\n        | \'freebsd\'\n        | \'linux\'\n        | \'openbsd\'\n        | \'sunos\'\n        | \'win32\'\n        | \'cygwin\'\n        | \'netbsd\';\n\n    type Signals =\n        "SIGABRT" | "SIGALRM" | "SIGBUS" | "SIGCHLD" | "SIGCONT" | "SIGFPE" | "SIGHUP" | "SIGILL" | "SIGINT" | "SIGIO" |\n        "SIGIOT" | "SIGKILL" | "SIGPIPE" | "SIGPOLL" | "SIGPROF" | "SIGPWR" | "SIGQUIT" | "SIGSEGV" | "SIGSTKFLT" |\n        "SIGSTOP" | "SIGSYS" | "SIGTERM" | "SIGTRAP" | "SIGTSTP" | "SIGTTIN" | "SIGTTOU" | "SIGUNUSED" | "SIGURG" |\n        "SIGUSR1" | "SIGUSR2" | "SIGVTALRM" | "SIGWINCH" | "SIGXCPU" | "SIGXFSZ" | "SIGBREAK" | "SIGLOST" | "SIGINFO";\n\n    type MultipleResolveType = \'resolve\' | \'reject\';\n\n    type BeforeExitListener = (code: number) => void;\n    type DisconnectListener = () => void;\n    type ExitListener = (code: number) => void;\n    type RejectionHandledListener = (promise: Promise<any>) => void;\n    type UncaughtExceptionListener = (error: Error) => void;\n    type UnhandledRejectionListener = (reason: {} | null | undefined, promise: Promise<any>) => void;\n    type WarningListener = (warning: Error) => void;\n    type MessageListener = (message: any, sendHandle: any) => void;\n    type SignalsListener = (signal: Signals) => void;\n    type NewListenerListener = (type: string | symbol, listener: (...args: any[]) => void) => void;\n    type RemoveListenerListener = (type: string | symbol, listener: (...args: any[]) => void) => void;\n    type MultipleResolveListener = (type: MultipleResolveType, promise: Promise<any>, value: any) => void;\n\n    interface Socket extends ReadWriteStream {\n        isTTY?: true;\n    }\n\n    interface ProcessEnv {\n        [key: string]: string | undefined;\n    }\n\n    interface HRTime {\n        (time?: [number, number]): [number, number];\n    }\n\n    interface ProcessReport {\n        /**\n         * Directory where the report is written.\n         * working directory of the Node.js process.\n         * @default \'\' indicating that reports are written to the current\n         */\n        directory: string;\n\n        /**\n         * Filename where the report is written.\n         * The default value is the empty string.\n         * @default \'\' the output filename will be comprised of a timestamp,\n         * PID, and sequence number.\n         */\n        filename: string;\n\n        /**\n         * Returns a JSON-formatted diagnostic report for the running process.\n         * The report\'s JavaScript stack trace is taken from err, if present.\n         */\n        getReport(err?: Error): string;\n\n        /**\n         * If true, a diagnostic report is generated on fatal errors,\n         * such as out of memory errors or failed C++ assertions.\n         * @default false\n         */\n        reportOnFatalError: boolean;\n\n        /**\n         * If true, a diagnostic report is generated when the process\n         * receives the signal specified by process.report.signal.\n         * @defaul false\n         */\n        reportOnSignal: boolean;\n\n        /**\n         * If true, a diagnostic report is generated on uncaught exception.\n         * @default false\n         */\n        reportOnUncaughtException: boolean;\n\n        /**\n         * The signal used to trigger the creation of a diagnostic report.\n         * @default \'SIGUSR2\'\n         */\n        signal: Signals;\n\n        /**\n         * Writes a diagnostic report to a file. If filename is not provided, the default filename\n         * includes the date, time, PID, and a sequence number.\n         * The report\'s JavaScript stack trace is taken from err, if present.\n         *\n         * @param fileName Name of the file where the report is written.\n         * This should be a relative path, that will be appended to the directory specified in\n         * `process.report.directory`, or the current working directory of the Node.js process,\n         * if unspecified.\n         * @param error A custom error used for reporting the JavaScript stack.\n         * @return Filename of the generated report.\n         */\n        writeReport(fileName?: string): string;\n        writeReport(error?: Error): string;\n        writeReport(fileName?: string, err?: Error): string;\n    }\n\n    interface ResourceUsage {\n        fsRead: number;\n        fsWrite: number;\n        involuntaryContextSwitches: number;\n        ipcReceived: number;\n        ipcSent: number;\n        majorPageFault: number;\n        maxRSS: number;\n        minorPageFault: number;\n        sharedMemorySize: number;\n        signalsCount: number;\n        swappedOut: number;\n        systemCPUTime: number;\n        unsharedDataSize: number;\n        unsharedStackSize: number;\n        userCPUTime: number;\n        voluntaryContextSwitches: number;\n    }\n\n    interface Process extends EventEmitter {\n        /**\n         * Can also be a tty.WriteStream, not typed due to limitation.s\n         */\n        stdout: WriteStream;\n        /**\n         * Can also be a tty.WriteStream, not typed due to limitation.s\n         */\n        stderr: WriteStream;\n        stdin: ReadStream;\n        openStdin(): Socket;\n        argv: string[];\n        argv0: string;\n        execArgv: string[];\n        execPath: string;\n        abort(): void;\n        chdir(directory: string): void;\n        cwd(): string;\n        debugPort: number;\n        emitWarning(warning: string | Error, name?: string, ctor?: Function): void;\n        env: ProcessEnv;\n        exit(code?: number): never;\n        exitCode?: number;\n        getgid(): number;\n        setgid(id: number | string): void;\n        getuid(): number;\n        setuid(id: number | string): void;\n        geteuid(): number;\n        seteuid(id: number | string): void;\n        getegid(): number;\n        setegid(id: number | string): void;\n        getgroups(): number[];\n        setgroups(groups: Array<string | number>): void;\n        setUncaughtExceptionCaptureCallback(cb: ((err: Error) => void) | null): void;\n        hasUncaughtExceptionCaptureCallback(): boolean;\n        version: string;\n        versions: ProcessVersions;\n        config: {\n            target_defaults: {\n                cflags: any[];\n                default_configuration: string;\n                defines: string[];\n                include_dirs: string[];\n                libraries: string[];\n            };\n            variables: {\n                clang: number;\n                host_arch: string;\n                node_install_npm: boolean;\n                node_install_waf: boolean;\n                node_prefix: string;\n                node_shared_openssl: boolean;\n                node_shared_v8: boolean;\n                node_shared_zlib: boolean;\n                node_use_dtrace: boolean;\n                node_use_etw: boolean;\n                node_use_openssl: boolean;\n                target_arch: string;\n                v8_no_strict_aliasing: number;\n                v8_use_snapshot: boolean;\n                visibility: string;\n            };\n        };\n        kill(pid: number, signal?: string | number): void;\n        pid: number;\n        ppid: number;\n        title: string;\n        arch: string;\n        platform: Platform;\n        mainModule?: NodeModule;\n        memoryUsage(): MemoryUsage;\n        cpuUsage(previousValue?: CpuUsage): CpuUsage;\n        nextTick(callback: Function, ...args: any[]): void;\n        release: ProcessRelease;\n        features: {\n            inspector: boolean;\n            debug: boolean;\n            uv: boolean;\n            ipv6: boolean;\n            tls_alpn: boolean;\n            tls_sni: boolean;\n            tls_ocsp: boolean;\n            tls: boolean;\n        };\n        /**\n         * Can only be set if not in worker thread.\n         */\n        umask(mask?: number): number;\n        uptime(): number;\n        hrtime: HRTime;\n        domain: Domain;\n\n        // Worker\n        send?(message: any, sendHandle?: any, options?: { swallowErrors?: boolean}, callback?: (error: Error | null) => void): boolean;\n        disconnect(): void;\n        connected: boolean;\n\n        /**\n         * The `process.allowedNodeEnvironmentFlags` property is a special,\n         * read-only `Set` of flags allowable within the [`NODE_OPTIONS`][]\n         * environment variable.\n         */\n        allowedNodeEnvironmentFlags: ReadonlySet<string>;\n\n        /**\n         * Only available with `--experimental-report`\n         */\n        report?: ProcessReport;\n\n        resourceUsage(): ResourceUsage;\n\n        /**\n         * EventEmitter\n         *   1. beforeExit\n         *   2. disconnect\n         *   3. exit\n         *   4. message\n         *   5. rejectionHandled\n         *   6. uncaughtException\n         *   7. unhandledRejection\n         *   8. warning\n         *   9. message\n         *  10. <All OS Signals>\n         *  11. newListener/removeListener inherited from EventEmitter\n         */\n        addListener(event: "beforeExit", listener: BeforeExitListener): this;\n        addListener(event: "disconnect", listener: DisconnectListener): this;\n        addListener(event: "exit", listener: ExitListener): this;\n        addListener(event: "rejectionHandled", listener: RejectionHandledListener): this;\n        addListener(event: "uncaughtException", listener: UncaughtExceptionListener): this;\n        addListener(event: "unhandledRejection", listener: UnhandledRejectionListener): this;\n        addListener(event: "warning", listener: WarningListener): this;\n        addListener(event: "message", listener: MessageListener): this;\n        addListener(event: Signals, listener: SignalsListener): this;\n        addListener(event: "newListener", listener: NewListenerListener): this;\n        addListener(event: "removeListener", listener: RemoveListenerListener): this;\n        addListener(event: "multipleResolves", listener: MultipleResolveListener): this;\n\n        emit(event: "beforeExit", code: number): boolean;\n        emit(event: "disconnect"): boolean;\n        emit(event: "exit", code: number): boolean;\n        emit(event: "rejectionHandled", promise: Promise<any>): boolean;\n        emit(event: "uncaughtException", error: Error): boolean;\n        emit(event: "unhandledRejection", reason: any, promise: Promise<any>): boolean;\n        emit(event: "warning", warning: Error): boolean;\n        emit(event: "message", message: any, sendHandle: any): this;\n        emit(event: Signals, signal: Signals): boolean;\n        emit(event: "newListener", eventName: string | symbol, listener: (...args: any[]) => void): this;\n        emit(event: "removeListener", eventName: string, listener: (...args: any[]) => void): this;\n        emit(event: "multipleResolves", listener: MultipleResolveListener): this;\n\n        on(event: "beforeExit", listener: BeforeExitListener): this;\n        on(event: "disconnect", listener: DisconnectListener): this;\n        on(event: "exit", listener: ExitListener): this;\n        on(event: "rejectionHandled", listener: RejectionHandledListener): this;\n        on(event: "uncaughtException", listener: UncaughtExceptionListener): this;\n        on(event: "unhandledRejection", listener: UnhandledRejectionListener): this;\n        on(event: "warning", listener: WarningListener): this;\n        on(event: "message", listener: MessageListener): this;\n        on(event: Signals, listener: SignalsListener): this;\n        on(event: "newListener", listener: NewListenerListener): this;\n        on(event: "removeListener", listener: RemoveListenerListener): this;\n        on(event: "multipleResolves", listener: MultipleResolveListener): this;\n\n        once(event: "beforeExit", listener: BeforeExitListener): this;\n        once(event: "disconnect", listener: DisconnectListener): this;\n        once(event: "exit", listener: ExitListener): this;\n        once(event: "rejectionHandled", listener: RejectionHandledListener): this;\n        once(event: "uncaughtException", listener: UncaughtExceptionListener): this;\n        once(event: "unhandledRejection", listener: UnhandledRejectionListener): this;\n        once(event: "warning", listener: WarningListener): this;\n        once(event: "message", listener: MessageListener): this;\n        once(event: Signals, listener: SignalsListener): this;\n        once(event: "newListener", listener: NewListenerListener): this;\n        once(event: "removeListener", listener: RemoveListenerListener): this;\n        once(event: "multipleResolves", listener: MultipleResolveListener): this;\n\n        prependListener(event: "beforeExit", listener: BeforeExitListener): this;\n        prependListener(event: "disconnect", listener: DisconnectListener): this;\n        prependListener(event: "exit", listener: ExitListener): this;\n        prependListener(event: "rejectionHandled", listener: RejectionHandledListener): this;\n        prependListener(event: "uncaughtException", listener: UncaughtExceptionListener): this;\n        prependListener(event: "unhandledRejection", listener: UnhandledRejectionListener): this;\n        prependListener(event: "warning", listener: WarningListener): this;\n        prependListener(event: "message", listener: MessageListener): this;\n        prependListener(event: Signals, listener: SignalsListener): this;\n        prependListener(event: "newListener", listener: NewListenerListener): this;\n        prependListener(event: "removeListener", listener: RemoveListenerListener): this;\n        prependListener(event: "multipleResolves", listener: MultipleResolveListener): this;\n\n        prependOnceListener(event: "beforeExit", listener: BeforeExitListener): this;\n        prependOnceListener(event: "disconnect", listener: DisconnectListener): this;\n        prependOnceListener(event: "exit", listener: ExitListener): this;\n        prependOnceListener(event: "rejectionHandled", listener: RejectionHandledListener): this;\n        prependOnceListener(event: "uncaughtException", listener: UncaughtExceptionListener): this;\n        prependOnceListener(event: "unhandledRejection", listener: UnhandledRejectionListener): this;\n        prependOnceListener(event: "warning", listener: WarningListener): this;\n        prependOnceListener(event: "message", listener: MessageListener): this;\n        prependOnceListener(event: Signals, listener: SignalsListener): this;\n        prependOnceListener(event: "newListener", listener: NewListenerListener): this;\n        prependOnceListener(event: "removeListener", listener: RemoveListenerListener): this;\n        prependOnceListener(event: "multipleResolves", listener: MultipleResolveListener): this;\n\n        listeners(event: "beforeExit"): BeforeExitListener[];\n        listeners(event: "disconnect"): DisconnectListener[];\n        listeners(event: "exit"): ExitListener[];\n        listeners(event: "rejectionHandled"): RejectionHandledListener[];\n        listeners(event: "uncaughtException"): UncaughtExceptionListener[];\n        listeners(event: "unhandledRejection"): UnhandledRejectionListener[];\n        listeners(event: "warning"): WarningListener[];\n        listeners(event: "message"): MessageListener[];\n        listeners(event: Signals): SignalsListener[];\n        listeners(event: "newListener"): NewListenerListener[];\n        listeners(event: "removeListener"): RemoveListenerListener[];\n        listeners(event: "multipleResolves"): MultipleResolveListener[];\n    }\n\n    interface Global {\n        Array: typeof Array;\n        ArrayBuffer: typeof ArrayBuffer;\n        Boolean: typeof Boolean;\n        Buffer: typeof Buffer;\n        DataView: typeof DataView;\n        Date: typeof Date;\n        Error: typeof Error;\n        EvalError: typeof EvalError;\n        Float32Array: typeof Float32Array;\n        Float64Array: typeof Float64Array;\n        Function: typeof Function;\n        GLOBAL: Global;\n        Infinity: typeof Infinity;\n        Int16Array: typeof Int16Array;\n        Int32Array: typeof Int32Array;\n        Int8Array: typeof Int8Array;\n        Intl: typeof Intl;\n        JSON: typeof JSON;\n        Map: MapConstructor;\n        Math: typeof Math;\n        NaN: typeof NaN;\n        Number: typeof Number;\n        Object: typeof Object;\n        Promise: Function;\n        RangeError: typeof RangeError;\n        ReferenceError: typeof ReferenceError;\n        RegExp: typeof RegExp;\n        Set: SetConstructor;\n        String: typeof String;\n        Symbol: Function;\n        SyntaxError: typeof SyntaxError;\n        TypeError: typeof TypeError;\n        URIError: typeof URIError;\n        Uint16Array: typeof Uint16Array;\n        Uint32Array: typeof Uint32Array;\n        Uint8Array: typeof Uint8Array;\n        Uint8ClampedArray: Function;\n        WeakMap: WeakMapConstructor;\n        WeakSet: WeakSetConstructor;\n        clearImmediate: (immediateId: Immediate) => void;\n        clearInterval: (intervalId: Timeout) => void;\n        clearTimeout: (timeoutId: Timeout) => void;\n        console: typeof console;\n        decodeURI: typeof decodeURI;\n        decodeURIComponent: typeof decodeURIComponent;\n        encodeURI: typeof encodeURI;\n        encodeURIComponent: typeof encodeURIComponent;\n        escape: (str: string) => string;\n        eval: typeof eval;\n        global: Global;\n        isFinite: typeof isFinite;\n        isNaN: typeof isNaN;\n        parseFloat: typeof parseFloat;\n        parseInt: typeof parseInt;\n        process: Process;\n        root: Global;\n        setImmediate: (callback: (...args: any[]) => void, ...args: any[]) => Immediate;\n        setInterval: (callback: (...args: any[]) => void, ms: number, ...args: any[]) => Timeout;\n        setTimeout: (callback: (...args: any[]) => void, ms: number, ...args: any[]) => Timeout;\n        queueMicrotask: typeof queueMicrotask;\n        undefined: typeof undefined;\n        unescape: (str: string) => string;\n        gc: () => void;\n        v8debug?: any;\n    }\n\n    // compatibility with older typings\n    interface Timer {\n        hasRef(): boolean;\n        ref(): this;\n        refresh(): this;\n        unref(): this;\n    }\n\n    class Immediate {\n        hasRef(): boolean;\n        ref(): this;\n        unref(): this;\n        _onImmediate: Function; // to distinguish it from the Timeout class\n    }\n\n    class Timeout implements Timer {\n        hasRef(): boolean;\n        ref(): this;\n        refresh(): this;\n        unref(): this;\n    }\n\n    class Module {\n        static runMain(): void;\n        static wrap(code: string): string;\n\n        /**\n         * @deprecated Deprecated since: v12.2.0. Please use createRequire() instead.\n         */\n        static createRequireFromPath(path: string): NodeRequireFunction;\n        static createRequire(path: string): NodeRequireFunction;\n        static builtinModules: string[];\n\n        static Module: typeof Module;\n\n        exports: any;\n        require: NodeRequireFunction;\n        id: string;\n        filename: string;\n        loaded: boolean;\n        parent: Module | null;\n        children: Module[];\n        paths: string[];\n\n        constructor(id: string, parent?: Module);\n    }\n\n    type TypedArray = Uint8Array | Uint8ClampedArray | Uint16Array | Uint32Array | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n    type ArrayBufferView = TypedArray | DataView;\n\n    // The value type here is a "poor man\'s `unknown`". When these types support TypeScript\n    // 3.0+, we can replace this with `unknown`.\n    type PoorMansUnknown = {} | null | undefined;\n}\n'},"./runtime-repl/_common/BufferedItemStore.ts":function(e,t,n){"use strict";n.r(t),n.d(t,"BufferedItemStore",(function(){return c})),n.d(t,"BufferedItemManager",(function(){return u}));var r=n("./node_modules/lodash/lodash.js"),a=n.n(r),i=n("../../node_modules/mobx/lib/mobx.module.js"),o=n("./runtime-repl/_common/promiseUtils.js"),s=function(e,t,n,r){var a,i=arguments.length,o=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(a=e[s])&&(o=(i<3?a(o):i>3?a(t,n,o):a(t,n))||o);return i>3&&o&&Object.defineProperty(t,n,o),o},l=function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function o(e){try{l(r.next(e))}catch(e){i(e)}}function s(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}l((r=r.apply(e,t||[])).next())}))};class c{constructor(e){this.isUpdating=!1,this.updateCallbacks=[],this.updateFailCallbacks=[],this.pendingUpdatePromise=Promise.resolve(),this.baseItem=e,this.itemReactionDisposer=Object(i.reaction)((()=>this.propertiesToWatch.map((e=>a.a.get(this.baseItem,e)))),(()=>{var e,t;const n=null===(t=null===(e=this.baseItem)||void 0===e?void 0:e.toJSON)||void 0===t?void 0:t.call(e,["folders","requests"]);n&&!this.isUpdating&&this.updateItem(n)}),{fireImmediately:!0})}get isPendingUpdate(){return Boolean(this.pendingUpdate)}get uid(){return this.baseItem.id}getItem(){return this.bufferedItem}onUpdate(e){return this.updateCallbacks.push(e),e(this.bufferedItem),()=>{this.updateCallbacks=this.updateCallbacks.filter((t=>t!==e))}}onUpdateFail(e){return this.updateFailCallbacks.push(e),()=>{this.updateFailCallbacks=this.updateFailCallbacks.filter((t=>t!==e))}}updateItem(e){this.bufferedItem=e,this.updateCallbacks.forEach((t=>{try{t(e)}catch(e){}}))}setPendingUpdate(e){this.pendingUpdate?a.a.assign(this.pendingUpdate,e):this.pendingUpdate=e}update(e){return l(this,void 0,void 0,(function*(){this.setPendingUpdate(e);const t=Object.assign(Object.assign({},this.bufferedItem),e);this.updateItem(t),yield this.processUpdate()}))}processUpdate(e=!0){return l(this,void 0,void 0,(function*(){if(this.isUpdating)return this.pendingUpdatePromise;if(!this.isPendingUpdate)return;this.isUpdating=!0;const t=this.pendingUpdate;this.pendingUpdate=void 0;const{promise:n,resolve:r,reject:a}=Object(o.createPromiseObject)();return e&&(this.pendingUpdatePromise=n),this.dispatchUpdate(t).finally((()=>{this.isUpdating=!1})).catch((e=>{if(!this.isPendingUpdate)throw this.updateFailCallbacks.forEach((n=>{var r;try{n(null!==(r=null==e?void 0:e.message)&&void 0!==r?r:"Error updating entity",t)}catch(e){}})),e;this.pendingUpdate=Object.assign(Object.assign({},t),this.pendingUpdate)})).then((()=>this.processUpdate())).then(r,a),n}))}unsubscribe(){var e;null===(e=this.itemReactionDisposer)||void 0===e||e.call(this)}}s([i.computed],c.prototype,"uid",null);class u{constructor(){this.bufferedItemMap=new Map}createBufferedItem(e){return this.bufferedItemMap.has(e.id)||this.bufferedItemMap.set(e.id,this.createItemStoreInstance(e)),this.bufferedItemMap.get(e.id)}unsubscribe(){}}},"./runtime-repl/_common/ConflictResolutionHelper.js":function(e,t,n){(function(t){e.exports={detectConflict:function(e={},n={},r,a){if(!t.isFunction(a))return pm.logger.warn("ConflictResolutionHelper~detectConflict: Callback to process conflict state is required");if(!r||t.isEmpty(e)||t.isEmpty(n))return a(!1);const i=t([]).concat(t.keys(e)).concat(t.keys(n)).uniq().value();let o;for(o of i)if(t.has(e,o)&&t.has(n,o)&&!t.isEqual(e[o],n[o]))return a(!0);return a(!1)},getUpdates:function(e={},n={}){const r={},a=t([]).concat(t.keys(e)).concat(t.keys(n)).uniq().value();return t.forEach(a,(a=>{t.isEqual(e[a],n[a])||(r[a]=n[a])})),r}}}).call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/_common/WorkbenchStatusConstants.js":function(e,t,n){"use strict";n.r(t),n.d(t,"READY",(function(){return r})),n.d(t,"LOADING",(function(){return a})),n.d(t,"ERROR",(function(){return i})),n.d(t,"DELETED",(function(){return o}));const r="ready",a="loading",i="error",o="deleted"},"./runtime-repl/_common/_api/type-definition-providers/pre-script-type-definitions-provider.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var r=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/postman-sandbox/types/sandbox/prerequest.d.ts"),a=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/postman-collection/types/index.d.ts"),i=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/chai/index.d.ts"),o=n("./runtime-repl/_common/_api/typings/lib.js"),s=n("./runtime-repl/_common/_api/typings/node.js");function l(){return[{id:"jsLib",content:o.default},{id:"node",content:s.default},{id:"postman-collection",content:a.default},{id:"chai",content:i.default},{id:"pre-script",content:r.default}]}},"./runtime-repl/_common/_api/type-definition-providers/tests-type-definitions-provider.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var r=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/postman-sandbox/types/sandbox/test.d.ts"),a=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/postman-collection/types/index.d.ts"),i=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/chai/index.d.ts"),o=n("./runtime-repl/_common/_api/typings/lib.js"),s=n("./runtime-repl/_common/_api/typings/node.js");function l(){return[{id:"jsLib",content:o.default},{id:"node",content:s.default},{id:"postman-collection",content:a.default},{id:"chai",content:i.default},{id:"tests-script",content:r.default}]}},"./runtime-repl/_common/_api/typings/lib.js":function(e,t,n){"use strict";n.r(t);var r=n("./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es5.d.ts"),a=n("./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.core.d.ts"),i=n("./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.collection.d.ts"),o=n("./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.iterable.d.ts"),s=n("./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.generator.d.ts"),l=n("./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.promise.d.ts"),c=n("./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.proxy.d.ts"),u=n("./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.reflect.d.ts"),d=n("./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.symbol.d.ts"),h=n("./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/javascript/lib.es2015.symbol.wellknown.d.ts");const p=r.default+a.default+i.default+o.default+s.default+l.default+c.default+u.default+d.default+h.default;t.default=p},"./runtime-repl/_common/_api/typings/node.js":function(e,t,n){"use strict";n.r(t);var r=n("./node_modules/raw-loader/dist/cjs.js!./runtime-repl/_common/_api/typings/node/globals.d.ts");n.d(t,"globalsTypeDef",(function(){return r.default}));var a=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/path.d.ts");n.d(t,"pathTypeDef",(function(){return a.default}));var i=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/assert.d.ts");n.d(t,"assertTypeDef",(function(){return i.default}));var o=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/buffer.d.ts");n.d(t,"bufferTypeDef",(function(){return o.default}));var s=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/util.d.ts");n.d(t,"utilTypeDef",(function(){return s.default}));var l=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/url.d.ts");n.d(t,"urlTypeDef",(function(){return l.default}));var c=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/punycode.d.ts");n.d(t,"punycodeTypeDef",(function(){return c.default}));var u=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/querystring.d.ts");n.d(t,"querystringTypeDef",(function(){return u.default}));var d=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/string_decoder.d.ts");n.d(t,"stringDecoderTypeDef",(function(){return d.default}));var h=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/stream.d.ts");n.d(t,"streamTypeDef",(function(){return h.default}));var p=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/timers.d.ts");n.d(t,"timersTypeDef",(function(){return p.default}));var m=n("./node_modules/raw-loader/dist/cjs.js!./node_modules/@types/node/events.d.ts");n.d(t,"eventsTypeDef",(function(){return m.default}));const f=r.default+a.default+i.default+o.default+s.default+l.default+c.default+u.default+d.default+h.default+p.default+m.default;t.default=f},"./runtime-repl/_common/components/ForkRecommendationTooltip.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return c}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("./node_modules/prop-types/index.js"),o=n.n(i),s=n("./js/components/base/Buttons.js"),l=n("./runtime-repl/_common/components/molecule.js");function c(e){return a.a.createElement(l.Tooltip,{className:"fork-recommendation-tooltip",target:e.targetRef,show:e.isOpen,placement:"bottom",onMouseEnter:e.onMouseEnter,onMouseLeave:e.onMouseLeave,immediate:!0},e.title&&a.a.createElement("div",{className:"fork-recommendation-tooltip__title"},e.title),e.primaryMessage&&a.a.createElement("div",{className:"fork-recommendation-tooltip__primary-message"},e.primaryMessage),e.secondaryMessage&&a.a.createElement("div",{className:"fork-recommendation-tooltip__secondary-message"},e.secondaryMessage),a.a.createElement("div",{className:"fork-recommendation-tooltip__actions"},e.primaryAction&&a.a.createElement(s.Button,{type:"primary",onClick:e.onPrimaryAction},e.primaryAction),e.secondaryAction&&a.a.createElement(s.Button,{type:"tertiary",onClick:e.onSecondaryAction},e.secondaryAction)))}c.defaultProps={targetRef:null,title:null,secondaryMessage:null,primaryAction:null,secondaryAction:null,onPrimaryAction:e.noop,onSecondaryAction:e.noop},c.propTypes={isOpen:o.a.bool.isRequired,targetRef:o.a.object,onMouseEnter:o.a.func.isRequired,onMouseLeave:o.a.func.isRequired,title:o.a.string,primaryMessage:o.a.string.isRequired,secondaryMessage:o.a.string,primaryAction:o.a.string,secondaryAction:o.a.string,onPrimaryAction:o.a.func,onSecondaryAction:o.a.func}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/_common/components/configuration-list-item/ConfigurationListItem.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return S}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("./node_modules/react-contenteditable/lib/react-contenteditable.js"),s=n.n(o),l=n("../../node_modules/react-dom/index.js"),c=n("./node_modules/classnames/index.js"),u=n.n(c),d=n("./node_modules/prop-types/index.js"),h=n.n(d),p=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),m=n("../../node_modules/@postman/aether/esmLib/index.js"),f=n("./js/components/base/ToggleSwitch.js"),g=n("./js/components/base/Buttons.js"),b=n("./js/components/base/Inputs.js"),y=n("./js/components/base/Dropdowns.js"),v=n("./js/components/base/Tooltips.js"),T=n("./js/components/base/EditableTag.js"),A=n("./js/utils/configurationsUtil.js");const E=[13,32,188,186];let S=Object(p.observer)(r=class extends a.Component{constructor(e){super(e),this.state={isTooltipVisible:!1,inputValue:void 0,activeInput:"",action:"none"},this.handleFieldChange=this.handleFieldChange.bind(this),this.showTooltip=this.showTooltip.bind(this),this.hideTooltip=this.hideTooltip.bind(this),this.handleNavigationToParent=this.handleNavigationToParent.bind(this),this.handleRestoreDefault=this.handleRestoreDefault.bind(this),this.handleActiveInputChange=this.handleActiveInputChange.bind(this),this.handleMultiSelectFieldChange=this.handleMultiSelectFieldChange.bind(this),this.handleKeyDown=this.handleKeyDown.bind(this),this.handleOnPaste=this.handleOnPaste.bind(this),this.handleOnBlur=this.handleOnBlur.bind(this),this.sanitizeMultipleInputValue=this.sanitizeMultipleInputValue.bind(this),this.focusContentEditable=this.focusContentEditable.bind(this)}componentDidMount(){this.setInputValueAndAction(this.props)}UNSAFE_componentWillReceiveProps(t){t.value===this.props.value&&e.get(t.inheritedState,"value")===e.get(this.props.inheritedState,"value")&&t.defaultValue===this.props.defaultValue||this.setInputValueAndAction(t)}setInputValueAndAction(t){const n={inputValue:this.getInputValue(t.value,e.get(t.inheritedState,"value"),t.defaultValue),isTooltipVisible:!1};e.isUndefined(t.value)?t.inheritedState?e.set(n,"action","default"):e.set(n,"action","none"):e.set(n,"action","restore"),this.setState(n)}getInputValue(t,n,r){return e.isUndefined(t)?e.isUndefined(n)?r:n:t}getClasses(){return u()({"configuration-list-item__container":!0,"is-disabled":this.props.disabled})}showTooltip(){this.setState({isTooltipVisible:!0})}hideTooltip(){this.setState({isTooltipVisible:!1})}handleFieldChange(e){e=this.sanitizeFieldValue(e,this.props.inputFieldType,this.props.inputType),this.setState({inputValue:e,action:"restore"}),this.props.handleFieldChange&&this.props.handleFieldChange(e)}sanitizeFieldValue(t,n,r){return"input"===n&&"number"===r?e.isNaN(Number(t))?this.state.inputValue:Number(t):"input"===n&&"text"===r?String(t):"invertedToggle"===n?!t:t}handleNavigationToParent(){Object(A.navigateToParent)(e.get(this.props.inheritedState,"parent"))}handleRestoreDefault(){this.props.inheritedState?this.setState({action:"default",activeInput:""}):this.setState({action:"none",activeInput:""}),this.props.handleRestoreDefault&&this.props.handleRestoreDefault()}getTooltip(e,t){return i.a.createElement(v.Tooltip,{placement:"left",target:e,show:this.state.isTooltipVisible},i.a.createElement(v.TooltipBody,null,t))}renderTagContent(e){return i.a.createElement("div",{title:e,className:"editable-tag__content"},e)}handleTagRemove(t,n){n.stopPropagation();const r=e.filter(this.state.inputValue,(e=>e!==t));this.handleFieldChange(r)}handleActiveInputChange(e){const{value:t}=e.target;this.setState({activeInput:t})}handleMultiSelectFieldChange(e){this.state.inputValue.includes(e)||this.handleFieldChange([...this.state.inputValue,e])}handleKeyDown(t){const n=t&&t.keyCode;if(e.includes(E,n)){if(t.preventDefault(),e.isEmpty(this.state.activeInput))return;this.handleFieldChange(e.concat(this.state.inputValue,this.sanitizeMultipleInputValue(this.state.activeInput))),this.setState({activeInput:""})}}handleOnPaste(t){t.preventDefault();const n=t.clipboardData.getData("Text");this.handleFieldChange(e.concat(this.state.inputValue,this.sanitizeMultipleInputValue(n))),this.setState({activeInput:""})}handleOnBlur(){e.isEmpty(this.state.activeInput)||(this.handleFieldChange(e.concat(this.state.inputValue,this.sanitizeMultipleInputValue(this.state.activeInput))),this.setState({activeInput:""}))}sanitizeMultipleInputValue(t){return e.chain(t).split(/\s|,|:/g).map((t=>e.trim(t))).filter((t=>!(e.includes(this.state.inputValue,t)||e.isEmpty(t)))).value()}focusContentEditable(){const e=Object(l.findDOMNode)(this.refs.contentEditable);e&&e.focus()}shouldRenderPlaceHolder(){return!(!e.isEmpty(this.state.inputValue)||!e.isEmpty(this.state.activeInput))}renderAction(){if("default"===this.state.action){const t=e.get(this.props.inheritedState,"parent");return i.a.createElement("div",{className:"configuration-list-item__action"},i.a.createElement("div",{className:"configuration-list-item__action__normal"},i.a.createElement("span",{onMouseEnter:this.showTooltip,onMouseLeave:this.hideTooltip,ref:"default"},i.a.createElement(m.Text,{type:"body-medium",color:"content-color-tertiary"},"Default: ")),i.a.createElement("span",{className:"configuration-list-item__action__normal-text",title:e.get(t,"name"),onClick:this.handleNavigationToParent},i.a.createElement(m.Text,{type:"body-medium",color:"content-color-tertiary"},e.get(t,"name")))),this.getTooltip(this.refs.default,"This setting is using the value set in the parent folder or collection. Changing this setting will override it for this request."))}if("restore"===this.state.action&&this.props.handleRestoreDefault)return i.a.createElement("div",{className:"configuration-list-item__action"},i.a.createElement("div",{onMouseEnter:this.showTooltip,onMouseLeave:this.hideTooltip,ref:"restoreDefault",className:"configuration-list-item__action__override"},i.a.createElement(g.Button,{type:"text",onClick:this.handleRestoreDefault,className:"configuration-list-item__action__override-btn",disabled:this.props.disabled},"Restore default")),this.getTooltip(this.refs.restoreDefault,"Restore this setting to it’s default value used in the parent collection/folder or app."))}renderInput(){if("toggle"===this.props.inputFieldType)return i.a.createElement(f.default,{isActive:Boolean(this.state.inputValue),onClick:this.handleFieldChange,disabled:this.props.disabled});if("invertedToggle"===this.props.inputFieldType)return i.a.createElement(f.default,{isActive:!this.state.inputValue,onClick:this.handleFieldChange,disabled:this.props.disabled});if("input"===this.props.inputFieldType){const t="number"===this.props.inputType?"text":this.props.inputType,n=e.isUndefined(this.state.inputValue)?"":this.state.inputValue;return i.a.createElement(b.Input,{inputStyle:"box",type:t,value:n,className:"configuration-list-item__input--input-box",onChange:this.handleFieldChange,disabled:this.props.disabled})}if("dropdown"===this.props.inputFieldType){const t=this.state.inputValue;return i.a.createElement(y.Dropdown,{onSelect:this.handleFieldChange},i.a.createElement(y.DropdownButton,{size:"small",type:"secondary"},i.a.createElement(g.Button,{className:"configuration-list-item__dropdown-btn",disabled:this.props.disabled},i.a.createElement("span",null,this.props.menuLabels&&this.props.menuLabels[e.indexOf(this.props.menuOptions,t)]||t))),i.a.createElement(y.DropdownMenu,{fluid:!0},e.map(this.props.menuOptions,((e,t)=>{const n=this.props.menuLabels&&this.props.menuLabels[t]||e;return i.a.createElement(y.MenuItem,{refKey:e,key:e,"align-center":!0,disabled:this.props.disabled},i.a.createElement("span",null,n))}))))}return"multiSelectDropdown"===this.props.inputFieldType?i.a.createElement(y.Dropdown,{onSelect:this.handleMultiSelectFieldChange,className:"configuration-list-item__input--multi-select"},i.a.createElement(y.DropdownButton,{type:"custom",dropdownStyle:"nocaret"},i.a.createElement(g.Button,{className:"configuration-list-item__selected-list"},e.map(this.state.inputValue,((t,n)=>{const r=this.props.menuLabels&&this.props.menuLabels[e.indexOf(this.props.menuOptions,t)]||t;return i.a.createElement(T.default,{content:this.renderTagContent(r),key:n,name:"tag",value:t,type:"regular",onClose:this.handleTagRemove.bind(this,t)})})))),i.a.createElement(y.DropdownMenu,{fluid:!0},e.map(this.props.menuOptions,((t,n)=>{const r=this.props.menuLabels&&this.props.menuLabels[n]||t;return i.a.createElement(y.MenuItem,{key:n,refKey:t,disabled:e.includes(this.state.inputValue,t)},i.a.createElement("span",null,r))})))):"multipleInput"===this.props.inputFieldType?i.a.createElement("div",{className:"configuration-list-item__input--multi-input",onClick:this.focusContentEditable},this.shouldRenderPlaceHolder()&&i.a.createElement("div",{className:"configuration-list-item__input--multi-input--placeholder"},"Enter cipher suites"),e.map(this.state.inputValue,((e,t)=>i.a.createElement(T.default,{content:this.renderTagContent(e),key:t,name:"tag",value:e,type:"regular",onClose:this.handleTagRemove.bind(this,e)}))),i.a.createElement(s.a,{className:"configuration-list-item__input-field",ref:"contentEditable",html:this.state.activeInput||"",onChange:this.handleActiveInputChange,onKeyDown:this.handleKeyDown,onPaste:this.handleOnPaste,onBlur:this.handleOnBlur})):void 0}render(){return i.a.createElement("div",{className:this.getClasses()},i.a.createElement("div",{className:"configuration-list-item__meta-text"},i.a.createElement("div",{className:"configuration-list-item__title"},i.a.createElement(m.Label,{type:"primary",color:"content-color-primary",text:this.props.title})),i.a.createElement("div",{className:"configuration-list-item__description"},i.a.createElement(m.Text,{type:"body-medium",color:"content-color-secondary"},this.props.description))),i.a.createElement("div",{className:"configuration-list-item__options"},i.a.createElement("div",{className:"configuration-list-item__input"},this.renderInput()),this.renderAction()))}})||r;S.defaultProps={inputFieldType:"toggle"},S.propTypes={title:h.a.string.isRequired,description:h.a.string.isRequired,defaultValue:h.a.any.isRequired,inheritedState:h.a.object,inputFieldType:h.a.oneOf(["toggle","invertedToggle","input","dropdown","multiSelectDropdown","multipleInput"]),inputType:h.a.string,handleFieldChange:h.a.func,handleRestoreDefault:h.a.func,menuLabels:h.a.array,menuOptions:h.a.array}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/_common/usage-metrics/UsageController.js":function(e,t,n){"use strict";n.r(t),function(e){var r=n("./runtime-repl/_common/datastores/controllers/BaseStorageController.js");function a(e,t){return`${e}/${t}`}t.default=e.defaults({type:"usage-metrics",dexieTable:"collection_usage",getUsage(e){if(!e||!e.id||!e.model)throw pm.logger.error("UsageController~getUsage: Invalid Criteria Provided"),new Error("UsageController: Invalid Entity Provided");const t=a(e.model,e.id);return this.get({id:t})},async trackOpens(e){if(!e||!e.id||!e.model)throw pm.logger.error("UsageController~trackOpens: Invalid Entity Provided"),new Error("UsageController: Invalid Entity Provided");const t=a(e.model,e.id),n=await this.get({id:t}),r=Date.now();if(!n)return void this.create({id:t,modelId:e.id,model:e.model,openCount:1,size:e.size,lastInteraction:r});let i,{openCount:o}=n;o?o++:o=1,i=e.size?e.size:n.size,this.update({id:t,modelId:e.id,model:e.model,openCount:o,size:i,lastInteraction:r})},async trackActivations(e){if(!e||!e.id||!e.model)throw pm.logger.error("UsageController~trackActivations: Invalid Entity Provided"),new Error("UsageController: Invalid Entity Provided");const t=a(e.model,e.id),n=await this.get({id:t}),r=Date.now();if(!n)return void this.create({id:t,modelId:e.id,model:e.model,activationCount:1,lastInteraction:r});let{activationCount:i}=n;i?i++:i=1,this.update({id:t,modelId:e.id,model:e.model,activationCount:i,lastInteraction:r})},async trackChildrenUsage(e){if(!e||!e.id||!e.model)throw pm.logger.error("UsageController~trackActivations: Invalid Entity Provided"),new Error("UsageController: Invalid Entity Provided");const t=a(e.model,e.id),n=await this.get({id:t}),r=Date.now();if(!n)return void this.create({id:t,modelId:e.id,model:e.model,childrenUsageCount:1,lastInteraction:r});let{childrenUsageCount:i}=n;i?i++:i=1,this.update({id:t,modelId:e.id,model:e.model,childrenUsageCount:i,lastInteraction:r})},async cleanTracking(e){const t=Date.now()-1296e6,n=await this.findInRange("lastInteraction",0,t),r={id:[]};n.forEach((e=>{r.id.push(e.id)})),pm.logger.info("UsageController~cleanTracking: Deleting expired tracking info",r),this.delete(r)}},r.default)}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/auth/AuthAWSSignature.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return m}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/react-dom/index.js"),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("./js/components/base/InfoButton.js"),c=n("./js/components/base/AutoSuggest/AutoSuggestInput.js"),u=n("./runtime-repl/auth/authUtil.js"),d=n("./js/stores/get-store.js"),h=n("./runtime-repl/auth/AuthAdvancedToggle.js"),p=n("./runtime-repl/auth/AuthAdvancedDescription.js");class m extends r.Component{constructor(e){super(e),this.actionMenuStore=Object(d.getStore)("ActionMenuStore")}getValue(e){return Object(u.getAuthValue)(this.props.awsv4,e)}handleFieldChange(e,t){this.props.onFieldChange&&this.props.onFieldChange(e,t)}handleSelectionChange(e,t,n){const r=e&&Object(i.findDOMNode)(this.refs[e]);if(!t||!r)return this.actionMenuStore.clear();this.actionMenuStore.setActionMenuState(!0,r,t,n,"autoSuggest",this.handleFieldChange.bind(this,e))}render(){const{disableEdit:e}=this.props;return a.a.createElement("div",{className:"auth-aws-signature-auth-container"},a.a.createElement("div",{className:"auth-input-wrapper"},a.a.createElement("div",{className:"auth-input-group auth-input--accessKey"},a.a.createElement("div",{className:"auth-label"}," AccessKey "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(c.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Access Key",value:this.getValue("accessKey"),onChange:this.handleFieldChange.bind(this,"accessKey"),readOnly:e,ref:"accessKey",onSelectionChange:this.handleSelectionChange.bind(this,"accessKey")}))),a.a.createElement("div",{className:"auth-input-group auth-input--secretKey"},a.a.createElement("div",{className:"auth-label"}," SecretKey "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(c.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Secret Key",value:this.getValue("secretKey"),onChange:this.handleFieldChange.bind(this,"secretKey"),readOnly:e,ref:"secretKey",onSelectionChange:this.handleSelectionChange.bind(this,"secretKey")}))),a.a.createElement("div",{className:"auth-form-group"},a.a.createElement(h.default,{isOpen:this.props.showAuthAdvancedFields,onToggleAdvancedFields:this.props.onToggleAdvancedFields})),this.props.showAuthAdvancedFields&&a.a.createElement("div",null,a.a.createElement(p.default,null),a.a.createElement("div",{className:"auth-input-group auth-input--region"},a.a.createElement("div",{className:"auth-label"},"AWS Region",a.a.createElement(l.default,{tooltip:"The region that is receiving the request (default value: us-east-1)"})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(c.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"e.g. us-east-1",value:this.getValue("region"),onChange:this.handleFieldChange.bind(this,"region"),readOnly:e,ref:"region",onSelectionChange:this.handleSelectionChange.bind(this,"region")}))),a.a.createElement("div",{className:"auth-input-group auth-input--service"},a.a.createElement("div",{className:"auth-label"},"Service Name",a.a.createElement(l.default,{tooltip:"The service that is receiving the request."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(c.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"e.g. s3",value:this.getValue("service"),onChange:this.handleFieldChange.bind(this,"service"),readOnly:e,ref:"service",onSelectionChange:this.handleSelectionChange.bind(this,"service")}))),a.a.createElement("div",{className:"auth-input-group auth-input--sessionToken"},a.a.createElement("div",{className:"auth-label"},"Session Token",a.a.createElement(l.default,{tooltip:"Only required when using temporary security credentials."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(c.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Session Token",value:this.getValue("sessionToken"),onChange:this.handleFieldChange.bind(this,"sessionToken"),readOnly:e,ref:"sessionToken",onSelectionChange:this.handleSelectionChange.bind(this,"sessionToken")}))))))}}m.propTypes={awsv4:s.a.array.isRequired,onFieldChange:s.a.func.isRequired,onToggleAdvancedFields:s.a.func.isRequired,showAuthAdvancedFields:s.a.bool.isRequired}},"./runtime-repl/auth/AuthAdvancedDescription.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return o}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/@postman/aether/esmLib/index.js");function o(){return a.a.createElement("div",{className:"auth-advanced-description"},a.a.createElement(i.Text,{type:"body-medium",color:"content-color-secondary"},"These are advanced configuration options. They are optional. Postman will auto generate values for some fields if left blank."))}},"./runtime-repl/auth/AuthAdvancedToggle.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return u}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("./node_modules/classnames/index.js"),o=n.n(i),s=n("../../node_modules/@postman/aether/esmLib/index.js"),l=n("./node_modules/prop-types/index.js"),c=n.n(l);class u extends r.Component{constructor(e){super(e),this.getClasses=this.getClasses.bind(this)}getClasses(){return o()({"auth-advanced-toggle":!0,"is-open":this.props.isOpen})}render(){return a.a.createElement("div",{className:"auth-advanced-wrapper"},this.props.isOpen?a.a.createElement(s.Icon,{name:"icon-direction-down",color:"content-color-primary",className:"auth-advanced-toggle is-open",onClick:this.props.onToggleAdvancedFields}):a.a.createElement(s.Icon,{name:"icon-direction-right",color:"content-color-primary",className:"auth-advanced-toggle",onClick:this.props.onToggleAdvancedFields}),a.a.createElement("div",{className:"auth-advanced-label",onClick:this.props.onToggleAdvancedFields},a.a.createElement(s.Label,{type:"primary",text:this.props.title||"ADVANCED"})))}}u.defaultProps={title:""},u.propTypes={isOpen:c.a.bool.isRequired,onToggleAdvancedFields:c.a.func.isRequired,title:c.a.string}},"./runtime-repl/auth/AuthAkamaiEdgeGridEditor.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return m}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/react-dom/index.js"),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("./runtime-repl/auth/authUtil.js"),c=n("./js/stores/get-store.js"),u=n("./js/components/base/InfoButton.js"),d=n("./runtime-repl/_common/components/molecule.js"),h=n("./runtime-repl/auth/AuthAdvancedToggle.js"),p=n("./runtime-repl/auth/AuthAdvancedDescription.js");class m extends r.Component{constructor(){super(),this.actionMenuStore=Object(c.getStore)("ActionMenuStore")}getValue(e,t){return Object(l.getAuthValue)(this.props.edgegrid,e,t)}handleFieldChange(e,t){this.props.onFieldChange&&this.props.onFieldChange(e,t)}handleSelectionChange(e,t,n){const r=e&&Object(i.findDOMNode)(this.refs[e]);if(!t||!r)return this.actionMenuStore.clear();this.actionMenuStore.setActionMenuState(!0,r,t,n,"autoSuggest",this.handleFieldChange.bind(this,e))}render(){const{disableEdit:e}=this.props,t=a.a.createElement("span",null,"UTC time in"," ",a.a.createElement("pre",{className:"auth-akamai-edgegrid--timestamp-tooltip"},"yyyyMMddTHH:mm:ss+0000")," ","format, as specified in the API Client Authentication section of the Akamai Developer Portal.");return a.a.createElement("div",{className:"auth-akamai-edgegrid-auth-container"},a.a.createElement("div",{className:"auth-input-wrapper"},a.a.createElement("div",{className:"auth-input-group auth-input--accessToken"},a.a.createElement("div",{className:"auth-label"},"Access Token"),a.a.createElement("div",{className:"auth-input"},a.a.createElement(d.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Access Token",value:this.getValue("accessToken"),onChange:this.handleFieldChange.bind(this,"accessToken"),readOnly:e,ref:"accessToken",onSelectionChange:this.handleSelectionChange.bind(this,"accessToken")}))),a.a.createElement("div",{className:"auth-input-group auth-input--clientToken"},a.a.createElement("div",{className:"auth-label"},"Client Token"),a.a.createElement("div",{className:"auth-input"},a.a.createElement(d.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Client Token",value:this.getValue("clientToken"),onChange:this.handleFieldChange.bind(this,"clientToken"),readOnly:e,ref:"clientToken",onSelectionChange:this.handleSelectionChange.bind(this,"clientToken")}))),a.a.createElement("div",{className:"auth-input-group auth-input--clientSecret"},a.a.createElement("div",{className:"auth-label"},"Client Secret"),a.a.createElement("div",{className:"auth-input"},a.a.createElement(d.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Client Secret",value:this.getValue("clientSecret"),onChange:this.handleFieldChange.bind(this,"clientSecret"),readOnly:e,ref:"clientSecret",onSelectionChange:this.handleSelectionChange.bind(this,"clientSecret")}))),a.a.createElement("div",{className:"auth-form-group"},a.a.createElement(h.default,{isOpen:this.props.showAuthAdvancedFields,onToggleAdvancedFields:this.props.onToggleAdvancedFields})),this.props.showAuthAdvancedFields&&a.a.createElement("div",null,a.a.createElement(p.default,null),a.a.createElement("div",{className:"auth-input-group auth-input--nonce"},a.a.createElement("div",{className:"auth-label"},"Nonce",a.a.createElement(u.default,{tooltip:"A random string generated by the client."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(d.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Nonce",value:this.getValue("nonce"),onChange:this.handleFieldChange.bind(this,"nonce"),readOnly:e,ref:"nonce",onSelectionChange:this.handleSelectionChange.bind(this,"nonce")}))),a.a.createElement("div",{className:"auth-input-group auth-input--timestamp"},a.a.createElement("div",{className:"auth-label"},"Timestamp",a.a.createElement(u.default,{tooltip:t})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(d.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Timestamp",value:this.getValue("timestamp"),onChange:this.handleFieldChange.bind(this,"timestamp"),readOnly:e,ref:"timestamp",onSelectionChange:this.handleSelectionChange.bind(this,"timestamp")}))),a.a.createElement("div",{className:"auth-input-group auth-input--baseURL"},a.a.createElement("div",{className:"auth-label"},"Base URL",a.a.createElement(u.default,{tooltip:"The base URL, without the protocol."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(d.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Base URL",value:this.getValue("baseURL"),onChange:this.handleFieldChange.bind(this,"baseURL"),readOnly:e,ref:"baseURL",onSelectionChange:this.handleSelectionChange.bind(this,"baseURL")}))),a.a.createElement("div",{className:"auth-input-group auth-input--headersToSign"},a.a.createElement("div",{className:"auth-label"},"Headers to sign",a.a.createElement(u.default,{tooltip:"Comma-separated list of headers to be signed."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(d.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Headers to sign",value:this.getValue("headersToSign"),onChange:this.handleFieldChange.bind(this,"headersToSign"),readOnly:e,ref:"headersToSign",onSelectionChange:this.handleSelectionChange.bind(this,"headersToSign")}))))))}}m.propTypes={edgegrid:s.a.array.isRequired,onFieldChange:s.a.func.isRequired,onToggleAdvancedFields:s.a.func.isRequired,showAuthAdvancedFields:s.a.bool.isRequired}},"./runtime-repl/auth/AuthApiKeyEditor.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return f}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/react-dom/index.js"),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("./js/components/base/AutoSuggest/AutoSuggestInput.js"),c=n("./js/components/base/Buttons.js"),u=n("./js/components/base/Dropdowns.js"),d=n("./runtime-repl/auth/authUtil.js"),h=n("./runtime-repl/request-http/RequestApiKeyAuthConstants.js"),p=n("./js/stores/get-store.js");const m={[h.IN.HEADER]:"Header",[h.IN.QUERY]:"Query Params"};class f extends r.Component{constructor(e){super(e),this.actionMenuStore=Object(p.getStore)("ActionMenuStore")}getValue(e,t){return Object(d.getAuthValue)(this.props.apiKeyAuth,e,t)}handleFieldChange(e,t){this.props.onFieldChange&&this.props.onFieldChange(e,t)}handleSelectionChange(e,t,n){const r=e&&Object(i.findDOMNode)(this.refs[e]);if(!t||!r)return this.actionMenuStore.clear();this.actionMenuStore.setActionMenuState(!0,r,t,n,"autoSuggest",this.handleFieldChange.bind(this,e))}render(){const{disableEdit:e}=this.props;return a.a.createElement("div",{className:"auth-apikey-auth-container"},a.a.createElement("div",{className:"auth-input-wrapper"},a.a.createElement("div",{className:"auth-input-group auth-input--username"},a.a.createElement("div",{className:"auth-label"}," Key "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(l.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Key",value:this.getValue("key"),onChange:this.handleFieldChange.bind(this,"key"),readOnly:e,ref:"key",onSelectionChange:this.handleSelectionChange.bind(this,"key")}))),a.a.createElement("div",{className:"auth-input-group auth-input--password"},a.a.createElement("div",{className:"auth-label"}," Value "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(l.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Value",value:this.getValue("value"),onChange:this.handleFieldChange.bind(this,"value"),readOnly:e,ref:"value",onSelectionChange:this.handleSelectionChange.bind(this,"value")}))),!this.props.hideAddTo&&a.a.createElement("div",{className:"auth-input-group auth-input--addto"},a.a.createElement("div",{className:"auth-label"}," Add to "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(u.Dropdown,{onSelect:this.handleFieldChange.bind(this,"in")},a.a.createElement(u.DropdownButton,{size:"small",type:"secondary"},a.a.createElement(c.Button,null,a.a.createElement("span",null,m[this.getValue("in",h.IN.HEADER)]))),a.a.createElement(u.DropdownMenu,{fluid:!0},a.a.createElement(u.MenuItem,{refKey:h.IN.HEADER,disabled:e},a.a.createElement("span",null,m[h.IN.HEADER])),a.a.createElement(u.MenuItem,{refKey:h.IN.QUERY,disabled:e},a.a.createElement("span",null,m[h.IN.QUERY]))))))))}}f.propTypes={apiKeyAuth:s.a.array.isRequired,onFieldChange:s.a.func.isRequired}},"./runtime-repl/auth/AuthBasicEditor.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return h}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/react-dom/index.js"),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("./js/components/base/Inputs.js"),c=n("./js/components/base/AutoSuggest/AutoSuggestInput.js"),u=n("./js/stores/get-store.js"),d=n("./runtime-repl/auth/authUtil.js");class h extends r.Component{constructor(e){super(e),this.actionMenuStore=Object(u.getStore)("ActionMenuStore")}getValue(e){return Object(d.getAuthValue)(this.props.basicAuth,e)}handleSelectionChange(e,t,n){const r=e&&Object(i.findDOMNode)(this.refs[e]);if(!t||!r)return this.actionMenuStore.clear();this.actionMenuStore.setActionMenuState(!0,r,t,n,"autoSuggest",this.handleFieldChange.bind(this,e))}handleFieldChange(e,t){this.props.onFieldChange&&this.props.onFieldChange(e,t)}render(){const{disableEdit:e}=this.props;return a.a.createElement("div",{className:"auth-basic-auth-container"},a.a.createElement("div",{className:"auth-input-wrapper"},a.a.createElement("div",{className:"auth-input-group auth-input--username"},a.a.createElement("div",{className:"auth-label"}," Username "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(c.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Username",value:this.getValue("username"),onChange:this.handleFieldChange.bind(this,"username"),readOnly:e,ref:"username",onSelectionChange:this.handleSelectionChange.bind(this,"username")}))),a.a.createElement("div",{className:"auth-input-group auth-input--password"},a.a.createElement("div",{className:"auth-label"}," Password "),a.a.createElement("div",{className:"auth-input"},this.props.showPassword?a.a.createElement(c.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Password",value:this.getValue("password"),onChange:this.handleFieldChange.bind(this,"password"),readOnly:e,ref:"password",onSelectionChange:this.handleSelectionChange.bind(this,"password")}):a.a.createElement(l.Input,{inputStyle:"box",placeholder:"Password",type:"password",value:this.getValue("password"),onChange:this.handleFieldChange.bind(this,"password"),readOnly:e}))),a.a.createElement("div",{className:"auth-input-group auth-input--show-password"},a.a.createElement("div",{className:"auth-label"}),a.a.createElement("div",{className:"auth-input"},a.a.createElement(l.Checkbox,{checked:this.props.showPassword,onChange:this.props.onShowPasswordToggle}),a.a.createElement("span",{onClick:this.props.onShowPasswordToggle,className:"auth-input-label"},"Show Password")))))}}h.propTypes={basicAuth:s.a.array.isRequired,showPassword:s.a.bool.isRequired,onFieldChange:s.a.func.isRequired,onShowPasswordToggle:s.a.func.isRequired}},"./runtime-repl/auth/AuthBearerEditor.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return d}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/react-dom/index.js"),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("./js/components/base/AutoSuggest/AutoSuggestInput.js"),c=n("./runtime-repl/auth/authUtil.js"),u=n("./js/stores/get-store.js");class d extends r.Component{constructor(e){super(e),this.actionMenuStore=Object(u.getStore)("ActionMenuStore")}getValue(e){return Object(c.getAuthValue)(this.props.bearerAuth,e)}handleSelectionChange(e,t,n){const r=e&&Object(i.findDOMNode)(this.refs[e]);if(!t||!r)return this.actionMenuStore.clear();this.actionMenuStore.setActionMenuState(!0,r,t,n,"autoSuggest",this.handleFieldChange.bind(this,e))}handleFieldChange(e,t){this.props.onFieldChange&&this.props.onFieldChange(e,t)}render(){return a.a.createElement("div",{className:"auth-bearer-token-container"},a.a.createElement("div",{className:"auth-input-wrapper"},a.a.createElement("div",{className:"auth-input-group auth-input--token"},a.a.createElement("div",{className:"auth-label"}," Token "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(l.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Token",value:this.getValue("token"),onChange:this.handleFieldChange.bind(this,"token"),readOnly:this.props.disableEdit,ref:"token",onSelectionChange:this.handleSelectionChange.bind(this,"token")})))))}}d.propTypes={bearerAuth:s.a.array.isRequired,onFieldChange:s.a.func.isRequired}},"./runtime-repl/auth/AuthConstants.js":function(e,t,n){"use strict";n.r(t),n.d(t,"AUTH_TYPE_INHERIT",(function(){return r})),n.d(t,"AUTH_TYPE_NO_AUTH",(function(){return a})),n.d(t,"AUTH_TYPE_BASIC_AUTH",(function(){return i})),n.d(t,"AUTH_TYPE_BEARER_AUTH",(function(){return o})),n.d(t,"AUTH_TYPE_DIGEST_AUTH",(function(){return s})),n.d(t,"AUTH_TYPE_O_AUTH_1",(function(){return l})),n.d(t,"AUTH_TYPE_O_AUTH_2",(function(){return c})),n.d(t,"AUTH_TYPE_HAWK",(function(){return u})),n.d(t,"AUTH_TYPE_AWS",(function(){return d})),n.d(t,"AUTH_TYPE_NTLM_AUTH",(function(){return h})),n.d(t,"AUTH_TYPE_APIKEY",(function(){return p})),n.d(t,"AUTH_TYPE_AKAMAI_EDGEGRID",(function(){return m})),n.d(t,"AUTH_TYPE_RAW_INHERIT",(function(){return f})),n.d(t,"AUTH_TYPE_RAW_NO_AUTH",(function(){return g})),n.d(t,"AUTH_TYPE_RAW_BASIC_AUTH",(function(){return b})),n.d(t,"AUTH_TYPE_RAW_BEARER_AUTH",(function(){return y})),n.d(t,"AUTH_TYPE_RAW_DIGEST_AUTH",(function(){return v})),n.d(t,"AUTH_TYPE_RAW_O_AUTH_1",(function(){return T})),n.d(t,"AUTH_TYPE_RAW_O_AUTH_2",(function(){return A})),n.d(t,"AUTH_TYPE_RAW_HAWK",(function(){return E})),n.d(t,"AUTH_TYPE_RAW_AWS",(function(){return S})),n.d(t,"AUTH_TYPE_RAW_NTLM_AUTH",(function(){return C})),n.d(t,"AUTH_TYPE_RAW_APIKEY",(function(){return k})),n.d(t,"AUTH_TYPE_RAW_AKAMAI_EDGEGRID",(function(){return I})),n.d(t,"AUTH_TYPE_LABEL_MAP",(function(){return w})),n.d(t,"AUTH_LEGACY_MAP",(function(){return x})),n.d(t,"ADD_AUTH_PARAMS_TO",(function(){return j})),n.d(t,"ENTITY_NAME_MAX_LENGTH",(function(){return O})),n.d(t,"BLACKLIST_AUTH_MEMORY_FIELDS",(function(){return R}));const r="Inherit auth from parent",a="No Auth",i="Basic Auth",o="Bearer Token",s="Digest Auth",l="OAuth 1.0",c="OAuth 2.0",u="Hawk Authentication",d="AWS Signature",h="NTLM Authentication [Beta]",p="API Key",m="Akamai EdgeGrid",f="inherit",g="noauth",b="basic",y="bearer",v="digest",T="oauth1",A="oauth2",E="hawk",S="awsv4",C="ntlm",k="apikey",I="edgegrid",w={[f]:r,[g]:a,[b]:i,[y]:o,[v]:s,[T]:l,[A]:c,[E]:u,[S]:d,[C]:h,[k]:p,[I]:m},x={[f]:"inherit",[g]:"normal",[b]:"basicAuth",[y]:"bearerAuth",[v]:"digestAuth",[T]:"oAuth1Auth",[A]:"oAuth2Auth",[E]:"hawkAuth",[S]:"awsv4Auth",[C]:"ntlmAuth",[k]:"apikeyAuth",[I]:"edgegridAuth"},j={URL:"Request URL",BODY_OR_URL:"Request Body / Request URL",HEADERS:"Request Headers"},O=140,R={oauth2:{accessToken:!0}}},"./runtime-repl/auth/AuthDigestEditor.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return y}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/react-dom/index.js"),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("./js/components/base/Inputs.js"),c=n("./js/components/base/Dropdowns.js"),u=n("./js/components/base/Buttons.js"),d=n("./js/components/base/InfoButton.js"),h=n("./js/components/base/AutoSuggest/AutoSuggestInput.js"),p=n("./runtime-repl/auth/authUtil.js"),m=n("./js/stores/get-store.js"),f=n("./runtime-repl/auth/RequestDigestAuthConstants.js"),g=n("./runtime-repl/auth/AuthAdvancedToggle.js"),b=n("./runtime-repl/auth/AuthAdvancedDescription.js");class y extends r.Component{constructor(e){super(e),this.actionMenuStore=Object(m.getStore)("ActionMenuStore")}getValue(e,t){return Object(p.getAuthValue)(this.props.digestAuth,e,t)}handleFieldChange(e,t){this.props.onFieldChange&&this.props.onFieldChange(e,t)}handleSelectionChange(e,t,n){const r=e&&Object(i.findDOMNode)(this.refs[e]);if(!t||!r)return this.actionMenuStore.clear();this.actionMenuStore.setActionMenuState(!0,r,t,n,"autoSuggest",this.handleFieldChange.bind(this,e))}render(){const{disableEdit:e}=this.props;return a.a.createElement("div",{className:"auth-digest-auth-container"},a.a.createElement("div",{className:"auth-input-wrapper"},a.a.createElement("div",{className:"auth-input-group auth-input--username"},a.a.createElement("div",{className:"auth-label"}," Username "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Username",value:this.getValue("username"),onChange:this.handleFieldChange.bind(this,"username"),readOnly:e,ref:"username",onSelectionChange:this.handleSelectionChange.bind(this,"username")}))),a.a.createElement("div",{className:"auth-input-group auth-input--password"},a.a.createElement("div",{className:"auth-label"}," Password "),a.a.createElement("div",{className:"auth-input"},this.props.showPassword?a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Password",value:this.getValue("password"),onChange:this.handleFieldChange.bind(this,"password"),readOnly:e,ref:"password",onSelectionChange:this.handleSelectionChange.bind(this,"password")}):a.a.createElement(l.Input,{inputStyle:"box",placeholder:"Password",type:"password",value:this.getValue("password"),onChange:this.handleFieldChange.bind(this,"password"),readOnly:e}))),a.a.createElement("div",{className:"auth-input-group auth-input--show-password"},a.a.createElement("div",{className:"auth-label"}),a.a.createElement("div",{className:"auth-input"},a.a.createElement(l.Checkbox,{checked:this.props.showPassword,onChange:this.props.onShowPasswordToggle}),a.a.createElement("span",{onClick:this.props.onShowPasswordToggle,className:"auth-input__checkbox-label"},"Show Password"))),a.a.createElement("div",{className:"auth-form-group"},a.a.createElement(g.default,{isOpen:this.props.showAuthAdvancedFields,onToggleAdvancedFields:this.props.onToggleAdvancedFields})),this.props.showAuthAdvancedFields&&a.a.createElement("div",null,a.a.createElement(b.default,null),a.a.createElement("div",{className:"auth-input-group auth-input--realm"},a.a.createElement("div",{className:"auth-label"},"Realm",a.a.createElement(d.default,{tooltip:"This is a string specified by the server in the WWW-Authenticate response header. It should contain at least the name of the host performing the authentication and might additionally indicate the collection of users who might have access."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"testrealm@example.com",value:this.getValue("realm"),onChange:this.handleFieldChange.bind(this,"realm"),readOnly:e,ref:"realm",onSelectionChange:this.handleSelectionChange.bind(this,"realm")}))),a.a.createElement("div",{className:"auth-input-group auth-input--nonce"},a.a.createElement("div",{className:"auth-label"},"Nonce",a.a.createElement(d.default,{tooltip:"This is a unique string specified by the server in the WWW-Authenticate response header."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Nonce",value:this.getValue("nonce"),onChange:this.handleFieldChange.bind(this,"nonce"),readOnly:e,ref:"nonce",onSelectionChange:this.handleSelectionChange.bind(this,"nonce")}))),a.a.createElement("div",{className:"auth-input-group auth-input--algorithm"},a.a.createElement("div",{className:"auth-label"},"Algorithm",a.a.createElement(d.default,{tooltip:"A string indicating a pair of algorithms used to produce the digest and a checksum."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(c.Dropdown,{onSelect:this.handleFieldChange.bind(this,"algorithm")},a.a.createElement(c.DropdownButton,{type:"secondary",size:"small"},a.a.createElement(u.Button,null,a.a.createElement("span",null,this.getValue("algorithm",f.ALGORITHM.MD5)))),a.a.createElement(c.DropdownMenu,{fluid:!0},a.a.createElement(c.MenuItem,{refKey:f.ALGORITHM.MD5,disabled:e},a.a.createElement("span",null,f.ALGORITHM.MD5)),a.a.createElement(c.MenuItem,{refKey:f.ALGORITHM.MD5_SESS,disabled:e},a.a.createElement("span",null,f.ALGORITHM.MD5_SESS)),a.a.createElement(c.MenuItem,{refKey:f.ALGORITHM.SHA_256,disabled:e},a.a.createElement("span",null,f.ALGORITHM.SHA_256)),a.a.createElement(c.MenuItem,{refKey:f.ALGORITHM.SHA_256_SESS,disabled:e},a.a.createElement("span",null,f.ALGORITHM.SHA_256_SESS)),a.a.createElement(c.MenuItem,{refKey:f.ALGORITHM.SHA_512_256,disabled:e},a.a.createElement("span",null,f.ALGORITHM.SHA_512_256)),a.a.createElement(c.MenuItem,{refKey:f.ALGORITHM.SHA_512_256_SESS,disabled:e},a.a.createElement("span",null,f.ALGORITHM.SHA_512_256_SESS)))))),a.a.createElement("div",{className:"auth-input-group auth-input--qop"},a.a.createElement("div",{className:"auth-label"},"qop",a.a.createElement(d.default,{tooltip:'Indicates the "quality of protection" applied to the message. This value must be one of the alternatives specified by the server in the WWW-Authenticate response header.'})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"e.g. auth-int",value:this.getValue("qop"),onChange:this.handleFieldChange.bind(this,"qop"),readOnly:e,ref:"qop",onSelectionChange:this.handleSelectionChange.bind(this,"qop")}))),a.a.createElement("div",{className:"auth-input-group auth-input--nonce-count"},a.a.createElement("div",{className:"auth-label"},"Nonce Count",a.a.createElement(d.default,{tooltip:"The hexadecimal count of the number of requests (including the current request) that the client has sent with the nonce value in this request. This must be specified if a qop directive is sent, and must not be specified if the server did not send a qop directive in the WWW-Authenticate response header."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"e.g. 00000001",value:this.getValue("nonceCount"),onChange:this.handleFieldChange.bind(this,"nonceCount"),readOnly:e,ref:"nonceCount",onSelectionChange:this.handleSelectionChange.bind(this,"nonceCount")}))),a.a.createElement("div",{className:"auth-input-group auth-input--client-nonce"},a.a.createElement("div",{className:"auth-label"},"Client Nonce",a.a.createElement(d.default,{tooltip:"An opaque quoted string value provided by the client and used by both client and server to avoid chosen plaintext attacks, to provide mutual authentication, and to provide some message integrity protection. This must be specified if a qop directive is sent, and must not be specified if the server did not send a qop directive in the WWW-Authenticate response header."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"e.g. 0a4f113b",value:this.getValue("clientNonce"),onChange:this.handleFieldChange.bind(this,"clientNonce"),readOnly:e,ref:"clientNonce",onSelectionChange:this.handleSelectionChange.bind(this,"clientNonce")}))),a.a.createElement("div",{className:"auth-input-group auth-input--opaque"},a.a.createElement("div",{className:"auth-label"},"Opaque",a.a.createElement(d.default,{tooltip:"This is a string of data specified by the server in the WWW-Authenticate response header and should be used here unchanged with URIs in the same protection space. It is recommended that this string be base64 or hexadecimal data."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Opaque",value:this.getValue("opaque"),onChange:this.handleFieldChange.bind(this,"opaque"),readOnly:e,ref:"opaque",onSelectionChange:this.handleSelectionChange.bind(this,"opaque")}))))))}}y.propTypes={digestAuth:s.a.array.isRequired,showAuthAdvancedFields:s.a.bool.isRequired,showPassword:s.a.bool.isRequired,onFieldChange:s.a.func.isRequired,onToggleAdvancedFields:s.a.func.isRequired,onShowPasswordToggle:s.a.func.isRequired}},"./runtime-repl/auth/AuthEditor.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return N}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/@postman/aether/esmLib/index.js"),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("./js/components/base/Dropdowns.js"),c=n("./js/components/base/Inputs.js"),u=n("./js/components/base/Buttons.js"),d=n("./runtime-repl/auth/authUtil.js"),h=n("./runtime-repl/auth/AuthConstants.js"),p=n("./runtime-repl/auth/RequestOAuth2Constants.js"),m=n("./runtime-repl/request-http/RequesterTabLayoutConstants.js"),f=n("./runtime-repl/collection/_api/CollectionInterface.js"),g=n("./runtime-repl/folder/_api/FolderInterface.js"),b=n("./runtime-repl/transient-collection/datastores/stores/TransientFolderStore.ts"),y=n("./runtime-repl/transient-collection/datastores/stores/TransientCollectionStore.ts"),v=n("./appsdk/components/link/Link.js"),T=n("./js/constants/AppUrlConstants.js"),A=n("./runtime-repl/auth/AuthTypeSelector.js"),E=n("./runtime-repl/auth/AuthApiKeyEditor.js"),S=n("./runtime-repl/auth/AuthBasicEditor.js"),C=n("./runtime-repl/auth/AuthBearerEditor.js"),k=n("./runtime-repl/auth/AuthDigestEditor.js"),I=n("./runtime-repl/auth/OAuth1Editor.js"),w=n("./runtime-repl/auth/OAuth2Editor.js"),x=n("./runtime-repl/auth/AuthHawkEditor.js"),j=n("./runtime-repl/auth/AuthEditorCta.js"),O=n("./runtime-repl/auth/AuthAWSSignature.js"),R=n("./runtime-repl/auth/AuthNTLMEditor.js"),_=n("./runtime-repl/auth/AuthAkamaiEdgeGridEditor.js"),P=n("./runtime-repl/auth/InheritedAuthInfo.js");class N extends r.Component{constructor(e){super(e),this.getDisableRetryOption=this.getDisableRetryOption.bind(this),this.handleDisableRetryChange=this.handleDisableRetryChange.bind(this),this.getOauth1AddToParamsValue=this.getOauth1AddToParamsValue.bind(this),this.getOauth2AddTokenToValue=this.getOauth2AddTokenToValue.bind(this),this.handleOpenInheritedAuth=this.handleOpenInheritedAuth.bind(this),this.inheritedAuthRouteConfig=this.inheritedAuthRouteConfig.bind(this)}getDisableRetryOption(){const t=e.get(this.props,"auth.type",h.AUTH_TYPE_RAW_NO_AUTH);return this.getValue(t,"disableRetryRequest")}getOauth1AddToParamsValue(){return this.getValue("oauth1","addParamsToHeader",!1)}getValue(t,n,r){const a=e.get(this.props,["auth",t],{});return Object(d.getAuthValue)(a,n,r)}getOauth2AddTokenToValue(){return this.getValue("oauth2","addTokenTo",!0)}getAWSAddAuthDataToQueryValue(){return this.getValue("awsv4","addAuthDataToQuery",!1)}handleDisableRetryChange(t){const n=e.get(this.props,"auth.type",h.AUTH_TYPE_RAW_NO_AUTH);this.props.handleAuthAnalytics(t?"disable_retrying_request":"enable_retrying_request"),this.handleFieldChange(n,"disableRetryRequest",t)}handleFieldChange(e,t,n){this.props.disableEdit||this.props.onFieldChange&&this.props.onFieldChange(e,t,n)}handleFieldDelete(e,t){this.props.disableEdit||this.props.onFieldDelete&&this.props.onFieldDelete(e,t)}handleSessionFieldChange(e,t,n){this.props.onSessionFieldChange&&this.props.onSessionFieldChange(e,t,n)}handleOpenInheritedAuth(){const{inheritedAuth:t,isTransient:n}=this.props,r=e.get(t,"entity.id"),a=e.get(t,"entity.uid"),i=e.get(t,"entity.parentCollectionUID");if("folder"===e.get(t,"entity.type")){if(n)return b.default.find(r)&&b.default.find(r).openInWorkbench();Object(g.openFolderInTab)(a,i)}else if("collection"===e.get(t,"entity.type")){if(n)return y.default.find(r)&&y.default.find(r).openInWorkbench();Object(f.openCollectionInTab)(a)}}inheritedAuthRouteConfig(){const{inheritedAuth:t,isTransient:n}=this.props,r=e.get(t,"entity.uid");return"folder"===e.get(t,"entity.type")?n?null:Object(g.folderRouteConfig)(r):"collection"===e.get(t,"entity.type")?n?null:Object(f.collectionRouteConfig)(r):null}renderAuthOptions(e,t){const{disableEdit:n}=this.props;switch(e){case h.AUTH_TYPE_RAW_O_AUTH_1:return a.a.createElement("div",{className:"auth-target-input"},a.a.createElement("div",{className:"auth-target-input__selector"},a.a.createElement("div",{className:"auth-label"},a.a.createElement(i.Label,{type:"primary",color:"content-color-primary",text:t})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(l.Dropdown,{onSelect:this.handleFieldChange.bind(this,"oauth1","addParamsToHeader"),fullWidth:!0},a.a.createElement(l.DropdownButton,{type:"secondary",size:"small"},a.a.createElement(u.Button,null,a.a.createElement("span",null,this.getOauth1AddToParamsValue()?h.ADD_AUTH_PARAMS_TO.HEADERS:h.ADD_AUTH_PARAMS_TO.BODY_OR_URL))),a.a.createElement(l.DropdownMenu,{fluid:!0},a.a.createElement(l.MenuItem,{refKey:!1,disabled:n},a.a.createElement("span",null,h.ADD_AUTH_PARAMS_TO.BODY_OR_URL)),a.a.createElement(l.MenuItem,{refKey:!0,disabled:n},a.a.createElement("span",null,h.ADD_AUTH_PARAMS_TO.HEADERS)))),!this.getOauth1AddToParamsValue()&&a.a.createElement("div",{className:"auth-input__description"},a.a.createElement(i.Text,{type:"body-medium",color:"content-color-secondary"},"Postman will automatically choose between body and URL based on the request method.")))));case h.AUTH_TYPE_RAW_DIGEST_AUTH:case h.AUTH_TYPE_RAW_NTLM_AUTH:return a.a.createElement("div",{className:"auth-retry-input"},a.a.createElement("div",{className:"auth-retry-input__description"},a.a.createElement(i.Text,{type:"body-medium",color:"content-color-secondary"},"By default, Postman will extract values from the received response, add it to the request, and retry it. Do you want to disable this?")),a.a.createElement("div",{className:"auth-input-group auth-retry-input__toggle"},a.a.createElement("div",{className:"auth-input"},a.a.createElement(c.Checkbox,{checked:this.getDisableRetryOption(),onChange:this.handleDisableRetryChange,disabled:n}),a.a.createElement("span",{className:"auth-input__checkbox-label",onClick:this.handleDisableRetryChange.bind(this,!this.getDisableRetryOption())},"Yes, disable retrying the request"))));case h.AUTH_TYPE_RAW_O_AUTH_2:return a.a.createElement("div",{className:"auth-target-input"},a.a.createElement("div",{className:"auth-target-input__selector"},a.a.createElement("div",{className:"auth-label"},a.a.createElement(i.Label,{type:"primary",color:"content-color-primary",text:t})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(l.Dropdown,{onSelect:this.handleFieldChange.bind(this,"oauth2","addTokenTo"),fullWidth:!0},a.a.createElement(l.DropdownButton,{type:"secondary",size:"small"},a.a.createElement(u.Button,null,a.a.createElement("span",null,this.getOauth2AddTokenToValue()===p.ADD_TOKEN_TO.QUERY_PARAMS?h.ADD_AUTH_PARAMS_TO.URL:h.ADD_AUTH_PARAMS_TO.HEADERS))),a.a.createElement(l.DropdownMenu,{fluid:!0},a.a.createElement(l.MenuItem,{refKey:p.ADD_TOKEN_TO.QUERY_PARAMS,disabled:n},a.a.createElement("span",null,h.ADD_AUTH_PARAMS_TO.URL)),a.a.createElement(l.MenuItem,{refKey:p.ADD_TOKEN_TO.HEADER,disabled:n},a.a.createElement("span",null,h.ADD_AUTH_PARAMS_TO.HEADERS)))))));case h.AUTH_TYPE_RAW_AWS:return a.a.createElement("div",{className:"auth-target-input"},a.a.createElement("div",{className:"auth-target-input__selector"},a.a.createElement("div",{className:"auth-label"},a.a.createElement(i.Label,{type:"primary",color:"content-color-primary",text:t})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(l.Dropdown,{onSelect:this.handleFieldChange.bind(this,"awsv4","addAuthDataToQuery"),fullWidth:!0},a.a.createElement(l.DropdownButton,{type:"secondary",size:"small"},a.a.createElement(u.Button,null,a.a.createElement("span",null,this.getAWSAddAuthDataToQueryValue()?h.ADD_AUTH_PARAMS_TO.URL:h.ADD_AUTH_PARAMS_TO.HEADERS))),a.a.createElement(l.DropdownMenu,{fluid:!0},a.a.createElement(l.MenuItem,{refKey:!1,disabled:n},a.a.createElement("span",null,h.ADD_AUTH_PARAMS_TO.HEADERS)),a.a.createElement(l.MenuItem,{refKey:!0,disabled:n},a.a.createElement("span",null,h.ADD_AUTH_PARAMS_TO.URL)))))));default:return null}}renderAuthConfig(e,t,n,r,o){const{disableEdit:s}=this.props;switch(e){case h.AUTH_TYPE_RAW_NO_AUTH:return a.a.createElement("div",{className:"auth-no-auth-container"},a.a.createElement("div",{className:"auth-target-description"},a.a.createElement(i.Text,{type:"body-medium",color:"content-color-secondary"},`This ${t} does not use any authorization. `),a.a.createElement(v.default,{className:"auth-target-description__link",to:this.props.authLearnMoreURL||T.AUTH_DOCS,target:"_blank"},a.a.createElement(i.Text,{type:"link-primary",isExternal:!0},"Learn more about authorization"))));case h.AUTH_TYPE_RAW_APIKEY:return a.a.createElement(E.default,{apiKeyAuth:n,onFieldChange:this.handleFieldChange.bind(this,"apikey"),disableEdit:s,hideAddTo:this.props.hideAddToInAPIKey});case h.AUTH_TYPE_RAW_BASIC_AUTH:return a.a.createElement(S.default,{basicAuth:n,showPassword:this.props.showPassword,onFieldChange:this.handleFieldChange.bind(this,"basic"),onShowPasswordToggle:this.props.onShowPasswordToggle,disableEdit:s});case h.AUTH_TYPE_RAW_BEARER_AUTH:return a.a.createElement(C.default,{bearerAuth:n,onFieldChange:this.handleFieldChange.bind(this,"bearer"),disableEdit:s});case h.AUTH_TYPE_RAW_DIGEST_AUTH:return a.a.createElement(k.default,{digestAuth:n,showPassword:this.props.showPassword,showAuthAdvancedFields:this.props.showAuthAdvancedFields,onFieldChange:this.handleFieldChange.bind(this,"digest"),onShowPasswordToggle:this.props.onShowPasswordToggle,onToggleAdvancedFields:this.props.onToggleAdvancedFields,disableEdit:s});case h.AUTH_TYPE_RAW_O_AUTH_1:return a.a.createElement(I.default,{oauth1:n,onFieldChange:this.handleFieldChange.bind(this,"oauth1"),showAuthAdvancedFields:this.props.showAuthAdvancedFields,onToggleAdvancedFields:this.props.onToggleAdvancedFields,disableEdit:s});case h.AUTH_TYPE_RAW_NTLM_AUTH:return a.a.createElement(R.default,{ntlmAuth:n,showAuthAdvancedFields:this.props.showAuthAdvancedFields,showPassword:this.props.showPassword,onFieldChange:this.handleFieldChange.bind(this,"ntlm"),onShowPasswordToggle:this.props.onShowPasswordToggle,onToggleAdvancedFields:this.props.onToggleAdvancedFields,disableEdit:s,entityType:t});case h.AUTH_TYPE_RAW_AKAMAI_EDGEGRID:return a.a.createElement(_.default,{edgegrid:n,onFieldChange:this.handleFieldChange.bind(this,"edgegrid"),showAuthAdvancedFields:this.props.showAuthAdvancedFields,onToggleAdvancedFields:this.props.onToggleAdvancedFields,disableEdit:s});case h.AUTH_TYPE_RAW_O_AUTH_2:return a.a.createElement(w.default,{editorId:o,isTransient:this.props.isTransient,collectionId:this.props.collectionId,entityId:this.props.entityId,oAuth2:n,oAuth2Session:r,onFieldChange:this.handleFieldChange.bind(this,"oauth2"),onFieldDelete:this.handleFieldDelete.bind(this,"oauth2"),onSessionFieldChange:this.handleSessionFieldChange.bind(this,"oauth2"),onUseToken:this.props.onUseToken,disableEdit:s,entityType:t});case h.AUTH_TYPE_RAW_HAWK:return a.a.createElement(x.default,{hawkAuth:n,showAuthAdvancedFields:this.props.showAuthAdvancedFields,onFieldChange:this.handleFieldChange.bind(this,"hawk"),onToggleAdvancedFields:this.props.onToggleAdvancedFields,disableEdit:s});case h.AUTH_TYPE_RAW_AWS:return a.a.createElement(O.default,{awsv4:n,showAuthAdvancedFields:this.props.showAuthAdvancedFields,onFieldChange:this.handleFieldChange.bind(this,"awsv4"),onToggleAdvancedFields:this.props.onToggleAdvancedFields,disableEdit:s});default:return null}}render(){const{auth:t}=this.props,n=this.props.type,r="collection"===n?h.AUTH_TYPE_RAW_NO_AUTH:h.AUTH_TYPE_RAW_INHERIT,o=e.get(t,"type",r),s=e.get(t,[o],[]),l=e.get(this.props.authSession,[o],[]),c=`The authorization ${o===h.AUTH_TYPE_RAW_O_AUTH_1||o===h.AUTH_TYPE_RAW_O_AUTH_2?"data":"header"} will be automatically generated when you send the request.`,u=this.props.showAuthVariablesAlert&&!(o===h.AUTH_TYPE_RAW_NO_AUTH||o===h.AUTH_TYPE_RAW_INHERIT),d=`Add ${this.props.layout===m.REQUESTER_TAB_LAYOUT_1_COLUMN?"authorization":"auth"} data to`,{inheritedAuth:p}=this.props;return a.a.createElement("div",{className:"auth-editor"},a.a.createElement("div",{className:"auth-selector-wrapper"},a.a.createElement("div",{className:"auth-type-wrapper"},a.a.createElement(A.default,{type:n,authTypes:this.props.authTypes,layout:this.props.layout,selectedAuthType:o,onSelect:this.props.onAuthTypeSelect,disableEdit:this.props.disableEdit}),!(o===h.AUTH_TYPE_RAW_NO_AUTH)&&!this.props.hideTargetDescription&&a.a.createElement("div",{className:"auth-target-description"},a.a.createElement(i.Text,{type:"body-medium",color:"content-color-secondary"},c," "),a.a.createElement(v.default,{className:"auth-target-description__link",to:this.props.authLearnMoreURL||T.AUTH_DOCS,target:"_blank"},a.a.createElement(i.Text,{type:"link-primary",isExternal:!0},"Learn more about authorization"))),this.renderAuthOptions(o,d)),o!==h.AUTH_TYPE_RAW_NO_AUTH&&this.props.showPreviewButton&&a.a.createElement(j.default,{authType:o,onSubmitForm:this.props.onSubmitForm})),a.a.createElement("div",{className:"auth-editor-column-divider"}),a.a.createElement("div",{className:"auth-type-editor"},u&&a.a.createElement("div",{className:"auth-recommend-variables"},a.a.createElement(i.Icon,{name:"icon-state-error-stroke",color:"content-color-secondary",className:"auth-recommend-variables__warning-icon"}),a.a.createElement("div",{className:"auth-recommend-variables__text"},a.a.createElement(i.Text,{type:"body-medium",color:"content-color-secondary"},"Heads up! These parameters hold sensitive data. To keep this data secure while working in a collaborative environment, we recommend using variables. "),a.a.createElement("span",{className:"auth-recommend-variables__link",onClick:this.props.onVariablesLearnMore},a.a.createElement(i.Text,{type:"link-primary",isExternal:!0},"Learn more about variables"))),a.a.createElement("div",{className:"auth-recommend-variables__dismiss-icon",onClick:this.props.onDismissVariablesAlert},a.a.createElement(i.Icon,{name:"icon-action-close-stroke",color:"content-color-secondary"}))),a.a.createElement(P.default,{authType:o,entityType:n,inheritedAuth:p,onInheritedAuthClick:this.handleOpenInheritedAuth,inheritedAuthRouteConfig:this.inheritedAuthRouteConfig}),this.renderAuthConfig(o,n,s,l,this.props.editorId)))}}N.defaultProps={showPreviewButton:!1,disableEdit:!1,hideTargetDescription:!1,hideAddToInAPIKey:!1,authTypes:null,showAuthAdvancedFields:!1,onToggleAdvancedFields:e.noop,authLearnMoreURL:null},N.propTypes={showAuthVariablesAlert:s.a.bool.isRequired,onDismissVariablesAlert:s.a.func.isRequired,showAuthAdvancedFields:s.a.bool,onToggleAdvancedFields:s.a.func,onAuthTypeSelect:s.a.func.isRequired,onFieldChange:s.a.func.isRequired,showPreviewButton:s.a.bool,disableEdit:s.a.bool,hideTargetDescription:s.a.bool,hideAddToInAPIKey:s.a.bool,authTypes:s.a.array,authLearnMoreURL:s.a.string}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/auth/AuthEditorCta.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return c}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("./node_modules/classnames/index.js"),o=n.n(i),s=n("./js/components/base/Buttons.js"),l=n("./runtime-repl/auth/AuthConstants.js");class c extends r.Component{constructor(e){super(e),this.handleSubmitForm=this.handleSubmitForm.bind(this)}getClasses(){return o()({"auth-type-cta-group":!0,show:this.isAuthPreviewable(this.props.authType)})}isAuthPreviewable(t){return e.includes([l.AUTH_TYPE_RAW_BEARER_AUTH,l.AUTH_TYPE_RAW_BASIC_AUTH,l.AUTH_TYPE_RAW_DIGEST_AUTH,l.AUTH_TYPE_RAW_O_AUTH_1,l.AUTH_TYPE_RAW_O_AUTH_2,l.AUTH_TYPE_RAW_HAWK,l.AUTH_TYPE_RAW_AWS,l.AUTH_TYPE_RAW_AKAMAI_EDGEGRID],t)}handleSubmitForm(){this.props.onSubmitForm&&this.props.onSubmitForm()}render(){const e=this.getClasses();return a.a.createElement("div",{className:"auth-type-cta-wrapper"},a.a.createElement("div",{className:e},a.a.createElement(s.Button,{type:"primary",onClick:this.handleSubmitForm},"Preview Request")))}}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/auth/AuthHawkEditor.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return y}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/react-dom/index.js"),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("./js/components/base/Buttons.js"),c=n("./js/components/base/Inputs.js"),u=n("./js/components/base/Dropdowns.js"),d=n("./js/components/base/InfoButton.js"),h=n("./js/components/base/AutoSuggest/AutoSuggestInput.js"),p=n("./runtime-repl/auth/authUtil.js"),m=n("./js/stores/get-store.js"),f=n("./runtime-repl/auth/RequestHawkAuthConstants.js"),g=n("./runtime-repl/auth/AuthAdvancedToggle.js"),b=n("./runtime-repl/auth/AuthAdvancedDescription.js");class y extends r.Component{constructor(e){super(e),this.actionMenuStore=Object(m.getStore)("ActionMenuStore")}getValue(e,t){return Object(p.getAuthValue)(this.props.hawkAuth,e,t)}handleFieldChange(e,t){this.props.onFieldChange&&this.props.onFieldChange(e,t)}handleSelectionChange(e,t,n){const r=e&&Object(i.findDOMNode)(this.refs[e]);if(!t||!r)return this.actionMenuStore.clear();this.actionMenuStore.setActionMenuState(!0,r,t,n,"autoSuggest",this.handleFieldChange.bind(this,e))}render(){const{disableEdit:e}=this.props;return a.a.createElement("div",{className:"auth-o-auth-1-container"},a.a.createElement("div",{className:"auth-input-wrapper"},a.a.createElement("div",{className:"auth-input-group auth-input--auth-id"},a.a.createElement("div",{className:"auth-label"}," Hawk Auth ID "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Hawk Auth ID",value:this.getValue("authId"),onChange:this.handleFieldChange.bind(this,"authId"),readOnly:e,ref:"authId",onSelectionChange:this.handleSelectionChange.bind(this,"authId")}))),a.a.createElement("div",{className:"auth-input-group auth-input--auth-key"},a.a.createElement("div",{className:"auth-label"}," Hawk Auth Key "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Hawk Auth Key",value:this.getValue("authKey"),onChange:this.handleFieldChange.bind(this,"authKey"),readOnly:e,ref:"authKey",onSelectionChange:this.handleSelectionChange.bind(this,"authKey")}))),a.a.createElement("div",{className:"auth-input-group auth-input--algorithm"},a.a.createElement("div",{className:"auth-label"}," Algorithm "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(u.Dropdown,{onSelect:this.handleFieldChange.bind(this,"algorithm")},a.a.createElement(u.DropdownButton,{size:"small",type:"secondary"},a.a.createElement(l.Button,null,a.a.createElement("span",null,this.getValue("algorithm",f.ALGORITHM.SHA_256)))),a.a.createElement(u.DropdownMenu,{fluid:!0},a.a.createElement(u.MenuItem,{refKey:f.ALGORITHM.SHA_256,disabled:e},a.a.createElement("span",null,f.ALGORITHM.SHA_256)),a.a.createElement(u.MenuItem,{refKey:f.ALGORITHM.SHA_1,disabled:e},a.a.createElement("span",null,f.ALGORITHM.SHA_1)))))),a.a.createElement("div",{className:"auth-form-group"},a.a.createElement(g.default,{isOpen:this.props.showAuthAdvancedFields,onToggleAdvancedFields:this.props.onToggleAdvancedFields})),this.props.showAuthAdvancedFields&&a.a.createElement("div",null,a.a.createElement(b.default,null),a.a.createElement("div",{className:"auth-input-group auth-input--user"},a.a.createElement("div",{className:"auth-label"}," User "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Username",value:this.getValue("user"),onChange:this.handleFieldChange.bind(this,"user"),readOnly:e,ref:"user",onSelectionChange:this.handleSelectionChange.bind(this,"user")}))),a.a.createElement("div",{className:"auth-input-group auth-input--nonce"},a.a.createElement("div",{className:"auth-label"},"Nonce",a.a.createElement(d.default,{tooltip:"A random string generated by the client."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Nonce",value:this.getValue("nonce"),onChange:this.handleFieldChange.bind(this,"nonce"),readOnly:e,ref:"nonce",onSelectionChange:this.handleSelectionChange.bind(this,"nonce")}))),a.a.createElement("div",{className:"auth-input-group auth-input--extra-data"},a.a.createElement("div",{className:"auth-label"},"ext",a.a.createElement(d.default,{tooltip:"Any application-specific information to be sent with the request."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"e.g. some-app-extra-data",value:this.getValue("extraData"),onChange:this.handleFieldChange.bind(this,"extraData"),readOnly:e,ref:"extraData",onSelectionChange:this.handleSelectionChange.bind(this,"extraData")}))),a.a.createElement("div",{className:"auth-input-group auth-input--app-id"},a.a.createElement("div",{className:"auth-label"},"app",a.a.createElement(d.default,{tooltip:"This provides binding between the credentials and the application in a way that prevents an attacker from tricking an application to use credentials issued to someone else."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Application ID",value:this.getValue("app"),onChange:this.handleFieldChange.bind(this,"app"),readOnly:e,ref:"app",onSelectionChange:this.handleSelectionChange.bind(this,"app")}))),a.a.createElement("div",{className:"auth-input-group auth-input--delegation"},a.a.createElement("div",{className:"auth-label"},"dlg",a.a.createElement(d.default,{tooltip:"The application id of the application the credentials were directly issued to."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"e.g. delegated-by",value:this.getValue("delegation"),onChange:this.handleFieldChange.bind(this,"delegation"),readOnly:e,ref:"delegation",onSelectionChange:this.handleSelectionChange.bind(this,"delegation")}))),a.a.createElement("div",{className:"auth-input-group auth-input--timestamp"},a.a.createElement("div",{className:"auth-label"}," Timestamp "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Timestamp",value:this.getValue("timestamp"),onChange:this.handleFieldChange.bind(this,"timestamp"),readOnly:e,ref:"timestamp",onSelectionChange:this.handleSelectionChange.bind(this,"timestamp")}))),a.a.createElement("div",{className:"auth-input--payload-hash--wrapper"},a.a.createElement("div",{className:"auth-input-group auth-input--payload-hash"},a.a.createElement("div",{className:"auth-input"},a.a.createElement(c.Checkbox,{checked:this.getValue("includePayloadHash",!1),onChange:this.handleFieldChange.bind(this,"includePayloadHash"),disabled:e}),a.a.createElement("span",{className:"auth-input__checkbox-label",onClick:this.handleFieldChange.bind(this,"includePayloadHash",!this.getValue("includePayloadHash",!1))},"Include payload hash",a.a.createElement(d.default,{tooltip:"Hawk authentication provides optional support for payload validation. If this option is selected, the payload hash will be calculated and included in MAC calculation and in Authorization header."}))))))))}}y.propTypes={hawkAuth:s.a.array.isRequired,onFieldChange:s.a.func.isRequired,onToggleAdvancedFields:s.a.func.isRequired,showAuthAdvancedFields:s.a.bool.isRequired}},"./runtime-repl/auth/AuthNTLMEditor.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return E}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("../../node_modules/react-dom/index.js"),s=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),l=n("./node_modules/classnames/index.js"),c=n.n(l),u=n("./node_modules/prop-types/index.js"),d=n.n(u),h=n("./js/components/base/Inputs.js"),p=n("./js/components/base/InfoButton.js"),m=n("./js/components/base/AutoSuggest/AutoSuggestInput.js"),f=n("./js/components/base/WarningButton.js"),g=n("./runtime-repl/auth/authUtil.js"),b=n("./js/stores/get-store.js"),y=n("./runtime-repl/_common/components/ArtemisEmptyState/ArtemisEmptyState.js"),v=n("./runtime-repl/agent/AgentConstants.js"),T=n("./runtime-repl/auth/AuthAdvancedToggle.js"),A=n("./runtime-repl/auth/AuthAdvancedDescription.js");let E=Object(s.observer)(r=class extends a.Component{constructor(e){super(e),this.state={parsedDomain:"",usernameWarningMessage:""},this.updateDomainPreview(),this.actionMenuStore=Object(b.getStore)("ActionMenuStore")}getParamsFromUsername(e){if(!e||"string"!=typeof e)return{username:e,domain:""};const t=e.split("\\"),n=e.split("@");return n.length>1&&t.length>1?{username:e,domain:""}:t&&2===t.length&&t[0]&&t[1]?{username:t[1],domain:t[0]}:n&&2===n.length&&n[0]&&n[1]?{username:n[0],domain:n[1]}:{username:e,domain:""}}getUsernameValidationMessage(e){const t=new Set(["@","'","[","]",":","|","&","<",">","+","=",";",",","?","*","%","/","\\"]);return e&&"string"==typeof e?this.hasCharacters(e,t)?"Username contains invalid characters":"NONE"===e?"Username is a restricted word":e.length>256?"Username is too long":"":""}getValue(e){return Object(g.getAuthValue)(this.props.ntlmAuth,e)}getUsernameInputClassnames(){return c()("auth-input",{"has-warning":this.state.usernameWarningMessage})}hasCharacters(e,t){if(!(e&&"string"==typeof e&&t instanceof Set))return!1;return void 0!==e.split("").find((e=>t.has(e)))}updateDomainPreview(){let e=this.getValue("username");const t=this.getValue("domain"),n=this.getParamsFromUsername(e);t||(e=n.username),this.setState({parsedDomain:n.domain||"",usernameWarningMessage:this.getUsernameValidationMessage(e)})}handleFieldChange(e,t){this.props.onFieldChange&&this.props.onFieldChange(e,t)}handleSelectionChange(e,t,n){const r=e&&Object(o.findDOMNode)(this.refs[e]);if(!t||!r)return this.actionMenuStore.clear();this.actionMenuStore.setActionMenuState(!0,r,t,n,"autoSuggest",this.handleFieldChange.bind(this,e))}render(){const{disableEdit:t}=this.props;return e.get(pm.runtime,"agent.stat.type")===v.TYPES.XHR?i.a.createElement(y.default,{className:"auth-ntlm-unavailable-container",title:"Authorization helper unavailable",message:"To customize your auth scheme, use the Postman Desktop Agent.",enablePrimaryAction:"request"===this.props.entityType}):i.a.createElement("div",{className:"auth-ntlm-auth-container"},i.a.createElement("div",{className:"auth-input-wrapper"},i.a.createElement("div",{className:"auth-input-group auth-input--username"},i.a.createElement("div",{className:"auth-label"}," Username "),i.a.createElement("div",{className:this.getUsernameInputClassnames()},i.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Username",value:this.getValue("username"),onChange:this.handleFieldChange.bind(this,"username"),onBlur:this.updateDomainPreview.bind(this),readOnly:t,ref:"username",onSelectionChange:this.handleSelectionChange.bind(this,"username")}),this.state.usernameWarningMessage&&i.a.createElement(f.default,{tooltip:this.state.usernameWarningMessage,tooltipPlacement:"top"}))),i.a.createElement("div",{className:"auth-input-group auth-input--password"},i.a.createElement("div",{className:"auth-label"}," Password "),i.a.createElement("div",{className:"auth-input"},this.props.showPassword?i.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Password",value:this.getValue("password"),onChange:this.handleFieldChange.bind(this,"password"),readOnly:t,ref:"password",onSelectionChange:this.handleSelectionChange.bind(this,"password")}):i.a.createElement(h.Input,{inputStyle:"box",placeholder:"Password",type:"password",value:this.getValue("password"),onChange:this.handleFieldChange.bind(this,"password"),readOnly:t}))),i.a.createElement("div",{className:"auth-input-group auth-input--show-password"},i.a.createElement("div",{className:"auth-label"}),i.a.createElement("div",{className:"auth-input"},i.a.createElement(h.Checkbox,{checked:this.props.showPassword,onChange:this.props.onShowPasswordToggle}),i.a.createElement("span",{onClick:this.props.onShowPasswordToggle,className:"auth-input__checkbox-label"},"Show Password"))),i.a.createElement("div",{className:"auth-form-group"},i.a.createElement(T.default,{isOpen:this.props.showAuthAdvancedFields,onToggleAdvancedFields:this.props.onToggleAdvancedFields})),this.props.showAuthAdvancedFields&&i.a.createElement("div",null,i.a.createElement(A.default,null),i.a.createElement("div",{className:"auth-input-group auth-input--domain"},i.a.createElement("div",{className:"auth-label"},"Domain",i.a.createElement(p.default,{tooltip:"The domain/host to authenticate against."})),i.a.createElement("div",{className:"auth-input"},i.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:this.state.parsedDomain||"e.g. example.com",value:this.getValue("domain"),onBlur:this.updateDomainPreview.bind(this),onChange:this.handleFieldChange.bind(this,"domain"),readOnly:t,ref:"domain",onSelectionChange:this.handleSelectionChange.bind(this,"domain")}))),i.a.createElement("div",{className:"auth-input-group auth-input--workstation"},i.a.createElement("div",{className:"auth-label"},"Workstation",i.a.createElement(p.default,{tooltip:"The hostname of your pc."})),i.a.createElement("div",{className:"auth-input"},i.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"e.g. John-PC",value:this.getValue("workstation"),onChange:this.handleFieldChange.bind(this,"workstation"),readOnly:t,ref:"workstation",onSelectionChange:this.handleSelectionChange.bind(this,"workstation")}))))))}})||r;E.propTypes={ntlmAuth:d.a.array.isRequired,onFieldChange:d.a.func.isRequired,onToggleAdvancedFields:d.a.func.isRequired,showAuthAdvancedFields:d.a.bool.isRequired}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/auth/AuthTypeSelector.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return c}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/@postman/aether/esmLib/index.js"),o=n("./js/components/base/Dropdowns.js"),s=n("./js/components/base/Buttons.js"),l=n("./runtime-repl/auth/AuthConstants.js");class c extends r.Component{constructor(e){super(e),this.handleSelect=this.handleSelect.bind(this)}handleSelect(e){this.props.onSelect&&this.props.onSelect(e)}getMenu(){const{disableEdit:t,authTypes:n}=this.props;if(!e.isEmpty(n))return e.map(n,(e=>a.a.createElement(o.MenuItem,{key:e,refKey:e,disabled:t},a.a.createElement("span",null,l.AUTH_TYPE_LABEL_MAP[e]))));const r=[a.a.createElement(o.MenuItem,{key:l.AUTH_TYPE_RAW_NO_AUTH,refKey:l.AUTH_TYPE_RAW_NO_AUTH,disabled:t},a.a.createElement("span",null,l.AUTH_TYPE_NO_AUTH)),a.a.createElement(o.MenuItem,{key:l.AUTH_TYPE_RAW_APIKEY,refKey:l.AUTH_TYPE_RAW_APIKEY,disabled:t},a.a.createElement("span",null,l.AUTH_TYPE_APIKEY)),a.a.createElement(o.MenuItem,{key:l.AUTH_TYPE_RAW_BEARER_AUTH,refKey:l.AUTH_TYPE_RAW_BEARER_AUTH,disabled:t},a.a.createElement("span",null,l.AUTH_TYPE_BEARER_AUTH)),a.a.createElement(o.MenuItem,{key:l.AUTH_TYPE_RAW_BASIC_AUTH,refKey:l.AUTH_TYPE_RAW_BASIC_AUTH,disabled:t},a.a.createElement("span",null,l.AUTH_TYPE_BASIC_AUTH)),a.a.createElement(o.MenuItem,{key:l.AUTH_TYPE_RAW_DIGEST_AUTH,refKey:l.AUTH_TYPE_RAW_DIGEST_AUTH,disabled:t},a.a.createElement("span",null,l.AUTH_TYPE_DIGEST_AUTH)),a.a.createElement(o.MenuItem,{key:l.AUTH_TYPE_RAW_O_AUTH_1,refKey:l.AUTH_TYPE_RAW_O_AUTH_1,disabled:t},a.a.createElement("span",null,l.AUTH_TYPE_O_AUTH_1)),a.a.createElement(o.MenuItem,{key:l.AUTH_TYPE_RAW_O_AUTH_2,refKey:l.AUTH_TYPE_RAW_O_AUTH_2,disabled:t},a.a.createElement("span",null,l.AUTH_TYPE_O_AUTH_2)),a.a.createElement(o.MenuItem,{key:l.AUTH_TYPE_RAW_HAWK,refKey:l.AUTH_TYPE_RAW_HAWK,disabled:t},a.a.createElement("span",null,l.AUTH_TYPE_HAWK)),a.a.createElement(o.MenuItem,{key:l.AUTH_TYPE_RAW_AWS,refKey:l.AUTH_TYPE_RAW_AWS,disabled:t},a.a.createElement("span",null,l.AUTH_TYPE_AWS)),a.a.createElement(o.MenuItem,{key:l.AUTH_TYPE_RAW_NTLM_AUTH,refKey:l.AUTH_TYPE_RAW_NTLM_AUTH,disabled:t},a.a.createElement("span",null,l.AUTH_TYPE_NTLM_AUTH)),a.a.createElement(o.MenuItem,{key:l.AUTH_TYPE_RAW_AKAMAI_EDGEGRID,refKey:l.AUTH_TYPE_RAW_AKAMAI_EDGEGRID,disabled:t},a.a.createElement("span",null,l.AUTH_TYPE_AKAMAI_EDGEGRID))];return"collection"!==this.props.type?[a.a.createElement(o.MenuItem,{key:l.AUTH_TYPE_RAW_INHERIT,refKey:l.AUTH_TYPE_RAW_INHERIT,disabled:this.props.disableEdit},a.a.createElement("span",null,l.AUTH_TYPE_INHERIT)),...r]:r}render(){return a.a.createElement("div",{className:"auth-type-selector"},a.a.createElement("div",{className:"auth-type-selector__label"},a.a.createElement(i.Label,{type:"primary",color:"content-color-primary",text:"Type"})),a.a.createElement("div",{className:"auth-type-selector__value"},a.a.createElement(o.Dropdown,{onSelect:this.handleSelect,fullWidth:!0},a.a.createElement(o.DropdownButton,{type:"secondary",size:"small"},a.a.createElement(s.Button,null,a.a.createElement("span",null,l.AUTH_TYPE_LABEL_MAP[this.props.selectedAuthType]))),a.a.createElement(o.DropdownMenu,{fluid:!0},this.getMenu()))))}}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/auth/InheritedAuthInfo.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return c}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/@postman/aether/esmLib/index.js"),o=n("./runtime-repl/auth/AuthConstants.js"),s=n("./appsdk/components/link/Link.js");function l(t){return e.truncate(t,{length:o.ENTITY_NAME_MAX_LENGTH})}function c({inheritedAuth:t,authType:n,entityType:r,onInheritedAuthClick:c,inheritedAuthRouteConfig:u}){if(n!==o.AUTH_TYPE_RAW_INHERIT)return!1;if(!e.isEmpty(t)){const e=e=>{e.metaKey||e.ctrlKey||(e.preventDefault(),c())};return a.a.createElement("div",{className:"auth-no-auth-container"},a.a.createElement("span",null,a.a.createElement(i.Text,{type:"body-medium"},"This"," ",r," ","is using"," ",o.AUTH_TYPE_LABEL_MAP[t.type]," ","from"," ",t.entity.type," "),u?a.a.createElement(s.default,{className:"auth-parent-auth",onClick:e,to:u()},a.a.createElement(i.Text,{type:"link-default"},l(t.entity.name))):a.a.createElement("span",{className:"auth-parent-auth",onClick:c},a.a.createElement(i.Text,{type:"link-default"},l(t.entity.name))),t.entity.name.length>o.ENTITY_NAME_MAX_LENGTH?null:a.a.createElement("span",null,".")))}return a.a.createElement("div",{className:"auth-no-auth-container"},a.a.createElement("span",null,"This"," ",r," ","is not inheriting any authorization helper at the moment. Save it in a collection to use the parent's authorization helper."))}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/auth/OAuth1Editor.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return T}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/react-dom/index.js"),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("./js/components/base/Dropdowns.js"),c=n("./js/components/base/Buttons.js"),u=n("./js/components/base/Inputs.js"),d=n("./js/components/base/InfoButton.js"),h=n("./js/components/base/TextArea.js"),p=n("./js/components/base/FileInput.js"),m=n("./js/components/base/AutoSuggest/AutoSuggestInput.js"),f=n("./runtime-repl/auth/authUtil.js"),g=n("./js/stores/get-store.js"),b=n("./runtime-repl/auth/RequestOAuth1SignatureMethodConstants.js"),y=n("./runtime-repl/auth/AuthAdvancedToggle.js"),v=n("./runtime-repl/auth/AuthAdvancedDescription.js");class T extends r.Component{constructor(e){super(e),this.handlePrivateKeyFileSelect=this.handlePrivateKeyFileSelect.bind(this),this.actionMenuStore=Object(g.getStore)("ActionMenuStore")}getValue(e,t){return Object(f.getAuthValue)(this.props.oauth1,e,t)}handleFieldChange(e,t){"disableHeaderEncoding"===e&&(t=!t),this.props.onFieldChange&&this.props.onFieldChange(e,t)}handlePrivateKeyFileSelect(e){pm.runtime.readFile(e[0],((e,t)=>{if(e)return pm.toasts.error(e.message);this.handleFieldChange("privateKey",t.toString())}))}handleSelectionChange(e,t,n){const r=e&&Object(i.findDOMNode)(this.refs[e]);if(!t||!r)return this.actionMenuStore.clear();this.actionMenuStore.setActionMenuState(!0,r,t,n,"autoSuggest",this.handleFieldChange.bind(this,e))}render(){const{disableEdit:t}=this.props,n=e.includes(this.getValue("signatureMethod",b.SIGNATURE_METHOD_HMAC_SHA1),"RSA");return a.a.createElement("div",{className:"auth-o-auth-1-container"},a.a.createElement("div",{className:"auth-input-wrapper"},a.a.createElement("div",{className:"auth-input-group auth-input--signatureMethod"},a.a.createElement("div",{className:"auth-label"},"Signature Method",a.a.createElement(d.default,{tooltip:"The signature method the Consumer used to sign the request."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(l.Dropdown,{onSelect:this.handleFieldChange.bind(this,"signatureMethod")},a.a.createElement(l.DropdownButton,{type:"secondary",size:"small"},a.a.createElement(c.Button,null,a.a.createElement("span",null,this.getValue("signatureMethod",b.SIGNATURE_METHOD_HMAC_SHA1)))),a.a.createElement(l.DropdownMenu,{fluid:!0},a.a.createElement(l.MenuItem,{refKey:b.SIGNATURE_METHOD_HMAC_SHA1,disabled:t},a.a.createElement("span",null,b.SIGNATURE_METHOD_HMAC_SHA1)),a.a.createElement(l.MenuItem,{refKey:b.SIGNATURE_METHOD_HMAC_SHA256,disabled:t},a.a.createElement("span",null,b.SIGNATURE_METHOD_HMAC_SHA256)),a.a.createElement(l.MenuItem,{refKey:b.SIGNATURE_METHOD_HMAC_SHA512,disabled:t},a.a.createElement("span",null,b.SIGNATURE_METHOD_HMAC_SHA512)),a.a.createElement(l.MenuItem,{refKey:b.SIGNATURE_METHOD_RSA_SHA1,disabled:t},a.a.createElement("span",null,b.SIGNATURE_METHOD_RSA_SHA1)),a.a.createElement(l.MenuItem,{refKey:b.SIGNATURE_METHOD_RSA_SHA256,disabled:t},a.a.createElement("span",null,b.SIGNATURE_METHOD_RSA_SHA256)),a.a.createElement(l.MenuItem,{refKey:b.SIGNATURE_METHOD_RSA_SHA512,disabled:t},a.a.createElement("span",null,b.SIGNATURE_METHOD_RSA_SHA512)),a.a.createElement(l.MenuItem,{refKey:b.SIGNATURE_METHOD_HMAC_PLAINTEXT,disabled:t},a.a.createElement("span",null,b.SIGNATURE_METHOD_HMAC_PLAINTEXT)))))),a.a.createElement("div",{className:"auth-input-group auth-input--consumerKey"},a.a.createElement("div",{className:"auth-label"},"Consumer Key",a.a.createElement(d.default,{tooltip:"A value used by the Consumer to identify itself to the Service Provider."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Consumer Key",value:this.getValue("consumerKey"),onChange:this.handleFieldChange.bind(this,"consumerKey"),readOnly:t,ref:"consumerKey",onSelectionChange:this.handleSelectionChange.bind(this,"consumerKey")}))),!n&&a.a.createElement("div",{className:"auth-input-group auth-input--consumerSecret"},a.a.createElement("div",{className:"auth-label"},"Consumer Secret",a.a.createElement(d.default,{tooltip:"A secret used by the Consumer to establish ownership of the Consumer Key."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Consumer Secret",value:this.getValue("consumerSecret"),onChange:this.handleFieldChange.bind(this,"consumerSecret"),readOnly:t,ref:"consumerSecret",onSelectionChange:this.handleSelectionChange.bind(this,"consumerSecret")}))),a.a.createElement("div",{className:"auth-input-group auth-input--token"},a.a.createElement("div",{className:"auth-label"}," Access Token "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Access Token",value:this.getValue("token"),onChange:this.handleFieldChange.bind(this,"token"),readOnly:t,ref:"token",onSelectionChange:this.handleSelectionChange.bind(this,"token")}))),!n&&a.a.createElement("div",{className:"auth-input-group auth-input--tokenSecret"},a.a.createElement("div",{className:"auth-label"},"Token Secret",a.a.createElement(d.default,{tooltip:"A secret used by the Consumer to establish ownership of a given Token."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Token Secret",value:this.getValue("tokenSecret"),onChange:this.handleFieldChange.bind(this,"tokenSecret"),readOnly:t,ref:"tokenSecret",onSelectionChange:this.handleSelectionChange.bind(this,"tokenSecret")}))),n&&a.a.createElement(a.a.Fragment,null,a.a.createElement("div",{className:"auth-input-group auth-input--privateKey-file"},a.a.createElement("div",{className:"auth-label"},"Private Key",a.a.createElement(d.default,{tooltip:"RSA private key in PEM format for signing the request."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(p.default,{onSelect:this.handlePrivateKeyFileSelect,disabled:t}))),a.a.createElement("div",{className:"auth-input-group auth-input--privateKey"},a.a.createElement("div",{className:"auth-label"}),a.a.createElement("div",{className:"auth-input-dynamic"},a.a.createElement(h.default,{className:"oauth1-private-key-value",placeholder:"-----BEGIN RSA PRIVATE KEY-----\nprivate key in PEM format\n-----END RSA PRIVATE KEY-----",value:this.getValue("privateKey"),onChange:this.handleFieldChange.bind(this,"privateKey"),disabled:t})))),a.a.createElement("div",{className:"auth-form-group"},a.a.createElement(y.default,{isOpen:this.props.showAuthAdvancedFields,onToggleAdvancedFields:this.props.onToggleAdvancedFields})),this.props.showAuthAdvancedFields&&a.a.createElement("div",null,a.a.createElement(v.default,null),a.a.createElement("div",{className:"auth-input-group auth-input--callback"},a.a.createElement("div",{className:"auth-label"},"Callback URL",a.a.createElement(d.default,{tooltip:"An absolute URL where the service provider will redirect to after obtaining user authorization."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Callback URL",value:this.getValue("callback"),onChange:this.handleFieldChange.bind(this,"callback"),readOnly:t,ref:"callback",onSelectionChange:this.handleSelectionChange.bind(this,"callback")}))),a.a.createElement("div",{className:"auth-input-group auth-input--verifier"},a.a.createElement("div",{className:"auth-label"},"Verifier",a.a.createElement(d.default,{tooltip:"The verification code given by the service provider after obtaining user authorization."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Verifier",value:this.getValue("verifier"),onChange:this.handleFieldChange.bind(this,"verifier"),readOnly:t,ref:"verifier",onSelectionChange:this.handleSelectionChange.bind(this,"verifier")}))),a.a.createElement("div",{className:"auth-input-group auth-input--timestamp"},a.a.createElement("div",{className:"auth-label"}," Timestamp "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Timestamp",value:this.getValue("timestamp"),onChange:this.handleFieldChange.bind(this,"timestamp"),readOnly:t,ref:"timestamp",onSelectionChange:this.handleSelectionChange.bind(this,"timestamp")}))),a.a.createElement("div",{className:"auth-input-group auth-input--nonce"},a.a.createElement("div",{className:"auth-label"},"Nonce",a.a.createElement(d.default,{tooltip:"A random string generated by the client."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Nonce",value:this.getValue("nonce"),onChange:this.handleFieldChange.bind(this,"nonce"),readOnly:t,ref:"nonce",onSelectionChange:this.handleSelectionChange.bind(this,"nonce")}))),a.a.createElement("div",{className:"auth-input-group auth-input--version"},a.a.createElement("div",{className:"auth-label"}," Version "),a.a.createElement("div",{className:"auth-input"},a.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"e.g. 1.0",value:this.getValue("version"),onChange:this.handleFieldChange.bind(this,"version"),readOnly:t,ref:"version",onSelectionChange:this.handleSelectionChange.bind(this,"version")}))),a.a.createElement("div",{className:"auth-input-group auth-input--realm"},a.a.createElement("div",{className:"auth-label"},"Realm",a.a.createElement(d.default,{tooltip:"This is a string specified by the server in the WWW-Authenticate response header. It should contain at least the name of the host performing the authentication and might additionally indicate the collection of users who might have access."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"testrealm@example.com",value:this.getValue("realm"),onChange:this.handleFieldChange.bind(this,"realm"),readOnly:t,ref:"realm",onSelectionChange:this.handleSelectionChange.bind(this,"realm")}))),a.a.createElement("div",{className:"auth-input--add-empty-params-to-signature--wrapper"},a.a.createElement("div",{className:"auth-input-group auth-input--include-body-hash"},a.a.createElement("div",{className:"auth-input"},a.a.createElement(u.Checkbox,{checked:this.getValue("includeBodyHash",!1),onChange:this.handleFieldChange.bind(this,"includeBodyHash"),disabled:t}),a.a.createElement("span",{className:"auth-input__checkbox-label",onClick:this.handleFieldChange.bind(this,"includeBodyHash",!this.getValue("includeBodyHash",!1))},"Include body hash",a.a.createElement(d.default,{tooltip:"OAuth Request Body Hash extension provides support for request body integrity check for content types other than application/x-www-form-urlencoded. If this option is selected, the oauth_body_hash parameter will be calculated and added to the request."})))),a.a.createElement("div",{className:"auth-input-group auth-input--add-empty-params-to-signature"},a.a.createElement("div",{className:"auth-input"},a.a.createElement(u.Checkbox,{checked:this.getValue("addEmptyParamsToSign",!1),onChange:this.handleFieldChange.bind(this,"addEmptyParamsToSign"),disabled:t}),a.a.createElement("span",{className:"auth-input__checkbox-label",onClick:this.handleFieldChange.bind(this,"addEmptyParamsToSign",!this.getValue("addEmptyParamsToSign",!1))},"Add empty parameters to signature",a.a.createElement(d.default,{tooltip:"Some implementations of OAuth1.0 require empty parameters to be added to the signature. If this option is selected, any of the above fields which have been left empty will be included in the authorization data."})))),this.getValue("addParamsToHeader")&&a.a.createElement("div",{className:"auth-input-group auth-input--encode-auth-header-param"},a.a.createElement("div",{className:"auth-input"},a.a.createElement(u.Checkbox,{checked:!this.getValue("disableHeaderEncoding",!1),onChange:this.handleFieldChange.bind(this,"disableHeaderEncoding"),disabled:t}),a.a.createElement("span",{className:"auth-input__checkbox-label",onClick:this.handleFieldChange.bind(this,"disableHeaderEncoding",this.getValue("disableHeaderEncoding",!1))},"Encode the parameters in the Authorization header")))))))}}T.propTypes={oauth1:s.a.array.isRequired,onFieldChange:s.a.func.isRequired,onToggleAdvancedFields:s.a.func.isRequired,showAuthAdvancedFields:s.a.bool.isRequired}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/auth/OAuth2AdvancedGetAccessTokenFields.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return g}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/react-dom/index.js"),o=n("./node_modules/classnames/index.js"),s=n.n(o),l=n("../../node_modules/@postman/aether/esmLib/index.js"),c=n("./node_modules/uuid/v4.js"),u=n.n(c),d=n("./js/stores/get-store.js"),h=n("./js/components/base/Buttons.js"),p=n("./js/components/base/InfoButton.js"),m=n("./js/components/base/AutoSuggest/AutoSuggestInput.js");const f={authorization_code:"Authorization Code",authorization_code_with_pkce:"Authorization Code (With PKCE)",implicit:"Implicit",password_credentials:"Password Credentials",client_credentials:"Client Credentials"};class g extends r.Component{constructor(e){super(e),this.state={audience:{},resource:{}},this.handleFieldChange=this.handleFieldChange.bind(this),this.handleSelectionChange=this.handleSelectionChange.bind(this),this.handleAddAudience=this.handleAddAudience.bind(this),this.handleAddResource=this.handleAddResource.bind(this),this.handleRemoveAudience=this.handleRemoveAudience.bind(this),this.handleRemoveResource=this.handleRemoveResource.bind(this),this.handleAudienceInputChange=this.handleAudienceInputChange.bind(this),this.handleResourceInputChange=this.handleResourceInputChange.bind(this),this.actionMenuStore=Object(d.getStore)("ActionMenuStore")}componentDidMount(){const t=e.cloneDeep(this.props.oAuth2.audience),n=e.cloneDeep(this.props.oAuth2.resource);e.isEmpty(t)?this.handleAddAudience():this.setState({audience:t}),e.isEmpty(n)?this.handleAddResource():this.setState({resource:n})}getFieldClasses(e,t){return s()({[e]:!0,disabled:t})}getWrapperClassNames(e,t){return s()({[e]:!0,added:Object.keys(t).length>1})}getAudienceFields(){const e=this.state.audience,t=e&&Object.keys(e),{usingLocalTokenConfig:n}=this.props,r=this.props.disableEdit||n;return e?t.map((i=>a.a.createElement("div",{className:this.getWrapperClassNames("oauth2-advanced-fields__field-wrapper",e),key:i},a.a.createElement("div",{className:this.getFieldClasses("auth-input",n)},a.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Audience",value:e[i],readOnly:r,ref:i,onChange:e=>this.handleAudienceInputChange(i,e),onSelectionChange:this.handleSelectionChange.bind(this,i)})),t.length>1&&a.a.createElement(l.Button,{className:"oauth2-advanced-fields__field-wrapper__close-button",icon:"icon-action-close-stroke",type:"tertiary",size:"medium",onClick:()=>this.handleRemoveAudience(i)})))):null}getResourceFields(){const e=this.state.resource,t=e&&Object.keys(e),{usingLocalTokenConfig:n}=this.props,r=this.props.disableEdit||n;return e?t.map((i=>a.a.createElement("div",{className:this.getWrapperClassNames("oauth2-advanced-fields__field-wrapper",e),key:i},a.a.createElement("div",{className:this.getFieldClasses("auth-input",n)},a.a.createElement(m.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Resource",value:e[i],readOnly:r,ref:i,onChange:e=>this.handleResourceInputChange(i,e),onSelectionChange:this.handleSelectionChange.bind(this,i)})),t.length>1&&a.a.createElement(l.Button,{className:"oauth2-advanced-fields__field-wrapper__close-button",icon:"icon-action-close-stroke",type:"tertiary",size:"medium",onClick:()=>this.handleRemoveResource(i)})))):null}handleFieldChange(e,t){this.props.onFieldChange&&this.props.onFieldChange(e,t)}handleSelectionChange(e,t,n){const r=e&&Object(i.findDOMNode)(this.refs[e]);if(!t||!r)return this.actionMenuStore.clear();this.actionMenuStore.setActionMenuState(!0,r,t,n,"autoSuggest",this.handleFieldChange.bind(this,e))}handleAddAudience(){const t=e.cloneDeep(this.state.audience);if(t){t[u()()]="",this.setState({audience:t})}}handleAddResource(){const t=e.cloneDeep(this.state.resource);if(t){t[u()()]="",this.setState({resource:t})}}handleAudienceInputChange(t,n){const r=e.cloneDeep(this.props.oAuth2.audience),a=e.cloneDeep(this.state.audience);r&&(""===n?delete r[t]:r[t]=n,this.handleFieldChange("audience",r)),a&&(a[t]=n,this.setState({audience:a}))}handleResourceInputChange(t,n){const r=e.cloneDeep(this.props.oAuth2.resource),a=e.cloneDeep(this.state.resource);r&&(""===n?delete r[t]:r[t]=n,this.handleFieldChange("resource",r)),a&&(a[t]=n,this.setState({resource:a}))}handleRemoveAudience(t){const n=e.cloneDeep(this.props.oAuth2.audience),r=e.cloneDeep(this.state.audience);n&&(delete n[t],this.handleFieldChange("audience",n)),r&&(delete r[t],this.setState({audience:r}))}handleRemoveResource(t){const n=e.cloneDeep(this.props.oAuth2.resource),r=e.cloneDeep(this.state.resource);n&&(delete n[t],this.handleFieldChange("resource",n)),r&&(delete r[t],this.setState({resource:r}))}render(){const{oAuth2:e,usingLocalTokenConfig:t}=this.props,n=f[e.grant_type],r=this.props.disableEdit||t;return a.a.createElement(a.a.Fragment,null,(n===f.authorization_code||n===f.authorization_code_with_pkce||n===f.client_credentials)&&a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--resource"},a.a.createElement("div",{className:"auth-label"},a.a.createElement(l.Text,{type:"body-medium"},"Resource"),a.a.createElement(p.default,{tooltip:"A URI that indicates the resource/target service where the token is intended to be used."})),a.a.createElement("div",{className:"oauth2-advanced-fields"},this.getResourceFields(),a.a.createElement("div",{className:"oauth2-advanced-fields__add-field-button"},a.a.createElement(l.Button,{type:"secondary",text:"Add another resource",onClick:this.handleAddResource,isDisabled:r})))),a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--audience"},a.a.createElement("div",{className:"auth-label"},a.a.createElement(l.Text,{type:"body-medium"},"Audience"),a.a.createElement(p.default,{tooltip:"A URI that indicates the target audience/services where the token is intended to be used."})),a.a.createElement("div",{className:"oauth2-advanced-fields"},this.getAudienceFields(),a.a.createElement("div",{className:"oauth2-advanced-fields__add-field-button"},a.a.createElement(l.Button,{type:"secondary",text:"Add another audience",onClick:this.handleAddAudience,isDisabled:r})))),a.a.createElement("div",{className:"auth-oauth2-actions-group"},a.a.createElement(h.Button,{className:"auth-oauth2-actions__request-token",type:"primary",size:"small",onClick:this.props.onRequestToken},"Get New Access Token")))}}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/auth/OAuth2Editor.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return x}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/react-dom/index.js"),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("../../node_modules/@postman/aether/esmLib/index.js"),c=n("./node_modules/classnames/index.js"),u=n.n(c),d=n("./runtime-repl/auth/authUtil.js"),h=n("./js/components/base/Text.js"),p=n("./js/components/base/Buttons.js"),m=n("./js/components/base/InfoButton.js"),f=n("./js/components/base/AutoSuggest/AutoSuggestInput.js"),g=n("./js/components/base/Dropdowns.js"),b=n("./js/stores/get-store.js"),y=n("./js/modules/services/AnalyticsService.js"),v=n("./runtime-repl/auth/RequestOAuth2Constants.js"),T=n("./runtime-repl/auth/OAuth2GetAccessTokenTabsConstants.js"),A=n("./runtime-repl/auth/OAuth2GetAccessTokenFields.js"),E=n("./runtime-repl/auth/OAuth2AdvancedGetAccessTokenFields.js"),S=n("./runtime-repl/auth/OAuth2GetAccessTokenTabs.js"),C=n("./runtime-repl/auth/OAuth2GetAccessTokenTabContents.js"),k=n("./runtime-repl/auth/OAuth2GetAccessTokenTabContent.js");const I=["accessTokenUrl","client_authentication","addTokenTo","authUrl","clientId","clientSecret","grant_type","password","redirect_uri","scope","state","useBrowser","username","challengeAlgorithm","code_verifier","tokenName"],w=["resource","audience"];class x extends r.Component{constructor(e){super(e),this.model=pm.oAuth2Manager,this.state={savedOAuth2Tokens:this.model.get("savedOAuth2Tokens"),savedOAuth2Config:null,activeTab:T.CONFIGURATION_OPTIONS},this.handleFieldChange=this.handleFieldChange.bind(this),this.loadSavedOauth2Tokens=this.loadSavedOauth2Tokens.bind(this),this.loadSavedOauth2Config=this.loadSavedOauth2Config.bind(this),this.handleTokenDropdownSelect=this.handleTokenDropdownSelect.bind(this),this.handleRequestToken=this.handleRequestToken.bind(this),this.removeSyncedToken=this.removeSyncedToken.bind(this),this.syncCurrentToken=this.syncCurrentToken.bind(this),this.useSyncedToken=this.useSyncedToken.bind(this),this.handleUseToken=this.handleUseToken.bind(this),this.copyConfigToShared=this.copyConfigToShared.bind(this),this.handleTabSelect=this.handleTabSelect.bind(this),this.actionMenuStore=Object(b.getStore)("ActionMenuStore")}componentDidMount(){this.loadSavedOauth2Tokens(),this.loadSavedOauth2Config(),this.attachModelListeners()}componentWillUnmount(){this.detachModelListeners()}getLocalTokenConfig(){const e=pm.oAuth2Manager.get("oAuth2");return e.challengeAlgorithm=e.algorithm,e.tokenName=e.name,delete e.addTokenTo,e}getSavedTokenConfig(){const t=e.transform(this.state.savedOAuth2Config,((e,t)=>{e[t.key]=t.value}),{});return e.defaults(t,v.OAUTH2_CONFIG_DEFAULTS)}getSharedTokenConfig(){const t=e.transform(this.props.oAuth2,((e,t)=>{e[t.key]=t.value}),{});return e.defaults(t,v.OAUTH2_CONFIG_DEFAULTS)}getValue(t){if("headerPrefix"===t){const t=e.get(e.find(this.props.oAuth2,{key:"headerPrefix"}),"value");return e.isNil(t)?"Bearer":t}return Object(d.getAuthValue)(this.props.oAuth2,t)}getSessionValue(t){return"accessToken"===t?e.get(e.find(this.props.oAuth2Session,{key:"accessToken"}),"value"):Object(d.getAuthValue)(this.props.oAuth2Session,t)}getTokenConfigObject(){return this.useSharedTokenConfig()?this.getSharedTokenConfig():this.isSavedTokenConfigEmpty()?this.getLocalTokenConfig():this.getSavedTokenConfig()}attachModelListeners(){this.model.on("change",this.loadSavedOauth2Tokens),pm.mediator.on("savedAuthsUpdated",this.loadSavedOauth2Config)}detachModelListeners(){this.model.off("change",this.loadSavedOauth2Tokens),pm.mediator.off("savedAuthsUpdated",this.loadSavedOauth2Config)}loadSavedOauth2Tokens(){this.setState({savedOAuth2Tokens:this.model.get("savedOAuth2Tokens")})}loadSavedOauth2Config(e){e?this.setState({savedOAuth2Config:e.oauth2}):Object(d.getSavedAuths)((e=>{this.setState({savedOAuth2Config:e.oauth2})}))}handleFieldChange(t,n){"audience"!==t&&"resource"!==t||!e.isEmpty(n)?this.props.onFieldChange&&this.props.onFieldChange(t,n):this.handleFieldDelete(t)}handleFieldDelete(e){this.props.onFieldDelete&&this.props.onFieldDelete(e)}handleSessionFieldChange(e,t){this.props.onSessionFieldChange&&this.props.onSessionFieldChange(e,t)}handleTabSelect(e){this.setState({activeTab:e})}isSharedTokenConfigEmpty(){return e(this.props.oAuth2).map((e=>e.key)).without("accessToken","headerPrefix","addTokenTo","tokenType").isEmpty()}isLocalTokenConfigEmpty(){return!e(pm.oAuth2Manager.get("oAuth2")).some(((t,n)=>e.has(v.LEGACY_OAUTH2_DEFAULTS,n)&&t!==v.LEGACY_OAUTH2_DEFAULTS[n]))}isSavedTokenConfigEmpty(){return!e(this.getSavedTokenConfig()).some(((t,n)=>e.has(v.OAUTH2_CONFIG_DEFAULTS,n)&&t!==v.OAUTH2_CONFIG_DEFAULTS[n]))}useSharedTokenConfig(){const t=e.get(Object(b.getStore)("EditorStore").find(this.props.editorId),"model");return!(!t||t.getAdditionalData("isSavedRequest"))||!this.isSharedTokenConfigEmpty()||this.isLocalTokenConfigEmpty()&&this.isSavedTokenConfigEmpty()}copyConfigToShared(){const t=this.getTokenConfigObject();e.forEach(e.keys(v.OAUTH2_CONFIG_DEFAULTS),(e=>{t[e]&&this.handleFieldChange(e,t[e])}))}handleTokenDropdownSelect(e){switch(e){case"manage_tokens":this.openManageTokensModal();break;case"synced_token":this.useSyncedToken();break;default:this.props.onUseToken(e)}}handleUseToken(t){this.props.onUseToken&&this.props.onUseToken(t),e.invoke(this,"refs.access_token.scrollIntoView"),e.invoke(this,"refs.access_token.handleFocus"),pm.toasts.success("Access token added.")}openManageTokensModal(){pm.mediator.trigger("openManageTokensModal",null,this.handleUseToken)}handleRequestToken(){this.model.processOAuth2RequestToken(this.getTokenConfigObject(),this.props.collectionId,this.props.isTransient),pm.mediator.trigger("showTokenWaitingModal",this.handleUseToken,this.handleRequestToken),y.default.addEventV2AndPublish({category:"authorization",action:"get_access_token",label:"oauth2",entityType:this.props.entityType,entityId:this.props.entityId})}isTokenSynced(){const t=this.getValue("accessToken"),n=this.getSessionValue("accessToken");return t&&(t===n||e.isNil(n))}removeSyncedToken(){pm.mediator.trigger("showSyncTokenConfirmation",{action:"removeSyncedToken"},(()=>{this.handleFieldChange("accessToken",""),this.handleFieldChange("tokenType",""),y.default.addEventV2AndPublish({category:"authorization",action:"remove_synced_token",label:"oauth2",entityType:this.props.entityType,entityId:this.props.entityId})}))}syncCurrentToken(){pm.mediator.trigger("showSyncTokenConfirmation",{action:this.getValue("accessToken")?"replaceSyncedToken":"syncToken",saveBeforeSyncing:!this.canSyncToken(),editorId:this.props.editorId},(()=>{this.handleFieldChange("accessToken",this.getSessionValue("accessToken")),this.handleFieldChange("tokenType",this.getSessionValue("tokenType")),y.default.addEventV2AndPublish({category:"authorization",action:"sync_token",label:"oauth2",entityType:this.props.entityType,entityId:this.props.entityId})}))}useSyncedToken(){this.props.onUseToken({access_token:this.getValue("accessToken"),token_type:this.getValue("tokenType")})}canSyncToken(){const t=e.get(Object(b.getStore)("EditorStore").find(this.props.editorId),"model");return!t||t.getAdditionalData("isSavedRequest")}handleSelectionChange(e,t,n,r){const a=e&&Object(i.findDOMNode)(this.refs[e]);if(!n||!a)return this.actionMenuStore.clear();this.actionMenuStore.setActionMenuState(!0,a,n,r,"autoSuggest",t)}isConfigOptionsChanged(){const t=this.getTokenConfigObject();return!!t&&e(I).some((e=>t[e]!==v.OAUTH2_CONFIG_DEFAULTS[e]))}isAdvancedOptionsChanged(){const t=this.getTokenConfigObject();return!!t&&e(w).some((n=>!e.isEmpty(t[n])))}render(){const{disableEdit:t,entityType:n}=this.props,r=this.getSessionValue("accessToken"),i=e.isNil(r)?this.getValue("accessToken"):r;return a.a.createElement("div",{className:"auth-o-auth-2-container"},a.a.createElement("div",{className:"auth-input-wrapper"},a.a.createElement("div",{className:"oauth2-main-section-header"},a.a.createElement("div",null,"Current Token"),a.a.createElement("div",{className:"oauth2-main-section-header--sync-message "},r&&!this.isTokenSynced()&&"This access token is only available to you. Sync the token to let collaborators on this request use it.")),a.a.createElement("div",{className:"auth-input-group auth-input--token"},a.a.createElement("div",{className:"auth-label"}," Access Token "),a.a.createElement("div",{className:"auth-input-subgroup-wrapper"},a.a.createElement("div",{className:"auth-input-subgroup"},a.a.createElement("div",{className:u()({"auth-oauth2--use-existing-token":!0,"auth-input":!0})},a.a.createElement(g.Dropdown,{onSelect:this.handleTokenDropdownSelect},a.a.createElement(g.DropdownButton,{type:"secondary",size:"small"},a.a.createElement(p.Button,null,a.a.createElement("span",null,"Available Tokens"))),a.a.createElement(g.DropdownMenu,{fluid:!0},this.getValue("accessToken")&&a.a.createElement(g.MenuItem,{key:"synced_token",refKey:"synced_token"},a.a.createElement("div",{className:"auth-oauth2--shared-token"},"Shared token",a.a.createElement(l.Icon,{name:"icon-state-synced-stroke"}))),e.map(this.state.savedOAuth2Tokens,(e=>a.a.createElement(g.MenuItem,{key:e.id,refKey:e},a.a.createElement("span",null,e.name)))),e.isEmpty(this.state.savedOAuth2Tokens)&&!this.getValue("accessToken")&&a.a.createElement("div",{className:"auth-oauth2--no-tokens"},"No Tokens Available"),!e.isEmpty(this.state.savedOAuth2Tokens)&&a.a.createElement(g.MenuItem,{key:"manage_tokens",refKey:"manage_tokens"},a.a.createElement("div",{className:"auth-oauth2--manage-tokens"},"Manage Tokens"))))),a.a.createElement("div",{className:"auth-input"},a.a.createElement(f.AutoSuggestInput,{ref:"access_token",enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Access Token",value:i,allowFocus:!0,onChange:this.handleSessionFieldChange.bind(this,"accessToken"),onSelectionChange:this.handleSelectionChange.bind(this,"access_token",this.handleSessionFieldChange.bind(this,"accessToken"))}),this.isTokenSynced()?a.a.createElement(p.Button,{type:"icon",className:"oauth2-token_icon-wrapper--synced",tooltip:"Remove synced token",onClick:this.removeSyncedToken,disabled:t},a.a.createElement(l.Icon,{name:"icon-state-synced-stroke"})):a.a.createElement(p.Button,{type:"icon",className:"oauth2-token_icon-wrapper--not-synced",tooltip:"Sync token",onClick:this.syncCurrentToken,disabled:t||!i},a.a.createElement(l.Icon,{name:"icon-state-notSynced-stroke"})))))),a.a.createElement("div",{className:"auth-input-group auth-input--header-prefix"},a.a.createElement("div",{className:"auth-label"},"Header Prefix",a.a.createElement(m.default,{tooltip:"Added to the Authorization header before the access token."})),a.a.createElement("div",{className:"auth-input"},a.a.createElement(f.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"e.g. Bearer",value:this.getValue("headerPrefix"),onChange:this.handleFieldChange.bind(this,"headerPrefix"),readOnly:t,ref:"headerPrefix",onSelectionChange:this.handleSelectionChange.bind(this,"headerPrefix",this.handleFieldChange.bind(this,"headerPrefix"))}))),a.a.createElement("div",{className:"auth-form-title"},a.a.createElement(l.Heading,{type:"h4",text:"Configure New Token"})),!this.useSharedTokenConfig()&&a.a.createElement("div",{className:"oauth2-token-config-msg"},a.a.createElement("div",{className:"oauth2-token-config-msg__title"},a.a.createElement(h.default,{type:"heading-h6",value:"Some changes to the Token configurations"})),a.a.createElement("div",null,a.a.createElement(h.default,{type:"body-medium",value:`Token configuration settings are now shared as a part of the ${n}. The fields under reflect the last settings you used to configure an OAuth2.0 token. They are not shared with anyone just yet. You can still use these settings to generate a new access token. However, if you wish to edit them, they will be shared as a part of the ${n} and `}),a.a.createElement(h.default,{type:"heading-h5",value:`will be visible to everyone who can view this ${n}.`})),a.a.createElement(p.Button,{type:"primary",size:"small",className:"oauth2-token-config-msg__action",onClick:this.copyConfigToShared},"Edit token configuration")),a.a.createElement(S.default,{onSelect:this.handleTabSelect,activeTab:this.state.activeTab,isConfigOptionsChanged:this.isConfigOptionsChanged(),isAdvancedOptionsChanged:this.isAdvancedOptionsChanged()}),a.a.createElement(C.default,{activeKey:this.state.activeTab},a.a.createElement(k.default,{key:T.CONFIGURATION_OPTIONS},a.a.createElement(A.default,{oAuth2:this.getTokenConfigObject(),onFieldChange:this.handleFieldChange,onRequestToken:this.handleRequestToken,disableEdit:t,usingLocalTokenConfig:!this.useSharedTokenConfig()})),a.a.createElement(k.default,{key:T.ADVANCED_OPTIONS},a.a.createElement(E.default,{oAuth2:this.getTokenConfigObject(),onFieldChange:this.handleFieldChange,onRequestToken:this.handleRequestToken,disableEdit:t,usingLocalTokenConfig:!this.useSharedTokenConfig()})))))}}x.propTypes={oAuth2:s.a.array.isRequired,onFieldChange:s.a.func.isRequired,onUseToken:s.a.func.isRequired}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/auth/OAuth2GetAccessTokenFields.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return j}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/react-dom/index.js"),o=n("./node_modules/classnames/index.js"),s=n.n(o),l=n("../../node_modules/@postman/aether/esmLib/index.js"),c=n("./js/components/base/Buttons.js"),u=n("./js/components/base/InfoButton.js"),d=n("./js/components/base/PasswordInput.js"),h=n("./js/components/base/AutoSuggest/AutoSuggestInput.js"),p=n("./js/components/base/Dropdowns.js"),m=n("./js/components/base/Inputs.js"),f=n("./js/components/base/Tooltips.js"),g=n("./js/stores/get-store.js"),b=n("./js/utils/util.js"),y=n("./runtime-repl/auth/OAuth2URLConstants.js");const v={authorization_code:"Authorization Code",authorization_code_with_pkce:"Authorization Code (With PKCE)",implicit:"Implicit",password_credentials:"Password Credentials",client_credentials:"Client Credentials"},T={header:"Send as Basic Auth header",body:"Send client credentials in body"},A={S256:"SHA-256",plain:"Plain"},E="browser"===window.SDK_PLATFORM,S=/\{\{([^{}]*?)}}/,C=E?"https://oauth.pstmn.io/v1/browser-callback":"https://oauth.pstmn.io/v1/callback",k=[{rule:/^[A-Za-z0-9*-._%]+$/,message:"This field contains characters that might need to be percent-encoded depending on the authentication server. You can encode by right-clicking on this field.",type:"warning",invertRule:!0}],I=[{rule:/^[A-Za-z0-9-.~_]+$/,message:"This field contains characters which are not valid. Use the following valid characters: [A-Z] / [a-z] / [0-9] / “-” / “.” / “_” / “~”.",type:"error",invertRule:!0}],w=[{validator:e=>!e||e.length>=43&&e.length<=128,message:"The length must be within 43 to 128 characters long.",type:"error"}],x=[{validator:e=>!e||S.test(e),message:"Use variables instead to keep sensitive data secure.",type:"warning"}];class j extends r.Component{constructor(e){super(e),this.state={showCallbackTooltip:!1},this.getSuggestions=this.getSuggestions.bind(this),this.handleFieldChange=this.handleFieldChange.bind(this),this.handleClearCookies=this.handleClearCookies.bind(this),this.actionMenuStore=Object(g.getStore)("ActionMenuStore"),this.clearingCookies=!1}getSuggestions(t){return e.map(t,(e=>({value:e})))}getFieldClasses(e,t){return s()({[e]:!0,disabled:t})}handleClearCookies(){this.clearingCookies||(this.clearingCookies=!0,pm.runtime.clearAllOAuth2Cookies(b.default.getCookiePartition(),(e=>{this.clearingCookies=!1,e?pm.toasts.error("Cookies couldn’t be cleared. Try again.",{dedupeId:"oauth2-clear-cookie-error"}):pm.toasts.success("Cookies have been cleared successfully",{dedupeId:"oauth2-clear-cookie-success"})})))}handleFieldChange(e,t){this.props.onFieldChange&&this.props.onFieldChange(e,t)}handleSelectionChange(e,t,n){const r=e&&Object(i.findDOMNode)(this.refs[e]);if(!t||!r)return this.actionMenuStore.clear();this.actionMenuStore.setActionMenuState(!0,r,t,n,"autoSuggest",this.handleFieldChange.bind(this,e))}render(){const{oAuth2:e,usingLocalTokenConfig:t}=this.props,n=v[e.grant_type],r=n===v.client_credentials?k:void 0,i=n===v.authorization_code_with_pkce?I:void 0,o=n===v.authorization_code_with_pkce?w:void 0;E&&(e.useBrowser=!0);const s=this.props.disableEdit||t;return a.a.createElement(a.a.Fragment,null,a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--token-name"},a.a.createElement("div",{className:"auth-label"},"Token Name"),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t)},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Enter a token name...",value:e.tokenName,onChange:this.handleFieldChange.bind(this,"tokenName"),readOnly:s,ref:"tokenName",onSelectionChange:this.handleSelectionChange.bind(this,"tokenName")}))),a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--grant-type"},a.a.createElement("div",{className:"auth-label"},"Grant Type"),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t)},a.a.createElement(p.Dropdown,{onSelect:this.handleFieldChange.bind(this,"grant_type")},a.a.createElement(p.DropdownButton,{size:"small",type:"secondary"},a.a.createElement(c.Button,null,a.a.createElement("span",null,v[e.grant_type]))),a.a.createElement(p.DropdownMenu,{fluid:!0},a.a.createElement(p.MenuItem,{refKey:"authorization_code",disabled:s},a.a.createElement("span",null,v.authorization_code)),a.a.createElement(p.MenuItem,{refKey:"authorization_code_with_pkce",disabled:s},a.a.createElement("span",null,v.authorization_code_with_pkce)),a.a.createElement(p.MenuItem,{refKey:"implicit",disabled:s},a.a.createElement("span",null,v.implicit)),a.a.createElement(p.MenuItem,{refKey:"password_credentials",disabled:s},a.a.createElement("span",null,v.password_credentials)),a.a.createElement(p.MenuItem,{refKey:"client_credentials",disabled:s},a.a.createElement("span",null,v.client_credentials)))))),(n===v.authorization_code||n===v.authorization_code_with_pkce||n===v.implicit)&&a.a.createElement(a.a.Fragment,null,a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--callback-url"},a.a.createElement("div",{className:"auth-label"},"Callback URL",a.a.createElement(u.default,{tooltip:"This is the callback URL that you will be redirected to, after your application is authorized. Postman uses this to extract the authorization code or access token. The callback URL should match the one you use during the application registration process."})),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t||e.useBrowser),onMouseEnter:()=>this.setState({showCallbackTooltip:!0}),onMouseLeave:()=>this.setState({showCallbackTooltip:!1}),ref:"callback"},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"http://your-application.com/registered/callback",value:e.useBrowser?C:e.redirect_uri,onChange:this.handleFieldChange.bind(this,"redirect_uri"),readOnly:s||e.useBrowser,ref:"redirect_uri",onSelectionChange:this.handleSelectionChange.bind(this,"redirect_uri")}),e.useBrowser&&a.a.createElement(f.Tooltip,{immediate:!0,show:this.state.showCallbackTooltip,placement:"bottom",target:this.refs.callback},a.a.createElement(f.TooltipBody,null,"The callback URL cannot be modified when authenticating via the browser.")))),!E&&a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--use-browser"},a.a.createElement("div",{className:"auth-label"}),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t)},a.a.createElement(m.Checkbox,{checked:e.useBrowser,onChange:this.handleFieldChange.bind(this,"useBrowser"),disabled:s}),a.a.createElement("span",{className:"checkbox-label"},"Authorize using browser")))),(n===v.authorization_code||n===v.authorization_code_with_pkce||n===v.implicit)&&a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--oauth2-url"},a.a.createElement("div",{className:"auth-label"},"Auth URL",a.a.createElement(u.default,{tooltip:"The endpoint for authorization server. This is used to get the authorization code."})),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t)},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"https://example.com/login/oauth/authorize",suggestions:this.getSuggestions(y.oAuth2AuthorizationUrls),value:e.authUrl,onChange:this.handleFieldChange.bind(this,"authUrl"),readOnly:s,ref:"authUrl",onSelectionChange:this.handleSelectionChange.bind(this,"authUrl")}))),n!==v.implicit&&a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--token-url"},a.a.createElement("div",{className:"auth-label"},"Access Token URL",a.a.createElement(u.default,{tooltip:"The endpoint for authentication server. This is used to exchange the authorization code for an access token."})),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t)},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"https://example.com/login/oauth/access_token",suggestions:this.getSuggestions(y.oAuth2TokenUrls),value:e.accessTokenUrl,onChange:this.handleFieldChange.bind(this,"accessTokenUrl"),readOnly:s,ref:"accessTokenUrl",onSelectionChange:this.handleSelectionChange.bind(this,"accessTokenUrl")}))),a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--client-id"},a.a.createElement("div",{className:"auth-label"},"Client ID",a.a.createElement(u.default,{tooltip:"The client identifier issued to the client during the Application registration process."})),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t)},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Client ID",value:e.clientId,onChange:this.handleFieldChange.bind(this,"clientId"),highlight:r,validation:x,readOnly:s,ref:"clientId",onSelectionChange:this.handleSelectionChange.bind(this,"clientId")}))),n!==v.implicit&&a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--client-secret"},a.a.createElement("div",{className:"auth-label"},"Client Secret",a.a.createElement(u.default,{tooltip:"The client secret issued to the client during the Application registration process."})),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t)},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Client Secret",value:e.clientSecret,onChange:this.handleFieldChange.bind(this,"clientSecret"),highlight:r,validation:x,readOnly:s,ref:"clientSecret",onSelectionChange:this.handleSelectionChange.bind(this,"clientSecret")}))),n===v.password_credentials&&a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--username"},a.a.createElement("div",{className:"auth-label"},"Username"),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t)},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Username",value:e.username,onChange:this.handleFieldChange.bind(this,"username"),validation:x,readOnly:s,ref:"username",onSelectionChange:this.handleSelectionChange.bind(this,"username")}))),n===v.password_credentials&&a.a.createElement("div",null,a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--password"},a.a.createElement("div",{className:"auth-label"},"Password"),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t)},a.a.createElement(d.default,{enableVariableSuggestions:!0,className:"auth-oauth2-input--password",inputStyle:"box",placeholder:"Password",value:e.password,onChange:this.handleFieldChange.bind(this,"password"),validation:x,readOnly:s})))),n===v.authorization_code_with_pkce&&a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--algorithm"},a.a.createElement("div",{className:"auth-label"},"Code Challenge Method",a.a.createElement(u.default,{tooltip:"Algorithm used for generating the Code Challenge."})),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t)},a.a.createElement(p.Dropdown,{onSelect:this.handleFieldChange.bind(this,"challengeAlgorithm")},a.a.createElement(p.DropdownButton,{size:"small",type:"secondary"},a.a.createElement(c.Button,null,a.a.createElement("span",null,A[e.challengeAlgorithm]))),a.a.createElement(p.DropdownMenu,{fluid:!0},a.a.createElement(p.MenuItem,{refKey:"S256",disabled:s},a.a.createElement("span",null,A.S256)),a.a.createElement(p.MenuItem,{refKey:"plain",disabled:s},a.a.createElement("span",null,A.plain)))))),n===v.authorization_code_with_pkce&&a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--code-verifier"},a.a.createElement("div",{className:"auth-label"},"Code Verifier",a.a.createElement(u.default,{tooltip:"A random, 43-128 character string used to connect the authorization request to the token request. Uses the following characters: [A-Z] / [a-z] / [0-9] / “-” / “.” / “_” / “~”."})),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t)},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"Automatically generated if left blank",value:e.code_verifier,onChange:this.handleFieldChange.bind(this,"code_verifier"),highlight:i,validation:o,readOnly:s,ref:"code_verifier",onSelectionChange:this.handleSelectionChange.bind(this,"code_verifier")}))),a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--scope"},a.a.createElement("div",{className:"auth-label"},"Scope",a.a.createElement(u.default,{tooltip:"The scope of the access request. It may have multiple space-delimited values."})),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t)},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"e.g. read:org",value:e.scope,onChange:this.handleFieldChange.bind(this,"scope"),readOnly:s,ref:"scope",onSelectionChange:this.handleSelectionChange.bind(this,"scope")}))),(n===v.authorization_code||n===v.authorization_code_with_pkce||n===v.implicit)&&a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--state"},a.a.createElement("div",{className:"auth-label"},"State",a.a.createElement(u.default,{tooltip:"An opaque value that is used for preventing cross-site request forgery."})),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t)},a.a.createElement(h.AutoSuggestInput,{enableVariableSuggestions:!0,inputStyle:"box",placeholder:"State",value:e.state,onChange:this.handleFieldChange.bind(this,"state"),readOnly:s,ref:"state",onSelectionChange:this.handleSelectionChange.bind(this,"state")}))),a.a.createElement("div",{className:"auth-input-group auth-oauth2-input--client-authentication"},a.a.createElement("div",{className:"auth-label"},"Client Authentication"),a.a.createElement("div",{className:this.getFieldClasses("auth-input",t)},a.a.createElement(p.Dropdown,{onSelect:this.handleFieldChange.bind(this,"client_authentication")},a.a.createElement(p.DropdownButton,{size:"small",type:"secondary"},a.a.createElement(c.Button,null,a.a.createElement("span",null,T[e.client_authentication]))),a.a.createElement(p.DropdownMenu,{fluid:!0},a.a.createElement(p.MenuItem,{refKey:"header",disabled:s},a.a.createElement("span",null,T.header)),a.a.createElement(p.MenuItem,{refKey:"body",disabled:s},a.a.createElement("span",null,T.body)))))),a.a.createElement("div",{className:"auth-oauth2-actions-group"},"browser"!==window.SDK_PLATFORM&&a.a.createElement("div",{className:"auth-oauth2-actions-group__clear-cookies"},a.a.createElement(c.Button,{type:"secondary",size:"small",onClick:this.handleClearCookies},a.a.createElement(l.Icon,{name:"icon-descriptive-cookie-stroke",color:"content-color-primary",size:"small",className:"auth-oauth2-actions-group__clear-cookies__icon"}),"Clear cookies"),a.a.createElement(u.default,{tooltipPlacement:"top",tooltip:"Clear all cookies from previous OAuth 2.0 sessions."})),a.a.createElement(c.Button,{className:"auth-oauth2-actions__request-token",type:"primary",size:"small",onClick:this.props.onRequestToken},"Get New Access Token")))}}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/auth/OAuth2GetAccessTokenTabContent.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return s}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("./node_modules/classnames/index.js"),o=n.n(i);class s extends r.Component{getClasses(){return o()({"oauth2-tab-content":!0,"is-hidden":!this.props.active},this.props.className)}render(){return a.a.createElement("div",{className:this.getClasses()},this.props.children)}}},"./runtime-repl/auth/OAuth2GetAccessTokenTabContents.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n("../../node_modules/react/index.js"),a=n.n(r);function i({activeKey:e,children:t}){return a.a.createElement("div",{className:"oauth2-tab-contents"},a.a.Children.map(t,(t=>a.a.cloneElement(t,{active:e===t.key}))))}},"./runtime-repl/auth/OAuth2GetAccessTokenTabs.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("./runtime-repl/_common/components/EntityEditorTabs.js"),o=n("./runtime-repl/_common/ListTypeConstants.js"),s=n("./runtime-repl/auth/OAuth2GetAccessTokenTabsConstants.js");class l extends r.Component{getMeta(e){return e&&a.a.createElement("div",{className:"oauth2-access-token-tabs-badge"})}getTabsList(){return[{refKey:s.CONFIGURATION_OPTIONS,label:"Configuration Options",getBadge:()=>this.getMeta(this.props.isConfigOptionsChanged)},{refKey:s.ADVANCED_OPTIONS,label:"Advanced Options",getBadge:()=>this.getMeta(this.props.isAdvancedOptionsChanged)}]}render(){return a.a.createElement(i.default,{className:"oauth2-get-access-token-tabs",activeTab:this.props.activeTab,tabsList:this.getTabsList(),tabsListType:o.HORIZONTAL_LIST,onTabSelect:this.props.onSelect})}}l.defaultProps={isConfigOptionsChanged:!1,isAdvancedOptionsChanged:!1}},"./runtime-repl/auth/OAuth2GetAccessTokenTabsConstants.js":function(e,t,n){"use strict";n.r(t),n.d(t,"CONFIGURATION_OPTIONS",(function(){return r})),n.d(t,"ADVANCED_OPTIONS",(function(){return a}));const r="configuration-options",a="advanced-options"},"./runtime-repl/auth/OAuth2URLConstants.js":function(e,t,n){"use strict";n.r(t),n.d(t,"oAuth2AuthorizationUrls",(function(){return r})),n.d(t,"oAuth2TokenUrls",(function(){return a}));const r=["https://accounts.google.com/o/oauth2/auth","https://github.com/login/oauth/authorize","https://www.box.com/api/oauth2/authorize","https://api.createsend.com/oauth?type=web_server","https://foursquare.com/oauth2/authenticate","https://launchpad.37signals.com/authorization/new?type=web_server","https://secure.meetup.com/oauth2/authorize","https://soundcloud.com/connect","https://login.live.com/oauth20_authorize.srf","https://login.uber.com/oauth/v2/authorize","https://angel.co/api/oauth/authorize","https://app.asana.com/-/oauth_authorize","https://bitbucket.org/api/1.0/oauth/authenticate","https://www.dropbox.com/1/oauth2/authorize","https://accounts.spotify.com/authorize"],a=["https://accounts.google.com/o/oauth2/token","https://github.com/login/oauth/access_token","https://www.box.com/api/oauth2/token","https://api.createsend.com/oauth/token","https://foursquare.com/oauth2/access_token","https://launchpad.37signals.com/authorization/token","https://secure.meetup.com/oauth2/access","https://api.soundcloud.com/oauth2/token","https://login.live.com/oauth20_token.srf","https://login.uber.com/oauth/v2/token","https://angel.co/api/oauth/token","https://app.asana.com/-/oauth_authorize","https://bitbucket.org/api/1.0/oauth/access_token","https://www.dropbox.com/1/oauth2/authorize","https://accounts.spotify.com/api/token"]},"./runtime-repl/auth/RequestDigestAuthConstants.js":function(e,t,n){"use strict";n.r(t),n.d(t,"ALGORITHM",(function(){return r}));const r={MD5:"MD5",MD5_SESS:"MD5-sess",SHA_256:"SHA-256",SHA_256_SESS:"SHA-256-sess",SHA_512_256:"SHA-512-256",SHA_512_256_SESS:"SHA-512-256-sess"}},"./runtime-repl/auth/RequestHawkAuthConstants.js":function(e,t,n){"use strict";n.r(t),n.d(t,"ALGORITHM",(function(){return r}));const r={SHA_1:"sha1",SHA_256:"sha256"}},"./runtime-repl/auth/RequestOAuth1SignatureMethodConstants.js":function(e,t,n){"use strict";n.r(t),n.d(t,"SIGNATURE_METHOD_HMAC_SHA1",(function(){return r})),n.d(t,"SIGNATURE_METHOD_HMAC_SHA256",(function(){return a})),n.d(t,"SIGNATURE_METHOD_HMAC_SHA512",(function(){return i})),n.d(t,"SIGNATURE_METHOD_RSA_SHA1",(function(){return o})),n.d(t,"SIGNATURE_METHOD_RSA_SHA256",(function(){return s})),n.d(t,"SIGNATURE_METHOD_RSA_SHA512",(function(){return l})),n.d(t,"SIGNATURE_METHOD_HMAC_PLAINTEXT",(function(){return c}));const r="HMAC-SHA1",a="HMAC-SHA256",i="HMAC-SHA512",o="RSA-SHA1",s="RSA-SHA256",l="RSA-SHA512",c="PLAINTEXT"},"./runtime-repl/auth/RequestOAuth2Constants.js":function(e,t,n){"use strict";n.r(t),n.d(t,"ADD_TOKEN_TO",(function(){return r})),n.d(t,"OAUTH2_CONFIG_DEFAULTS",(function(){return a})),n.d(t,"LEGACY_OAUTH2_DEFAULTS",(function(){return i}));const r={HEADER:"header",QUERY_PARAMS:"queryParams"},a={accessTokenUrl:"",client_authentication:"header",addTokenTo:"header",authUrl:"",clientId:"",clientSecret:"",grant_type:"authorization_code",password:"",redirect_uri:"",scope:"",state:"",useBrowser:!1,username:"",challengeAlgorithm:"S256",code_verifier:"",tokenName:"",audience:{},resource:{}},i={accessTokenUrl:"",addTokenTo:"header",client_authentication:"header",authUrl:"",clientId:"",clientSecret:"",grant_type:"authorization_code",name:"Token Name",password:"",redirect_uri:"",scope:"",state:"",useBrowser:!1,username:"",algorithm:"S256",code_verifier:"",audience:{},resource:{}}},"./runtime-repl/auth/authUtil.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"getAuthValue",(function(){return d})),n.d(t,"getDefaultAuthProps",(function(){return h})),n.d(t,"setAuthValue",(function(){return p})),n.d(t,"setAuthValues",(function(){return m})),n.d(t,"deleteAuthValue",(function(){return f})),n.d(t,"updateSavedAuths",(function(){return g})),n.d(t,"getSavedAuths",(function(){return b})),n.d(t,"getInheritedAuth",(function(){return y}));var r=n("./js/modules/services/ModelService.js"),a=n("./runtime-repl/auth/RequestOAuth2Constants.js"),i=n("./runtime-repl/auth/RequestHawkAuthConstants.js"),o=n("./runtime-repl/auth/RequestDigestAuthConstants.js"),s=n("./runtime-repl/auth/RequestOAuth1SignatureMethodConstants.js"),l=n("./runtime-repl/auth/AuthConstants.js");const c={[l.AUTH_TYPE_RAW_DIGEST_AUTH]:[{key:"algorithm",value:o.ALGORITHM.MD5}],[l.AUTH_TYPE_RAW_HAWK]:[{key:"algorithm",value:i.ALGORITHM.SHA_256}],[l.AUTH_TYPE_RAW_O_AUTH_1]:[{key:"signatureMethod",value:s.SIGNATURE_METHOD_HMAC_SHA1},{key:"version",value:"1.0"},{key:"addParamsToHeader",value:!1},{key:"addEmptyParamsToSign",value:!1}],[l.AUTH_TYPE_RAW_O_AUTH_2]:[{key:"addTokenTo",value:a.ADD_TOKEN_TO.HEADER}]};function u(t){const n=e.cloneDeep(t)||{};return e.forEach(l.BLACKLIST_AUTH_MEMORY_FIELDS,((t,r)=>{n[r]=e.filter(n[r],(e=>!t[e.key]))})),n}function d(t,n,r=""){return e.isEmpty(t)&&e.isEmpty(r)?"":e.get(e.find(t,{key:n}),"value",r)}function h(e){return c[e]||[]}function p(t,n,r,a){const i=e.cloneDeep(e.get(t,[n],[])),o={key:r,value:a};return e.unionBy([o],i,"key")}function m(t,n,r){const a=e.cloneDeep(e.get(t,[n],[])),i=[];return e.forEach(r,((e,t)=>{i.push({key:t,value:e})})),e.unionBy(i,a,"key")}function f(t,n,r){const a=e.cloneDeep(e.get(t,[n],[]));return e.remove(a,(e=>e.key!==r))}function g(e){const t={id:"auth",auth:u(e)};r.default.findOne("authhelperstate",{id:"auth"}).then((e=>e?r.default.update("authhelperstate",t).then((()=>{pm.mediator.trigger("savedAuthsUpdated",t.auth)})):r.default.create("authhelperstate",t).then((()=>{pm.mediator.trigger("savedAuthsUpdated",t.auth)})))).catch((e=>{pm.logger.error("Error in updating saved helper",e)}))}function b(t){r.default.findOne("authhelperstate",{id:"auth"}).then(((n={})=>{e.isFunction(t)&&t(u(n.auth))})).catch((()=>{pm.logger.error("Error in fetching saved helper")}))}function y(t,n,r){if(e.isEmpty(t)||e.isEmpty(n)||!e.includes(["folder","request","collection"],r))return null;let a=e.get(t,"requests",[]),i=e.get(t,"folders",[]),o=n,s=null;if("collection"===r)return{entity:{id:t.id,type:"collection",name:t.name},type:e.isEmpty(t.auth)?l.AUTH_TYPE_RAW_NO_AUTH:t.auth.type};if("request"===r){const r=e.find(a,["id",n]);if(e.isEmpty(e.get(r,"folder")))return{entity:{id:t.id,type:"collection",name:t.name},type:e.isEmpty(t.auth)?l.AUTH_TYPE_RAW_NO_AUTH:t.auth.type};o=r.folder}let c={};if("folder"===r&&(o=e.get(e.find(i,["id",o]),"folder")),o)do{if(c=e.find(i,["id",o]),!e.isEmpty(e.get(c,"auth"))){s={entity:{id:c.id,type:"folder",name:c.name},type:c.auth.type};break}o=e.get(c,"folder")}while(!e.isEmpty(e.get(c,"folder")));return e.isEmpty(s)&&(s={entity:{id:t.id,type:"collection",name:t.name},type:e.isEmpty(t.auth)?l.AUTH_TYPE_RAW_NO_AUTH:t.auth.type}),s}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/collection/CollectionConfigurationList.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return p}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),s=n("./runtime-repl/agent/AgentConstants.js"),l=n("./runtime-repl/_common/components/ArtemisEmptyState/ArtemisEmptyState.js"),c=n("./js/modules/services/AnalyticsService.js"),u=n("./runtime-repl/request-http/ConfigurationConstants.js"),d=n("./js/utils/configurationsUtil.js"),h=n("./runtime-repl/_common/components/configuration-list-item/ConfigurationListItem.js");let p=Object(o.observer)(r=class extends a.Component{handleFieldChange(e,t){if(this.props.updateProtocolProfileBehavior&&this.props.updateProtocolProfileBehavior(e,t),"disableUrlEncoding"===e){const e=t?"set_encoding_false":"set_encoding_true";c.default.addEvent("request",e,"setting_modal",1)}}handleRestoreDefault(e){this.props.removeKeyFromProtocolProfileBehavior&&this.props.removeKeyFromProtocolProfileBehavior(e)}render(){if(e.get(pm.runtime,"agent.stat.type")===s.TYPES.XHR)return i.a.createElement(l.default,{className:"collection-configuration-unavailable",title:"Collection settings unavailable",message:"Postman uses the browser's default settings for sending requests. Switch to the desktop agent to customize your collection further."});const t=Object(d.getCollectionInheritedState)();return i.a.createElement("div",{className:"collection-configuration-list"},e.map(u.CONFIGURATIONS,(n=>i.a.createElement(h.default,{key:n.id,title:n.title,description:n.description,value:e.get(this.props.configuration,[n.id]),inheritedState:e.get(t,[n.id]),defaultValue:n.defaultValue,inputFieldType:n.inputFieldType,inputType:n.inputType,handleFieldChange:this.handleFieldChange.bind(this,n.id),handleRestoreDefault:this.handleRestoreDefault.bind(this,n.id),menuOptions:n.menuOptions,menuLabels:n.menuLabels}))))}})||r}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/collection/CollectionEditorTabs.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return p}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("./runtime-repl/_common/components/EntityEditorTabs.js"),o=n("./runtime-repl/_common/ListTypeConstants.js"),s=n("./js/stores/get-store.js"),l=n("./js/stores/StoreManager.js"),c=n("./collaboration/workspace/model/ActiveWorkspaceBaseStore.ts"),u=n("./onboarding/src/common/LaunchDarkly.js"),d=n("./runtime-repl/collection/CollectionModalTabsConstants.js"),h=n("./runtime-repl/collection/experiments.ts");class p extends r.Component{getMeta(e){return e&&a.a.createElement("div",{className:"collection-modal-tabs-badge"})}getTabsList(){const t=Object(s.getStore)("FeatureFlagsStore").isEnabled("collectionAndFolderConfigurations"),{isEnabledForTeam:n,isEnabledForPublicWorkspace:r}=u.launchDarkly.getFlag(h.SHOW_RUN_HISTORY.key,h.SHOW_RUN_HISTORY.defaultValue),a=e.get(Object(l.resolveStoreInstance)(c.default),"visibilityStatus","personal"),i=n&&("public"!==a||r),o=[{refKey:d.COLLECTION_AUTHORIZATION,label:"Authorization",shortLabel:"Auth",XPathIdentifier:"authorizationTab",getBadge:()=>this.getMeta(this.props.isAuthSelected)},{refKey:d.COLLECTION_PRE_REQUEST_SCRIPTS,label:"Pre-request Script",shortLabel:"Pre-req.",XPathIdentifier:"preRequestTab",getBadge:()=>this.getMeta(this.props.isPreRequestScriptAvailable)},{refKey:d.COLLECTION_TESTS,label:"Tests",XPathIdentifier:"testsTab",getBadge:()=>this.getMeta(this.props.isTestsAvailable)},{refKey:d.COLLECTION_VARIABLES,label:"Variables",XPathIdentifier:"variablesTab",getBadge:()=>this.getMeta(this.props.hasVariables)}];return i&&o.push({refKey:d.COLLECTION_RUN_REPORTS,label:"Run History",XPathIdentifier:"runHistoryTab",getBadge:()=>this.getMeta(!1)}),t&&o.push({refKey:d.COLLECTION_CONFIGURATIONS,label:"Settings",getBadge:()=>this.getMeta(!1)}),o}render(){let e=o.HORIZONTAL_LIST;return this.props.width<400?e=o.DROPDOWN:this.props.width<530&&(e=o.SHORT_HORIZONTAL_LIST),a.a.createElement(i.default,{activeTab:this.props.activeTab,tabsList:this.getTabsList(),tabsListType:e,onTabSelect:this.props.onSelect,className:"collection-editor-tabs"})}}p.defaultProps={isAuthSelected:!1,isPreRequestScriptAvailable:!1,isTestsAvailable:!1,hasVariables:!1}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/collection/CollectionModalTabContent.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return s}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("./node_modules/classnames/index.js"),o=n.n(i);class s extends r.Component{getClasses(){return o()({"collection-modal-tab-content":!0,"is-hidden":!this.props.active},this.props.className)}render(){const e=this.getClasses();return a.a.createElement("div",{className:e},this.props.children)}}},"./runtime-repl/collection/CollectionModalTabContents.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n("../../node_modules/react/index.js"),a=n.n(r);class i extends r.PureComponent{render(){const e=a.a.Children.map(this.props.children,(e=>a.a.cloneElement(e,{active:this.props.activeKey===e.key})));return a.a.createElement("div",{className:"collection-modal-tab-contents"},e)}}},"./runtime-repl/collection/CollectionPreRequestScripts.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return h}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/@postman/aether/esmLib/index.js"),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("./runtime-repl/scripts/SnippetsConstants.js"),c=n("./js/constants/AppUrlConstants.js"),u=n("./runtime-repl/scripts/ScriptEditorContainer.js"),d=n("./appsdk/components/link/Link.js");class h extends a.a.Component{constructor(e){super(e),this.editorRef=a.a.createRef()}focus(){this.editorRef.focus()}refresh(){this.editorRef.refresh()}render(){return a.a.createElement("div",{className:"collection-modal-tab-content-container"},a.a.createElement("div",{className:"collection-modal-tab-content-description"},"This script will execute before every request in this collection. ",a.a.createElement(d.default,{className:"external-link",to:c.PRE_REQUEST_SCRIPT_DOCS,target:"_blank"},a.a.createElement(i.Text,{type:"link-primary",isExternal:!0},"Learn more about Postman’s execution order."))),a.a.createElement(u.default,{type:l.SNIPPETS_PROP_PRSCRIPT,ref:this.editorRef,value:this.props.value,onChange:this.props.onChange,commentMode:!1,parent:"collection",model:this.props.model,readOnly:!1===this.props.canEditCollection}))}}h.contextTypes={variablesCache:s.a.object}},"./runtime-repl/collection/CollectionTests.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return f}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("./node_modules/pure-render-decorator/index.js"),s=n.n(o),l=n("../../node_modules/@postman/aether/esmLib/index.js"),c=n("./node_modules/prop-types/index.js"),u=n.n(c),d=n("./runtime-repl/scripts/SnippetsConstants.js"),h=n("./js/constants/AppUrlConstants.js"),p=n("./runtime-repl/scripts/ScriptEditorContainer.js"),m=n("./appsdk/components/link/Link.js");let f=s()(r=class extends i.a.Component{constructor(e){super(e),this.editorRef=i.a.createRef()}focus(){this.editorRef.focus()}refresh(){this.editorRef.refresh()}render(){return i.a.createElement("div",{className:"collection-modal-tab-content-container"},i.a.createElement("div",{className:"collection-modal-tab-content-description"},"These tests will execute after every request in this collection. ",i.a.createElement(m.default,{className:"external-link",to:h.TEST_SCRIPT_DOCS,target:"_blank"},i.a.createElement(l.Text,{type:"link-primary",isExternal:!0},"Learn more about Postman’s execution order."))),i.a.createElement(p.default,{type:d.SNIPPETS_PROP_TESTS,ref:this.editorRef,value:this.props.value,onChange:this.props.onChange,commentMode:!1,parent:"collection",model:this.props.model,readOnly:!1===this.props.canEditCollection}))}})||r;f.contextTypes={variablesCache:u.a.object}},"./runtime-repl/collection/_api/CollectionBufferedStore.ts":function(e,t,n){"use strict";n.r(t);var r=n("./runtime-repl/_common/BufferedItemStore.ts"),a=n("./runtime-repl/collection/_api/CollectionInterfaceV2.ts");class i extends r.BufferedItemStore{dispatchUpdate(e){return Object(a.updateCollection)(this.uid,e)}get propertiesToWatch(){return i.propertiesToWatch}}i.propertiesToWatch=["auth","protocolProfileBehavior","events","variables","initialVariables"];class o extends r.BufferedItemManager{createItemStoreInstance(e){return new i(e)}}t.default=new o},"./runtime-repl/collection/modals/CollectionAuthEditorContainer.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return u}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("./node_modules/classnames/index.js"),o=n.n(i),s=n("./runtime-repl/auth/AuthEditor.js"),l=n("./js/constants/AppUrlConstants.js"),c=n("./js/external-navigation/ExternalNavigationService.js");class u extends a.a.Component{constructor(e){super(e),this.state={showPassword:!1,showAuthVariablesAlert:pm.settings.getSetting("showAuthVariablesAlert"),showAuthAdvancedFields:pm.settings.getSetting("showAuthAdvancedFields")},this.handleShowPassword=this.handleShowPassword.bind(this),this.handleVariablesLearnMore=this.handleVariablesLearnMore.bind(this),this.handleDismissVariablesAlert=this.handleDismissVariablesAlert.bind(this),this.toggleAdvancedFields=this.toggleAdvancedFields.bind(this)}handleShowPassword(){this.setState({showPassword:!this.state.showPassword})}handleVariablesLearnMore(){Object(c.openExternalLink)(l.VARIABLE_DOCS,"_blank")}handleDismissVariablesAlert(){this.setState({showAuthVariablesAlert:!1},(()=>{pm.settings.setSetting("showAuthVariablesAlert",!1)}))}toggleAdvancedFields(){const e=!this.state.showAuthAdvancedFields;this.setState({showAuthAdvancedFields:e},(()=>{pm.settings.setSetting("showAuthAdvancedFields",e)}))}getContentClasses(){return o()({"collection-modal-tab-content-container":!0},this.props.className)}render(){return a.a.createElement("div",{className:this.getContentClasses()},a.a.createElement("div",{className:"collection-modal-tab-content-description"},"This authorization method will be used for every request in this collection. You can override this by specifying one in the request."),a.a.createElement(s.default,{auth:this.props.auth,authSession:this.props.authSession,showPreviewButton:!1,type:"collection",entityId:this.props.entityId,collectionId:this.props.collectionId,showAuthVariablesAlert:this.state.showAuthVariablesAlert,showAuthAdvancedFields:this.state.showAuthAdvancedFields,showPassword:this.state.showPassword,onShowPasswordToggle:this.handleShowPassword,onAuthTypeSelect:this.props.handleAuthTypeSelect,onVariablesLearnMore:this.handleVariablesLearnMore,onDismissVariablesAlert:this.handleDismissVariablesAlert,onToggleAdvancedFields:this.toggleAdvancedFields,onFieldChange:this.props.handleFieldChange,onFieldDelete:this.props.handleFieldDelete,onSessionFieldChange:this.props.handleSessionFieldChange,onUseToken:this.props.onUseToken,layout:this.props.layout,handleAuthAnalytics:this.props.handleAuthAnalytics,disableEdit:!1===this.props.canEditCollection}))}}},"./runtime-repl/collection/view/CollectionActionsDropdown.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return f}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),c=n("./js/stores/get-store.js"),u=n("./runtime-repl/_common/components/compound.js"),d=n("./version-control/services/VersionControlCollectionActions.js"),h=n("./collaboration/workspace/types/WorkspaceTypes.ts"),p=n("./runtime-repl/collection/CollectionActionsConstants.js"),m=n("./runtime-repl/_common/DisabledTooltipConstants.js");let f=Object(l.observer)(r=class extends a.Component{constructor(e){super(e),this.getDisabledText=this.getDisabledText.bind(this)}getDisabledText(e,t,n){if(!e)return;if(!Object(c.getStore)("OnlineStatusStore").userCanSave)return m.DISABLED_TOOLTIP_IS_OFFLINE;const r=m.DISABLED_TOOLTIP_NO_PERMISSION;switch(t){case p.ACTION_TYPE_SAVE:return null;case p.ACTION_MANAGE_ROLES:{const{team:e}=Object(c.getStore)("CurrentUserStore"),t=Object(c.getStore)("ActiveWorkspaceStore");return e||t.visibilityStatus===h.VISIBILITY_STATUS.public?r:"You need to be signed-in to a team to perform this action"}case p.ACTION_TYPE_SHARE:if(!Object(c.getStore)("CurrentUserStore").isLoggedIn)return m.DISABLED_TOOLTIP_IS_SIGNEDOUT;case p.ACTION_TYPE_FORK:case p.ACTION_TYPE_MERGE:case p.ACTION_TYPE_PULL_REQUEST:case p.ACTION_TYPE_PULL_CHANGES:return Object(d.getDisabledText)(t,n);default:return r}}getKeymapHandlers(){return{rename:pm.shortcuts.handle("rename",this.handleShortcutSelect.bind(this,p.ACTION_TYPE_RENAME_TOGGLE)),duplicate:pm.shortcuts.handle("duplicate",this.handleShortcutSelect.bind(this,p.ACTION_TYPE_DUPLICATE)),delete:pm.shortcuts.handle("delete",this.handleShortcutSelect.bind(this,p.ACTION_TYPE_DELETE))}}handleShortcutSelect(e){this.props.onSelect&&this.props.onSelect(e)}render(){return i.a.createElement(u.EntityActionsDropdown,{dropdownClassName:this.props.className,actions:this.props.actions,keymapHandlers:this.getKeymapHandlers(),onSelect:this.props.onSelect,onToggle:this.props.onToggle,getDisabledText:this.getDisabledText,isOpen:this.props.isOpen,betaBanner:this.props.betaBanner})}})||r;f.defaultProps={onToggle:e.noop,className:null},f.propTypes={actions:s.a.array.isRequired,onSelect:s.a.func.isRequired,onToggle:s.a.func,className:s.a.string,betaBanner:s.a.string}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/collection/workbench/CollectionEditor/CollectionEditor.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return A}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),c=n("./js/components/base/Panes.js"),u=n("./js/constants/AppSettingsDefaults.js"),d=n("./js/constants/Panes.js"),h=n("./js/modules/services/AnalyticsService.js"),p=n("./appsdk/contextbar/ContextBar.js"),m=n("./runtime-repl/collection/workbench/CollectionEditorContent/CollectionEditorContentPane.js"),f=n("./runtime-repl/collection/workbench/CollectionWorkbenchModel.js"),g=n("./runtime-repl/_common/ContextBarIdentifiers.js"),b=n("./documentation/constants.js"),y=n("./version-control/constants.js"),v=n("./collaboration/constants/comments.js"),T=n("./js/stores/get-store.js");let A=Object(l.observer)(r=class extends a.Component{componentDidMount(){"public"===Object(T.getStore)("ActiveWorkspaceStore").visibilityStatus&&h.default.addEventV2AndPublish({category:"explore",action:"view",entityType:"collection",entityId:e.get(this.props.model,"collectionId"),label:"collection",meta:{url:document.referrer}}),Object(T.getStore)("CurrentUserStore").isLoggedIn&&h.default.addEventV2AndPublish({category:"recent_view",action:"collection_view",entityType:"collection",entityId:e.get(this.props.model,"uid")})}render(){return i.a.createElement(c.PaneGroup,{defaultLayout:d.PANE_LAYOUT_HORIZONTAL},i.a.createElement(m.default,{width:{min:u.default.ui.WORKBENCH_MIN_WIDTH},className:"collection-editor",model:this.props.model}),this.props.model.isTransient?i.a.createElement(c.Pane,{collapsedByDefault:!0,width:{default:0,resizableByDefault:!1}}):i.a.createElement(p.ContextBarPane,{ref:e=>{this.contextBarRef=e},allowedContexts:[b.DOCUMENTATION_CONTEXT_IDENTIFIER,v.COMMENTS_CONTEXT_IDENTIFIER,y.COLLECTION_CHANGELOG,y.PULL_REQUEST_LIST,y.FORK_LIST,g.COLLECTION_INFO],contextData:{id:e.get(this.props.model,"collectionId"),uid:e.get(this.props.model,"uid"),type:b.DOCUMENTATION_ENTITY.COLLECTION,collectionUid:e.get(this.props.model,"uid"),anchor:`${v.MODEL_TYPE.COLLECTION}/${e.get(this.props.model,"collectionId")}`,modelId:e.get(this.props.model,"uid"),model:v.MODEL_TYPE.COLLECTION,name:e.get(this.props.model,"name")},width:u.default.ui.CONTEXT_BAR_WIDTH_CONFIG,collapsedByDefault:!1,editorId:this.props.editorId}))}})||r;A.propTypes={model:s.a.instanceOf(f.default).isRequired,editorId:s.a.string.isRequired}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/collection/workbench/CollectionEditorContent/CollectionEditorContentPane.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return V}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("./node_modules/classnames/index.js"),c=n.n(l),u=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),d=n("../../node_modules/@postman/aether/esmLib/index.js"),h=n("./js/components/base/XPaths/XPath.js"),p=n("./js/components/base/Panes.js"),m=n("./js/stores/get-store.js"),f=n("./js/stores/StoreManager.js"),g=n("./collaboration/workspace/model/ActiveWorkspaceBaseStore.ts"),b=n("./runtime-repl/collection/CollectionModalTabsConstants.js"),y=n("./js/external-navigation/ExternalNavigationService.js"),v=n("./js/constants/AppUrlConstants.js"),T=n("./runtime-repl/request-http/RequesterTabLayoutConstants.js"),A=n("./runtime-repl/runner/RunHistoryView.js"),E=n("./onboarding/src/common/LaunchDarkly.js"),S=n("./runtime-repl/collection/experiments.ts"),C=n("./runtime-repl/collection/modals/CollectionAuthEditorContainer.js"),k=n("./runtime-repl/collection/CollectionVariablesProvider.js"),I=n("./runtime-repl/collection/CollectionTests.js"),w=n("./runtime-repl/collection/CollectionEditorTabs.js"),x=n("./runtime-repl/collection/CollectionModalTabContent.js"),j=n("./runtime-repl/collection/CollectionModalTabContents.js"),O=n("./runtime-repl/collection/CollectionPreRequestScripts.js"),R=n("./runtime-repl/collection/CollectionConfigurationList.js"),_=n("./runtime-repl/collection/_api/CollectionInterface.js"),P=n("./runtime-repl/collection/workbench/CollectionEditorHeader/CollectionEditorHeader.js"),N=n("./runtime-repl/collection/workbench/CollectionWorkbenchModel.js"),L=n("./runtime-repl/_common/components/compound.js"),U=n("./runtime-repl/collection/CollectionActionsConstants.js"),D=n("./runtime-repl/_common/WorkspaceHelpers.js"),F=n("./runtime-repl/collection/workbench/Experiment/ShareCollectionTrialModal.js");function M(){return M=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},M.apply(this,arguments)}let V=Object(u.observer)(r=class extends p.Pane{constructor(e){super(e),this.handleTabSelect=this.handleTabSelect.bind(this),this.handleTestsChange=this.handleTestsChange.bind(this),this.handleUseOauth2Token=this.handleUseOauth2Token.bind(this),this.handleAuthTypeSelect=this.handleAuthTypeSelect.bind(this),this.handleAuthFieldChange=this.handleAuthFieldChange.bind(this),this.handleAuthFieldDelete=this.handleAuthFieldDelete.bind(this),this.handleVariablesChange=this.handleVariablesChange.bind(this),this.handleRequestForAccess=this.handleRequestForAccess.bind(this),this.handlePreRequestScriptChange=this.handlePreRequestScriptChange.bind(this),this.handleAuthSessionFieldChange=this.handleAuthSessionFieldChange.bind(this),this.updateProtocolProfileBehavior=this.updateProtocolProfileBehavior.bind(this),this.removeKeyFromProtocolProfileBehavior=this.removeKeyFromProtocolProfileBehavior.bind(this),this.model=e.model}getInfobarText(){let e="collection";switch(this.model.activeTab){case b.COLLECTION_AUTHORIZATION:e="authorization";break;case b.COLLECTION_PRE_REQUEST_SCRIPTS:e="pre-request scripts";break;case b.COLLECTION_TESTS:e="tests";break;case b.COLLECTION_VARIABLES:e="initial values";break;case b.COLLECTION_CONFIGURATIONS:e="settings";break;default:e="collection"}return`To change the ${e}, request additional access to this collection.`}handleTabSelect(e){this.model.set("activeTab",e)}handleAuthTypeSelect(e){this.model.setAuthType(e)}handleAuthFieldChange(e,t,n){this.model.setAuthField(e,t,n)}handleAuthFieldDelete(e,t){this.model.deleteAuthField(e,t)}handleAuthSessionFieldChange(e,t,n){this.model.setAuthSessionField(e,t,n),this.model.debouncedUpdateAuthSession()}handleUseOauth2Token(e={}){this.model.setAuthSessionField("oauth2","accessToken",e.access_token),this.model.setAuthSessionField("oauth2","tokenType",e.token_type),this.model.debouncedUpdateAuthSession()}handlePreRequestScriptChange(e){this.model.set("preRequestScript",e)}handleTestsChange(e){this.model.set("tests",e)}handleVariablesChange(t,n){this.model.set("variables",t),e.isFunction(n)&&n()}updateProtocolProfileBehavior(e,t){const n=this.model.protocolProfileBehavior||{};this.model.set("protocolProfileBehavior",M({},n,{[e]:t}))}removeKeyFromProtocolProfileBehavior(t){this.model.set("protocolProfileBehavior",e.omit(this.model.protocolProfileBehavior,[t]))}handleRequestForAccess(){Object(_.collectionActions)(this.model.uid,U.ACTION_REQUEST_ACCESS)}render(){const t=Object(m.getStore)("FeatureFlagsStore").isEnabled("collectionAndFolderConfigurations"),n=e.get(this.model.collectionItem,"permissions.edit",!0),r=Object(D.canRequestAccess)(),{isNewmanDiscoveryEnabled:a,isEnabledForTeam:o,isEnabledForPublicWorkspace:s}=E.launchDarkly.getFlag(S.SHOW_RUN_HISTORY.key,S.SHOW_RUN_HISTORY.defaultValue),l=e.get(Object(f.resolveStoreInstance)(g.default),"visibilityStatus","personal"),u=o&&("public"!==l||s),_=M({height:this.state.height,width:this.state.width},this.props.style||{}),N=c()({pane:!0,resizableX:this.isResizable("x"),resizableY:this.isResizable("y"),collapsedX:this.state.collapsedX,collapsedY:this.state.collapsedY},this.props.className);return i.a.createElement("div",{className:N,style:_},i.a.createElement(F.default,{canEdit:n,name:this.model.name,id:this.model.collectionId}),i.a.createElement(P.default,{model:this.props.model}),i.a.createElement(p.PaneContent,null,i.a.createElement("div",{className:"collection-editor-content"},!this.props.model.isTransient&&!n&&r&&i.a.createElement(L.RequestPermissionInfoBar,{message:this.getInfobarText(),onRequestForAccess:this.handleRequestForAccess}),this.props.model.isTransient&&i.a.createElement(d.Banner,{type:"global",status:"info",primaryAction:i.a.createElement(d.Button,{onClick:()=>Object(y.openExternalLink)(v.FEATURE_BRANCHES_DOCS,"_blank"),type:"outline",size:"small",text:"Learn more"})},"This collection is not on the configured development branch. Changes made here are visible only to you but can be backed up to the repository."),i.a.createElement(w.default,{width:this.state.width,onSelect:this.handleTabSelect,activeTab:this.model.activeTab,isAuthSelected:!e.isEmpty(this.model.auth),isPreRequestScriptAvailable:!!this.model.preRequestScript,isTestsAvailable:!!this.model.tests,hasVariables:!e.isEmpty(this.model.variables),canEditCollection:n}),i.a.createElement(k.default,{collectionVariables:this.model.variables},i.a.createElement(j.default,{activeKey:this.model.activeTab},i.a.createElement(x.default,{key:b.COLLECTION_AUTHORIZATION},i.a.createElement(h.default,{identifier:"authorization"},i.a.createElement(C.default,{auth:this.model.auth,entityId:this.model.uid,authSession:this.model.authSession,collectionId:this.model.collectionId,onUseToken:this.handleUseOauth2Token,handleAuthTypeSelect:this.handleAuthTypeSelect,handleFieldChange:this.handleAuthFieldChange,handleFieldDelete:this.handleAuthFieldDelete,handleSessionFieldChange:this.handleAuthSessionFieldChange,className:T.REQUESTER_TAB_LAYOUT_2_COLUMN,canEditCollection:n}))),i.a.createElement(x.default,{key:b.COLLECTION_PRE_REQUEST_SCRIPTS},i.a.createElement(h.default,{identifier:"preRequest"},i.a.createElement(O.default,{value:this.model.preRequestScript,onChange:this.handlePreRequestScriptChange,canEditCollection:n,model:this.model}))),i.a.createElement(x.default,{key:b.COLLECTION_TESTS},i.a.createElement(h.default,{identifier:"tests"},i.a.createElement(I.default,{value:this.model.tests,onChange:this.handleTestsChange,canEditCollection:n,model:this.model}))),i.a.createElement(x.default,{key:b.COLLECTION_VARIABLES},i.a.createElement(h.default,{identifier:"variables"},i.a.createElement(L.VariablesEditor,{entityType:"collection",meta:{text:"These variables are specific to this collection and its requests.",link:v.VARIABLE_DOCS,linkText:"Learn more about collection variables."},values:this.model.variables||[],isEntityEditable:n,canRequestAccess:r,onChange:this.handleVariablesChange,className:"collection-editor-content__variables-editor",bleed:!0}))),i.a.createElement(x.default,{key:b.COLLECTION_RUN_REPORTS},u&&i.a.createElement(h.default,{identifier:"runHistory"},i.a.createElement(A.default,{collectionId:this.model.uid,isActive:this.model.activeTab===b.COLLECTION_RUN_REPORTS,isNewmanDiscoveryEnabled:a}))),i.a.createElement(x.default,{key:b.COLLECTION_CONFIGURATIONS},t&&i.a.createElement(R.default,{configuration:this.model.protocolProfileBehavior,updateProtocolProfileBehavior:this.updateProtocolProfileBehavior,removeKeyFromProtocolProfileBehavior:this.removeKeyFromProtocolProfileBehavior})))))))}})||r;V.propTypes={model:s.a.instanceOf(N.default).isRequired}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/collection/workbench/CollectionEditorHeader/CollectionEditorHeader.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return z}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("./node_modules/classnames/index.js"),c=n.n(l),u=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),d=n("../../node_modules/@postman/aether/esmLib/index.js"),h=n("./runtime-repl/collection/CollectionMetaIcons.js"),p=n("./js/stores/get-store.js"),m=n("./js/components/base/XPaths/XPath.js"),f=n("./runtime-repl/transient-collection/datastores/stores/TransientCollectionStore.ts"),g=n("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),b=n("./appsdk/components/link/Link.js"),y=n("./runtime-repl/_common/components/molecule.js"),v=n("./runtime-repl/collection/view/CollectionActionsDropdown.js"),T=n("./runtime-repl/_common/components/ForkRecommendationTooltip.js"),A=n("./runtime-repl/_common/ScratchpadConstants.js"),E=n("./version-control/common/ForkLabel.js"),S=n("./growth/activation/common/ActivationOnboardingPopover.js"),C=n("./runtime-repl/collection/_api/CollectionInterface.js"),k=n("./runtime-repl/collection/workbench/CollectionWorkbenchModel.js"),I=n("./growth/activation/common/GrowthActivationHelper.js"),w=n("./growth/activation/constants/WorkspacePopoverConstants.js"),x=n("./runtime-repl/collection/CollectionActionsConstants.js"),j=n("./runtime-repl/_common/DisabledTooltipConstants.js"),O=n("./version-control/components.js"),R=n("./runtime-repl/_common/WorkspaceHelpers.js"),_=n("./version-control/services/VersionControlCollectionActions.js"),P=n("./version-control/Watch/components/WatchContainer/Watch.js"),N=n("./runtime-repl/runner/RunnerHelper.js"),L=n("./collaboration/workspace/types/WorkspaceTypes.ts"),U=n("./growth/foundation/public/InteractionStoreService.js"),D=n("./growth/activation/constants/InteractionEventConstants.js");function F(){return F=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},F.apply(this,arguments)}const M=100,V=[{width:850,result:{hideSaveButtonLabel:!0}},{width:820,result:{hideRunButtonLabel:!0}},{width:790,result:{hideWatchButtonLabel:!0}},{width:740,result:{hideSaveButton:!0}},{width:700,result:{hideRunButton:!0}},{width:520,result:{hideForkButtonLabel:!0}},{width:480,result:{hideShareButtonLabel:!0}}],B={sharePopoverDismissed:!0,shareBadgeDismissed:!0,forkBadgeDismissed:!0},q={sharePopoverDismissed:!1,shareBadgeDismissed:!1,forkBadgeDismissed:!1},W={entityType:D.USER,resourceId:D.REORDER_COLLECTION_ACTION,resourceType:D.GROWTH},H=g.default.div`
    position: relative;
  `,K=g.default.div`
    position: relative;
  `;let z=Object(u.observer)(r=class extends a.Component{constructor(e){super(e),this.state={isRunTooltipOpen:!1,isSaveTooltipOpen:!1,interactionData:B},this.showRunToolTip=this.showRunToolTip.bind(this),this.hideRunToolTip=this.hideRunToolTip.bind(this),this.showSaveToolTip=this.showSaveToolTip.bind(this),this.hideSaveToolTip=this.hideSaveToolTip.bind(this),this.handleSave=this.handleSave.bind(this),this.handleShare=this.handleShare.bind(this),this.handleRun=this.handleRun.bind(this),this.renderDecorators=this.renderDecorators.bind(this),this.handleActions=this.handleActions.bind(this),this.renderActions=this.renderActions.bind(this),this.renderSubtitle=this.renderSubtitle.bind(this),this.handleNameUpdate=this.handleNameUpdate.bind(this),this.handleFork=this.handleFork.bind(this),this.getTooltipForSave=this.getTooltipForSave.bind(this),this.getAction=this.getAction.bind(this),this.dismissSharePopover=this.dismissSharePopover.bind(this),this.dismissShareBadge=this.dismissShareBadge.bind(this),this.dismissForkBadge=this.dismissForkBadge.bind(this),this.hidePopover=this.hidePopover.bind(this),this.model=e.model,this.collectionItem=this.model&&this.model.collectionItem}componentDidMount(){const{model:t}=this.props;this.readInteractionData(),e.get(t,"additionalContext.rename")&&(this.handleActions(x.ACTION_TYPE_RENAME_TOGGLE),t&&e.isFunction(t.unsetContext)&&t.unsetContext("rename"))}getActionOrder(){return Object(p.getStore)("ActiveWorkspaceStore").visibilityStatus===L.VISIBILITY_STATUS.personal?["SHARE","FORK","RUN","SAVE","WATCH"]:["SHARE","FORK","WATCH","RUN","SAVE"]}getAction(e,t){const{hideShareButton:n,hideSaveButton:r,hideRunButton:a,hideShareButtonLabel:o,hideSaveButtonLabel:s,hideRunButtonLabel:l,hideForkButtonLabel:u,hideWatchButtonLabel:h}=t,{uid:f}=this.model,g=this.collectionItem&&this.collectionItem.isShareable,y=this.model.isTransient||this.collectionItem&&this.collectionItem.isEditable,{userCanSave:v}=Object(p.getStore)("OnlineStatusStore"),T=!this.model.isTransient&&!v||!this.model.isDirty||Object(R.isLoggedIn)()&&!y,E=!Object(p.getStore)("SyncStatusStore").isSocketConnected,C=Object(p.getStore)("ActiveWorkspaceStore").visibilityStatus,k=C===L.VISIBILITY_STATUS.personal,{activationWorkspacePopover:x}=I.activationHelper,j=x===w.SHARE_BUTTON_POPOVER&&!this.state.interactionData.sharePopoverDismissed&&!E&&k,_=!s&&(this.model.isSaving?"Saving":"Save");switch(e){case"WATCH":return{shouldShow:!this.model.isTransient&&!k,elem:i.a.createElement(P.default,{className:"collection-watch-button",model:"collection",modelId:this.model.uid,hideLabel:h})};case"FORK":return{shouldShow:!this.model.isTransient,elem:i.a.createElement(K,{onClick:this.dismissForkBadge},i.a.createElement(O.ForkButton,{hideLabel:u,modelId:f,model:"collection",origin:"collection-tab",disabled:E,showIndicator:!this.state.interactionData.forkBadgeDismissed&&!k,disabledTooltip:E?"Get online to create a fork or view existing forks.":A.DISABLED_IN_SCRATCHPAD_TOOLTIP}))};case"RUN":return{shouldShow:!a&&Object(N.canRunCollection)(),elem:i.a.createElement("div",{onMouseOver:this.showRunToolTip,onMouseOut:this.hideRunToolTip,ref:e=>{this.runButtonContainerRef=e}},i.a.createElement(m.default,{identifier:"runCollectionAction"},this.model.isTransient?i.a.createElement(d.Button,{type:"tertiary",className:c()("collection-editor-header__action",{"with-label":!l}),onClick:this.handleRun,isDisabled:!this.model.isTransient&&!Object(N.canRunCollection)(),text:!l&&"Run",icon:i.a.createElement(d.IconActionRunStroke,null)}):i.a.createElement(b.default,{to:{routeIdentifier:"build.run.create",routeParams:{},queryParams:{collection:this.model.uid}},onClick:e=>{e.metaKey||e.ctrlKey||(e.preventDefault(),this.handleRun())}},i.a.createElement(d.Button,{type:"tertiary",className:c()("collection-editor-header__action",{"with-label":!l}),isDisabled:!this.model.isTransient&&!Object(N.canRunCollection)(),text:!l&&"Run",icon:i.a.createElement(d.IconActionRunStroke,null)}))))};case"SAVE":return{shouldShow:this.canDisplaySaveButton(C,r),elem:i.a.createElement("div",{onMouseOver:this.showSaveToolTip,onMouseOut:this.hideSaveToolTip,ref:e=>{this.saveButtonContainerRef=e}},i.a.createElement(m.default,{identifier:"collectionEditorSaveAction"},i.a.createElement(d.Button,{type:"tertiary",className:c()("collection-editor-header__action",{"with-label":!s}),isDisabled:T,onClick:this.handleSave,text:_,icon:i.a.createElement(d.IconActionSaveStroke,null)})))};case"SHARE":return{shouldShow:!n&&!this.model.isTransient,elem:i.a.createElement(H,{ref:e=>{this.shareButtonContainerRef=e},onMouseOver:()=>{!this.state.interactionData.sharePopoverDismissed&&I.activationHelper.update("activationWorkspacePopover",w.SHARE_BUTTON_POPOVER)}},i.a.createElement(d.Button,{type:"tertiary",text:!o&&"Share",className:c()("collection-editor-header__action",{"with-label":!o}),tooltip:!j&&this.getTooltipForShare(!g,E),onClick:()=>{this.handleShare()},isDisabled:E,icon:i.a.createElement(d.IconActionShareStroke,null),showIndicator:!this.state.interactionData.shareBadgeDismissed&&k}),i.a.createElement(S.default,{isOpen:j,target:this.shareButtonContainerRef,onDismiss:this.dismissSharePopover,hidePopover:this.hidePopover,placement:"bottom",title:"Share with ease",description:"Share with people you work with or put it on web for the world to consume."}))};default:return null}}hidePopover(){I.activationHelper.update("activationWorkspacePopover","")}dismissSharePopover(){I.activationHelper.update("activationWorkspacePopover",""),this.setState((e=>({interactionData:F({},e.interactionData,{sharePopoverDismissed:!0,shareBadgeDismissed:!0})})),(()=>{this.writeInteractionData(this.state.interactionData)}))}dismissShareBadge(){this.setState((e=>({interactionData:F({},e.interactionData,{shareBadgeDismissed:!0})})),(()=>{this.writeInteractionData(this.state.interactionData)}))}dismissForkBadge(){this.setState((e=>({interactionData:F({},e.interactionData,{forkBadgeDismissed:!0})})),(()=>{this.writeInteractionData(this.state.interactionData)}))}getTooltipForShare(e,t){return t?j.DISABLED_TOOLTIP_IS_OFFLINE:e?j.DISABLED_TOOLTIP_NO_PERMISSION:"Share collection"}getTooltipTextForSave(){const t=e.get(this.collectionItem,"permissions.edit",!0),{userCanSave:n}=Object(p.getStore)("OnlineStatusStore");return t?this.model.isDirty?n?"Save collection":j.DISABLED_TOOLTIP_IS_OFFLINE:"No new changes to save.":"You don't have permission to make changes to this collection. Fork the collection to your workspace to save changes."}getTooltipForSave(){if(!e.get(this.collectionItem,"permissions.edit",!0)&&Object(R.isLoggedIn)())return i.a.createElement(T.default,{isOpen:this.state.isSaveTooltipOpen,targetRef:this.saveButtonContainerRef,onMouseEnter:this.showSaveToolTip,onMouseLeave:this.hideSaveToolTip,title:"Create a fork to save changes",primaryMessage:"You don't have permission to make changes to this collection. Fork the collection to your workspace to save changes.",primaryAction:"Create Fork & Save",onPrimaryAction:()=>this.handleFork("save-collection")});const t=this.getTooltipTextForSave();return i.a.createElement(y.Tooltip,{target:this.saveButtonContainerRef,show:this.state.isSaveTooltipOpen,placement:"bottom"},i.a.createElement(y.TooltipBody,null,t))}getTooltipTextForRun(){return Object(N.canRunCollection)()?"Run collection":"Fork this collection to your own workspace to run it."}async readInteractionData(){try{const t=F({},W,{entityId:Object(p.getStore)("CurrentUserStore").id});let n=await Object(U.readInteractionEvent)(t);e.isEmpty(n)&&(n=q),this.setState({interactionData:n})}catch(e){pm.logger.error("Error in reading interaction data",e)}}getTooltipForRun(){if(!Object(R.isLoggedIn)())return null;if(this.props.model.isTransient)return null;if(!Object(N.canRunCollection)())return i.a.createElement(T.default,{isOpen:this.state.isRunTooltipOpen,targetRef:this.runButtonContainerRef,onMouseEnter:this.showRunToolTip,onMouseLeave:this.hideRunToolTip,primaryMessage:"Collections can't be run in public workspaces right now – though we're working on that for a future release!",secondaryMessage:"Fork this collection to your own workspace to run it.",primaryAction:"Create a fork",onPrimaryAction:()=>this.handleFork("run-collection")});const e=this.getTooltipTextForRun();return i.a.createElement(y.Tooltip,{target:this.runButtonContainerRef,show:this.state.isRunTooltipOpen,placement:"bottom"},i.a.createElement(y.TooltipBody,null,e))}canDisplaySaveButton(t,n){const r=this.model&&this.model.isTransient||e.get(this.collectionItem,"permissions.edit",!0);return t===L.VISIBILITY_STATUS.public?r&&!n:!n}writeInteractionData(e){const t=F({},W,{entityId:Object(p.getStore)("CurrentUserStore").id,data:e});Object(U.writeInteractionEvent)(t)}showRunToolTip(){this.dismissRunTooltipTimeout&&clearTimeout(this.dismissRunTooltipTimeout),this.dismissRunTooltipTimeout=setTimeout((()=>{this.setState({isRunTooltipOpen:!0})}),M)}hideRunToolTip(){this.dismissRunTooltipTimeout&&clearTimeout(this.dismissRunTooltipTimeout),this.dismissRunTooltipTimeout=setTimeout((()=>{this.setState({isRunTooltipOpen:!1})}),M)}showSaveToolTip(){this.dismissSaveTooltipTimeout&&clearTimeout(this.dismissSaveTooltipTimeout),this.dismissSaveTooltipTimeout=setTimeout((()=>{this.setState({isSaveTooltipOpen:!0})}),M)}hideSaveToolTip(){this.dismissSaveTooltipTimeout&&clearTimeout(this.dismissSaveTooltipTimeout),this.dismissSaveTooltipTimeout=setTimeout((()=>{this.setState({isSaveTooltipOpen:!1})}),M)}handleActions(t,n={}){if(t===x.ACTION_TYPE_SAVE)return this.handleSave();if(this.model.isTransient){const e=f.default.find(this.model.collectionId);switch(t){case x.ACTION_TYPE_DOWNLOAD:return void e.export();case x.ACTION_TYPE_RENAME:return void e.model.update({id:this.model.collectionId,name:n.name});case x.ACTION_TYPE_RUN:e.run();default:return}}Object(C.collectionActions)(this.model.uid,t,n,{origin:"tab",name:this.model.name},(()=>{switch(t){case x.ACTION_TYPE_RENAME_TOGGLE:e.invoke(this.collectionEditorHeader,"handleEditName");break;case x.ACTION_TYPE_PULL_CHANGES:Object(_.handlePullChanges)(this.model.uid,t,n,{origin:"tab"})}}))}handleShare(){this.dismissSharePopover(),this.dismissShareBadge(),this.handleActions(x.ACTION_TYPE_SHARE)}handleRun(){this.handleActions(x.ACTION_TYPE_RUN)}handleNameUpdate(e){this.handleActions(x.ACTION_TYPE_RENAME,{name:e})}handleFork(e){Object(C.collectionActions)(this.model.uid,x.ACTION_TYPE_FORK,null,{origin:e||"collection-tab"}),this.setState({isRunTooltipOpen:!1,isSaveTooltipOpen:!1})}handleSave(){this.model.requestSave&&this.model.requestSave()}renderActions({breakpoints:t}){const{hideShareButton:n,hideSaveButton:r,hideRunButton:o}=t,s=e.get(this.collectionItem,"permissions.share",!0),l=this.model.isTransient||e.get(this.collectionItem,"permissions.edit",!0),{userCanSave:c,userCanSaveAndSync:u}=Object(p.getStore)("OnlineStatusStore"),d=!this.model.isTransient&&!c||!this.model.isDirty||Object(R.isLoggedIn)()&&!l,h=[];return n&&!this.model.isTransient&&h.push({type:x.ACTION_TYPE_SHARE,label:"Share",isEnabled:u&&s,xpathLabel:"shareCollectionAction"}),r&&h.push({type:x.ACTION_TYPE_SAVE,label:"Save",isEnabled:!d,xpathLabel:"saveCollectionAction",tooltip:this.getTooltipTextForSave()}),o&&h.push({type:x.ACTION_TYPE_RUN,label:"Run",isEnabled:this.model.isTransient||Object(N.canRunCollection)(),xpathLabel:"runCollectionAction",tooltip:this.getTooltipTextForRun()}),i.a.createElement(a.Fragment,null,e.map(this.getActionOrder(),(e=>{const n=this.getAction(e,t);if(n.shouldShow)return i.a.createElement(a.Fragment,{key:e},n.elem)})),i.a.createElement(v.default,{onSelect:this.handleActions,actions:h.concat(this.model.getActions())}),!this.hideRunButton&&this.getTooltipForRun(),!this.hideSaveButton&&this.getTooltipForSave())}renderDecorators({breakpoints:t}){const n=this.collectionItem,{moveForkDown:r}=t;return n?i.a.createElement(h.default,{collection:n,userCanUpdate:e.get(n,"permissions.edit",!0),showForkLabel:!r,hideFork:r}):null}renderSubtitle({breakpoints:e}){if(!this.model.isTransient)return null;const{moveForkDown:t}=e;if(!t)return null;const n=this.collectionItem,r=n&&n.baseCollectionUid;if(!r)return null;const a={id:n.id,forkLabel:n.forkLabel,model:"collection"},o={id:r,model:"collection"};return i.a.createElement(E.default,{className:"collection-editor-header__subtitle__fork-label",forkedEntity:a,baseEntity:o,label:n.forkLabel,showForkLabel:!0})}render(){const t=e.get(this.collectionItem,"permissions.edit",!0);return i.a.createElement(y.EntityTabHeader,{breakpoints:V,ref:e=>{this.collectionEditorHeader=e},name:this.model.name,placeholder:"Collection Name",isEntityEditable:t,onSubmit:this.handleNameUpdate,renderActions:this.renderActions,renderDecorators:this.renderDecorators,entityUID:this.props.model.isTransient?null:this.model.uid,entityType:"collection",renderSubtitle:this.renderSubtitle})}})||r;z.propTypes={model:s.a.instanceOf(k.default).isRequired}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/collection/workbench/CollectionWorkbenchController.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return N}));var r,a,i,o=n("../../node_modules/mobx/lib/mobx.module.js"),s=n("./node_modules/moment/moment.js"),l=n.n(s),c=n("./runtime-repl/_common/datastores/controllers/VariableSessionController.js"),u=n("./runtime-repl/auth/oauth2/datastores/controllers/AuthSessionController.js"),d=n("./runtime-repl/transient-collection/datastores/stores/TransientCollectionStore.ts"),h=n("./js/stores/get-store.js"),p=n("./runtime-repl/_common/VariableSessionHelper.js"),m=n("./js/modules/services/DBResourceWatcher.js"),f=n("./runtime-repl/_common/VariableSessionService.js"),g=n("./js/services/EditorService.js"),b=n("./runtime-repl/_common/uid-helper.ts"),y=n("./runtime-repl/extensible-collection/api/ExtensibleCollectionAPI.ts"),v=n("./runtime-repl/extensible-collection/workbench/ExtensibleCollectionWorkbenchController.ts"),T=n("./runtime-repl/collection/_api/CollectionStoreV2.js"),A=n("./runtime-repl/_common/usage-metrics/UsageController.js"),E=n("./collaboration/workspace/controller/ActivePublicWorkspaceController.ts"),S=n("./runtime-repl/_common/ConflictResolutionHelper.js"),C=n("./runtime-repl/_common/ModelConstant.js"),k=n("./runtime-repl/_common/WorkbenchStatusConstants.js"),I=n("./collaboration/services/CollaborationNavigationService.js"),w=n("./appsdk/workbench/BaseWorkbenchController.js"),x=n("./runtime-repl/collection/workbench/CollectionWorkbenchModel.js"),j=n("./runtime-repl/collection/services/CollectionPerformanceMetricsService.ts"),O=n("./runtime-repl/collection/_api/CollectionBufferedStore.ts");function R(e,t,n,r,a){var i={};return Object.keys(r).forEach((function(e){i[e]=r[e]})),i.enumerable=!!i.enumerable,i.configurable=!!i.configurable,("value"in i||i.initializer)&&(i.writable=!0),i=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),i),a&&void 0!==i.initializer&&(i.value=i.initializer?i.initializer.call(a):void 0,i.initializer=void 0),void 0===i.initializer&&(Object.defineProperty(e,t,i),i=null),i}const _="Conflict",P="This collection has been modified since you last opened the tab.";let N=((i=class extends w.default{constructor(){var t,n,r,i;super(),this.model=null,this.collectionId=null,this.collectionUid=null,this.sessionId=null,this.session=null,this.authSession=null,this.bufferedItemStore=null,this.updateHandlerDisposer=null,this.updateFailHandlerDisposer=null,this.collectionWatcherId=null,this.sessionWatcherId=null,this.authSessionWatcherId=null,t=this,n="status",i=this,(r=a)&&Object.defineProperty(t,n,{enumerable:r.enumerable,configurable:r.configurable,writable:r.writable,value:r.initializer?r.initializer.call(i):void 0}),this.handleResourceChangedDebounced=e.debounce(this.handleResourceChanged,100),this.handleCollectionChanged=this.handleCollectionChanged.bind(this),this.handleCollectionDeleted=this.handleCollectionDeleted.bind(this),this.handleTransientCollectionChanged=this.handleTransientCollectionChanged.bind(this),this.trackActivationDebounced=e.debounce(this.trackActivation,100)}setWorkbenchStatus(e){this.status=e,e!==k.READY&&e!==k.ERROR||this.setLoading(!1)}handleResourceChanged(e,t,n){if(!this.model)return void pm.logger.warn("CollectionWorkbenchController~handleResourceChanged: Model not found");const r=this.model.transform&&this.model.transform(e,t),a=Object(S.getUpdates)(this.model.initialState,r),i=this.model.updates;Object(S.detectConflict)(a,i,this.model.isDirty,(r=>{r?this.setStatus(_,P):(this.clearStatus(),this.model.handleIncomingUpdates(e,t,n))}))}handleCollectionChanged(e){if(!this.model)return void pm.logger.warn("CollectionWorkbenchController~handleCollectionChanged: Model not found");const t=this.session?Object(f.getSessionFor)(this.sessionId,e):Promise.resolve(),n=this.authSession?u.default.get({id:this.sessionId}):Promise.resolve();Promise.all([t,n]).then((([t,n])=>{this.handleResourceChangedDebounced(e,t,n)})).catch((e=>{pm.logger.error("CollectionWorkbenchController~handleCollectionChanged: Error in fetching sessions",e)}))}handleTransientCollectionChanged(){const t=e.get(d.default.find(this.collectionId),"model");t&&this.handleCollectionChanged(t.definition)}handleSessionCreatedOrChanged(t){if(!this.model)return void pm.logger.warn("CollectionWorkbenchController~handleSessionCreatedOrChanged: Model not found");this.session=t;const n=this.isTransient?Promise.resolve(e.get(d.default.find(this.collectionId),"model.definition")):this.bufferedItemStore.getItem(),r=this.authSession?u.default.get({id:this.sessionId}):Promise.resolve();Promise.all([n,r]).then((([e,n])=>{this.handleResourceChangedDebounced(e,t,n)})).catch((e=>{pm.logger.error("CollectionWorkbenchController~handleCollectionChanged: Error in fetching collection or auth session",e)}))}async handleAuthSessionCreatedOrChanged(t){if(!this.model)return void pm.logger.warn("CollectionWorkbenchController~handleAuthSessionCreatedOrChanged: Model not found");this.authSession=t;let n,r=this.session;try{n=this.isTransient?e.get(d.default.find(this.collectionId),"model.definition"):await this.bufferedItemStore.getItem()}catch(e){pm.logger.error("CollectionWorkbenchController~handleAuthSessionCreatedOrChanged: Error in fetching the collection",e)}try{r=r&&await Object(f.getSessionFor)(this.sessionId,n)}catch(e){pm.logger.error("CollectionWorkbenchController~handleAuthSessionCreatedOrChanged: Error in fetching the session",e)}this.handleResourceChangedDebounced(n,r,t)}handleCollectionDeleted(e,t){if("SYNC_CLIENT"===t)return this.setWorkbenchStatus(k.DELETED),void this.cleanUp();g.default.close({id:this._tabId},{force:!0})}restoreCollectionState(){const e=this.getPersistedTrackedState();e&&e.isDirty&&this.model&&(this.model._trackedCollection.set(Object(o.toJS)(e.updates)),Object(S.detectConflict)(this.model.initialState,e.initialState,this.model.isDirty,(t=>{t&&(this.model._trackedCollection.setInitialState(Object(o.toJS)(e.initialState)),this.setStatus(_,P))})))}startWatching(){const t=e.get(d.default.find(this.collectionId),"model");this.isTransient&&t?(t.subscribe("update",this.handleTransientCollectionChanged),t.subscribe("delete",this.handleCollectionDeleted)):this.collectionWatcherId||(this.updateHandlerDisposer=this.bufferedItemStore&&this.bufferedItemStore.onUpdate(this.handleCollectionChanged),this.updateFailHandlerDisposer=this.bufferedItemStore&&this.bufferedItemStore.onUpdateFail(((e,t)=>{pm.logger.error("CollectionWorkbenchController~startWatching: Error in updating collection:",e),this.model&&this.model.resetUpdates&&this.model.resetUpdates(t)})),this.greedyDeleteReactionDisposer&&this.greedyDeleteReactionDisposer(),this.greedyDeleteReactionDisposer=Object(o.when)((()=>this.model.collectionItem&&this.model.collectionItem.isDeleting),(()=>this.handleCollectionDeleted({id:this.model.collectionItem.id}))),this.collectionWatcherId=m.default.watch({model:C.COLLECTION,modelId:this.collectionId},{onDeleted:this.handleCollectionDeleted})),!this.sessionWatcherId&&(this.sessionWatcherId=m.default.watch({model:C.SESSION,modelId:this.sessionId},{onCreated:this.handleSessionCreatedOrChanged.bind(this),onChanged:this.handleSessionCreatedOrChanged.bind(this)})),!this.authSessionWatcherId&&(this.authSessionWatcherId=m.default.watch({model:C.AUTH_SESSION,modelId:this.sessionId},{onCreated:this.handleAuthSessionCreatedOrChanged.bind(this),onChanged:this.handleAuthSessionCreatedOrChanged.bind(this)}))}stopWatching(){const t=e.get(d.default.find(this.collectionId),"model");this.updateHandlerDisposer&&this.updateHandlerDisposer(),this.updateFailHandlerDisposer&&this.updateFailHandlerDisposer(),this.bufferedItemStore&&O.default.unsubscribe(this.bufferedItemStore),this.collectionWatcherId&&m.default.unwatch({model:C.COLLECTION,modelId:this.collectionId},this.collectionWatcherId),this.isTransient&&t&&(t.unsubscribe("update",this.handleTransientCollectionChanged),t.unsubscribe("delete",this.handleCollectionDeleted)),this.greedyDeleteReactionDisposer&&this.greedyDeleteReactionDisposer(),this.sessionWatcherId&&m.default.unwatch({model:C.SESSION,modelId:this.sessionId},this.sessionWatcherId),this.authSessionWatcherId&&m.default.unwatch({model:C.AUTH_SESSION,modelId:this.sessionId},this.authSessionWatcherId),this.collectionWatcherId=null,this.sessionWatcherId=null,this.authSessionWatcherId=null}didCreate({routeParams:t,queryParams:n,additionalContext:r}){if(y.default.isBetaCollection(String(t&&t.cid),!0))return this.extensibleCollectionController=new v.default(this),void this.extensibleCollectionController.didCreate({routeParams:t,queryParams:n});const a=e.get(n,"comment"),i=t&&t.cid;this.collectionId=Object(b.decomposeUID)(i).modelId,this.collectionUid=i,this.isTransient=Boolean(e.get(n,"feature-branch")&&e.get(r,"isTransient")),this.__collectionPerfTraceId=j.CollectionPerformanceTraces.WORKBENCH("collection",this.collectionUid),this.isTransient||Object(T.isOneCached)(i)||j.default.startTrace(this.__collectionPerfTraceId),j.default.addMarker(this.__collectionPerfTraceId,j.CollectionPerformanceMarkers.WORKBENCH_DID_CREATE_START);const s=this.isTransient?e.get(d.default.find(this.collectionId),"model.definition"):null;this.setWorkbenchStatus(k.LOADING),(this.isTransient?Promise.resolve(s):Object(T.subscribeOne)(i,{permissions:this.constructor.collectionPermissions,exclude:["response","request"]})).then((n=>n?(this.collectionId=Object(b.decomposeUID)(n.id).modelId,this.collectionUid=n.id,!this.isTransient&&(this.bufferedItemStore=O.default.createBufferedItem(n)),this.sessionId=Object(p.getSessionId)(C.COLLECTION,this.collectionId,Object(h.getStore)("ActiveWorkspaceBaseStore").id,this.isTransient),e.isEmpty(n.variables)?c.default.get({id:this.sessionId}).then((e=>({collection:n,session:e}))):Object(f.getSessionFor)(this.sessionId,n).then((e=>e?{collection:n,session:e}:Promise.reject(new Error(`CollectionWorkbenchController~didCreate: Session for collection '${t.cid}' not found`))))):Promise.reject(new Error(`CollectionWorkbenchController~didCreate: Collection '${t.cid}' not found`)))).then((({collection:e,session:t})=>u.default.get({id:this.sessionId}).then((n=>({collection:e,session:t,authSession:n}))))).then((({collection:t,session:n,authSession:a})=>{this.session=n,this.authSession=a,this.model=new x.default(t,n,a,{rename:e.get(r,"rename"),isTransient:this.isTransient,setActiveTab:e.get(r,"setActiveTab")}),this.attachTrackedState(this.model._trackedCollection,this.model.save.bind(this.model,(e=>this.bufferedItemStore&&this.bufferedItemStore.update(e))),{persist:!0}),this.nameReactionDisposer=Object(o.reaction)((()=>this.model.name),(e=>this.setTitle(e)),{fireImmediately:!0});const i=Object(h.getStore)("ActiveWorkspaceBaseStore"),s=l()().diff(e.get(t,"createdAt"),"hours");if("public"===e.get(i,"visibilityStatus")&&this.model.uid){s<=48&&this.setPublicEntityMetaData({content:"noindex,nofollow"});const n=E.default.get().publicName,r=e.get(t,"name"),a=`Get started with ${n}'s APIs with the ${r} ${e.includes(e.toLower(r),"collection")?"":"collection "}on the Postman Public API Network`,i={description:e.get(t,"description")||a};this.setPublicEntityMetaData(i)}if(this.setConflictOptions({entityType:"collection"}),this.restoreCollectionState(),this.startWatching(),this.setWorkbenchStatus(k.READY),j.default.addMarker(this.__collectionPerfTraceId,j.CollectionPerformanceMarkers.WORKBENCH_DID_CREATE_END),!this.isTransient){const e=JSON.stringify(t.toJSON()).length;A.default.trackOpens({id:this.collectionUid,model:C.COLLECTION,size:e}).catch((e=>{pm.logger.error("CollectionWorkbenchController~didCreate: Error while tracking opens",e)}))}})).then((()=>{a&&I.default.handleOpenComment(this.collectionId,a)})).catch((e=>{pm.logger.error("CollectionWorkbenchController~didCreate: Error in loading collection or its sessions",e),this.setWorkbenchStatus(k.ERROR)})).finally((()=>{j.default.endTrace(this.__collectionPerfTraceId)}))}trackActivation(){!this.isTransient&&A.default.trackActivations({id:this.collectionUid,model:C.COLLECTION}).catch((e=>{pm.logger.error("CollectionWorkbenchController~trackActivation: Error while tracking activation",e)}))}didActivate(){j.default.addMarker(this.__collectionPerfTraceId,j.CollectionPerformanceMarkers.WORKBENCH_DID_ACTIVATE),this.trackActivationDebounced()}cleanUp(){this.stopWatching(),this.model&&this.model.unsubscribe&&this.model.unsubscribe(),this.nameReactionDisposer&&this.nameReactionDisposer(),this.detachTrackedState(),this.extensibleCollectionController=null,e.invoke(this.model,"cleanUp"),this.model=null}beforeDestroy(){this.extensibleCollectionController&&this.extensibleCollectionController.beforeDestroy(),this.cleanUp()}get transientStoreItem(){return this.collectionId&&d.default.find(this.collectionId)}}).collectionPermissions=["edit","share","delete","addMonitor","addMock"],i.editableProperties=["description","auth","protocolProfileBehavior","events","variables","initialVariables"],a=R((r=i).prototype,"status",[o.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return k.LOADING}}),R(r.prototype,"setWorkbenchStatus",[o.action],Object.getOwnPropertyDescriptor(r.prototype,"setWorkbenchStatus"),r.prototype),r)}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/collection/workbench/CollectionWorkbenchModel.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return z}));var r,a,i,o,s,l,c,u,d,h,p,m,f,g,b,y=n("../../node_modules/mobx/lib/mobx.module.js"),v=n("./node_modules/postman-collection/index.js"),T=n("./js/stores/get-store.js"),A=n("./js/common/model-event.js"),E=n("./js/modules/pipelines/user-action.js"),S=n("./runtime-repl/_common/VariableSessionHelper.js"),C=n("./runtime-repl/auth/authUtil.js"),k=n("./js/modules/services/AnalyticsService.js"),I=n("./runtime-repl/_common/datastores/controllers/VariableSessionController.js"),w=n("./runtime-repl/auth/oauth2/datastores/controllers/AuthSessionController.js"),x=n("./js/services/EditorService.js"),j=n("./js/utils/uid-helper.js"),O=n("./runtime-repl/transient-collection/datastores/stores/TransientCollectionStore.ts"),R=n("./runtime-repl/auth/AuthConstants.js"),_=n("./runtime-repl/collection/CollectionModalTabsConstants.js"),P=n("./collaboration/workspace/types/PermissionTypes.ts"),N=n("./collaboration/utils/workspace.js"),L=n("./appsdk/tracked-state/ObservableTrackedState.js"),U=n("./runtime-repl/_common/ModelConstant.js"),D=n("./runtime-repl/_common/WorkspaceHelpers.js"),F=n("./runtime-repl/_common/ToastHelpers.js"),M=n("./version-control/Watch/WatchService.js"),V=n("./runtime-repl/collection/_api/CollectionInterface.js"),B=n("./runtime-repl/collection/CollectionActionsConstants.js"),q=n("./version-control/services/VersionControlNetworkService.js");function W(){return W=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},W.apply(this,arguments)}function H(e,t,n,r){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(r):void 0})}function K(e,t,n,r,a){var i={};return Object.keys(r).forEach((function(e){i[e]=r[e]})),i.enumerable=!!i.enumerable,i.configurable=!!i.configurable,("value"in i||i.initializer)&&(i.writable=!0),i=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),i),a&&void 0!==i.initializer&&(i.value=i.initializer?i.initializer.call(a):void 0,i.initializer=void 0),void 0===i.initializer&&(Object.defineProperty(e,t,i),i=null),i}let z=((b=class{get name(){return this.collectionItem.name}constructor(t,n,r,b){this.collectionId=null,this.uid=null,this._trackedCollection=null,this.disposeCollectionWatchReaction=null,H(this,"isFork",a,this),H(this,"isOutOfSync",i,this),H(this,"userCanPullChanges",o,this),H(this,"activeTab",s,this),H(this,"isSaving",l,this),H(this,"team",c,this),H(this,"watchersCount",u,this),H(this,"isWatching",d,this),H(this,"isWatchDisabled",h,this),H(this,"isWatchersLoading",p,this),H(this,"isWatchersListDisabled",m,this),H(this,"watchersList",f,this),H(this,"authSession",g,this),this.collectionId=Object(j.decomposeUID)(t.id).modelId,this.additionalContext=b,this.uid=t.id,this.collectionItem=t,this.isTransient=b.isTransient,this._trackedCollection=new L.ObservableTrackedState(this.transform(t,n)),this.set("authSession",r?r.value:null),b.setActiveTab&&this.set("activeTab",b.setActiveTab),this.isTransient||(Object(y.when)((()=>Object(T.getStore)("ForkedCollectionStore").find(this.uid)),(()=>{this.checkOutOfSyncStatus(this.uid)})),this.updateWatchingStatus(),this.updateWatchersCount(),this.getWatchersList(),this.toggleWatchingStatus=this.toggleWatchingStatus.bind(this)),this.debouncedUpdateAuthSession=e.debounce(this.updateAuthSession,100)}setOutOfSyncStatuses(e){this.userCanPullChanges=e.userCanPullChanges,this.isFork=e.isFork,this.isOutOfSync=e.isOutOfSync}async checkOutOfSyncStatus(e){const t=await Object(q.isCollectionForkInSync)(e);this.setOutOfSyncStatuses(t),this.disposeCollectionWatchReaction=Object(y.reaction)((()=>Object(T.getStore)("SyncStatusStore").isSocketConnected),(e=>{e&&(this.updateTeamId(),this.updateWatchingStatus(),this.updateWatchersCount())})),this.updateTeamId(),this.updateWatchingStatus(),this.updateWatchersCount()}unsubscribe(){this.collectionItem&&this.collectionItem.unsubscribe&&this.collectionItem.unsubscribe()}cleanUp(){this.disposeCollectionWatchReaction&&this.disposeCollectionWatchReaction(),this.unsubscribe()}set preRequestScript(e){this._trackedCollection.set({preRequestScript:e})}get preRequestScript(){return this._trackedCollection.get("preRequestScript")}set tests(e){this._trackedCollection.set({tests:e})}get tests(){return this._trackedCollection.get("tests")}set auth(e){this._trackedCollection.set({auth:e})}get auth(){return this._trackedCollection.get("auth")}set variables(e){this._trackedCollection.set({variables:e})}get variables(){return this._trackedCollection.get("variables")}set protocolProfileBehavior(e){this._trackedCollection.set({protocolProfileBehavior:e})}get protocolProfileBehavior(){return this._trackedCollection.get("protocolProfileBehavior")}get isDirty(){return this._trackedCollection.isDirty}get initialState(){return this._trackedCollection.initialState}get updates(){return this._trackedCollection.updates}get actionMenuContext(){return{activeCollectionId:this.uid,isTransient:this.isTransient,canEditEntity:e.get(this.collectionItem,"permissions.edit",!0),collection:this.collectionItem}}setSavingState(e){this.isSaving=e}fetchWatchersListPermissions(){return this.collectionItem.hydratePermissions(["viewCollectionWatchers"]).then((()=>{this.set("isWatchersListDisabled",!e.get(this.collectionItem,"permissions.viewCollectionWatchers"))})).catch((e=>{pm.logger.warn("CollectionWorkbenchModel~fetchWatchersListPermissions: Failed to get watchersList permissions",e)}))}updateTeamId(){return Object(V.getCollectionTeamId)(this.uid).then((e=>{this.set("team",e)})).catch((e=>{pm.logger.warn("CollectionWorkbenchModel~updateTeamId: Failed to get team ID",e)}))}updateWatchersCount(){return Object(M.getModelWatchersCount)("collection",this.uid).then((e=>{this.set("watchersCount",e)})).catch((e=>{pm.logger.warn("CollectionWorkbenchModel~updateWatchersCount: Failed to get watchers count",e)}))}updateWatchingStatus(){return Object(M.isWatchingModel)("collection",this.uid).then((e=>{this.set("isWatching",e)})).catch((e=>{pm.logger.warn("CollectionWorkbenchModel~updateWatchingStatus: Failed to get watching status",e)}))}toggleWatchingStatus(){this.set("isWatchDisabled",!0);const e=this.isWatching?B.ACTION_TYPE_UNWATCH:B.ACTION_TYPE_WATCH;Object(V.collectionActions)(this.uid,e,null,(()=>{Promise.all([this.updateWatchingStatus(),this.updateWatchersCount()]).then((()=>{this.set("isWatchDisabled",!1)}))}))}async getWatchersList(){await this.fetchWatchersListPermissions(),this.isWatchersListDisabled||(this.set("isWatchersLoading",!0),Object(M.getModelWatchers)("collection",this.uid).then((e=>{this.set("watchersList",e.list),this.set("watchersCount",e.count)})).catch((e=>{pm.logger.warn("CollectionWorkbenchModel~getWatchersList: Failed to get watchers list",e)})).finally((()=>{this.set("isWatchersLoading",!1)})))}handleIncomingUpdates(e,t,n){e&&Object(y.transaction)((()=>{this._trackedCollection.setInitialState(this.transform(e,t)),this.set("authSession",n?n.value:null)}))}resetTracking(){this._trackedCollection.reset({auth:this.auth,preRequestScript:this.preRequestScript,tests:this.tests,variables:this.variables,protocolProfileBehavior:this.protocolProfileBehavior})}resetUpdates(e){this._trackedCollection.set(e)}transform(t,n){if(t)return e.assign(e.pick(t,["auth","protocolProfileBehavior"]),{variables:n?Object(S.zipVariables)(t.variables,n.values,!0):t.variables||[]},function(t){if(e.isEmpty(t))return{};const n=new v.EventList({},Array.isArray(t.events)?t.events:[]),r=e.head(n.listenersOwn("prerequest")),a=e.head(n.listenersOwn("test"));return{preRequestScript:e.isEmpty(r)?"":e.invoke(r,"script.toSource"),tests:e.isEmpty(a)?"":e.invoke(a,"script.toSource")}}(t));pm.logger.warn("CollectionWorkbenchModel~transform: Collection not found")}get collection(){return e.pick(this,this.constructor.editableKeys)}set(e,t){this[e]=t}setAuthType(t){if(e.get(this.auth,"type")!==t)return t===R.AUTH_TYPE_RAW_NO_AUTH?this.set("auth",null):void this.set("auth",{type:t,[t]:Object(C.getDefaultAuthProps)(t)})}setAuthField(e,t,n){const r={type:e,[e]:Object(C.setAuthValue)(this.auth,e,t,n)};this.set("auth",r)}deleteAuthField(e,t){const n={type:e,[e]:Object(C.deleteAuthValue)(this.auth,e,t)};this.set("auth",n)}setAuthSessionField(e,t,n){const r={type:e,[e]:Object(C.setAuthValue)(this.authSession,e,t,n)};this.set("authSession",r)}requestSave(){x.default.requestSave({id:Object(T.getStore)("ActiveWorkspaceSessionStore").activeEditor})}save(t){if(!this.isDirty)return Promise.resolve();if(!this.collectionId)return pm.logger.error("CollectionWorkbenchController~save: Collection id not found"),Promise.reject(new Error("Collection id not found"));const{variables:n,sessionVariables:r}=Object(S.unzipVariables)(this.variables),a=e.get(this.collectionItem,"permissions.edit",!0);return this.isTransient?Promise.resolve().then((()=>{const t=new v.Event({listen:"prerequest",script:this.preRequestScript}),r=new v.Event({listen:"test",script:this.tests}),a=e.pick(this,["auth","protocolProfileBehavior"]),i=O.default.find(this.collectionId).model;a.events=new v.EventList({},[t,r]).toJSON(),i.update(W({id:this.collectionId},a,{variables:n}))})).then((()=>this.updateSession(r))).then((()=>this.resetTracking())).catch((e=>(pm.logger.error("Error while updating collection or it's session",e),pm.toasts.error("Something went wrong while saving the collection.",{dedupeId:"collection-tab-save"}),Promise.reject(new Error("Error while updating collection or it's session"))))):Object(T.getStore)("OnlineStatusStore").userCanSave?Object(D.isWorkspaceMember)()?Promise.resolve().then((()=>{if(!a)return Promise.resolve();const r=new v.Event({listen:"prerequest",script:this.preRequestScript}),i=new v.Event({listen:"test",script:this.tests});let o=e.pick(this,["auth","protocolProfileBehavior"]);o.events=new v.EventList({},[r,i]).toJSON(),o=Object(y.toJS)(o,{recurseEverything:!0}),this.setSavingState(!0),t(e.assign({id:this.collectionId,variables:n},o)).finally((()=>this.setSavingState(!1))).catch((e=>{pm.logger.error("Error while updating collection",e),pm.toasts.error("Something went wrong while saving the collection.",{dedupeId:"collection-tab-save"})}))})).then((()=>this.resetTracking())).then((()=>this.updateSession(r))).catch((e=>(this.setSavingState(!1),pm.logger.error("Error while updating collection or it's session",e),pm.toasts.error("Something went wrong while saving the collection.",{dedupeId:"collection-tab-save"}),Promise.reject(new Error("Error while updating collection or it's session"))))):Object(D.canJoinWorkspace)()?pm.mediator.trigger("openUnjoinedWorkspaceModal"):Object(D.isLoggedIn)()?pm.toasts.error("You do not have permissions required to perform the action."):pm.mediator.trigger("showSignInModal",{type:"collection",origin:"save_collection"}):Object(F.showOfflineActionDisabledToast)()}updateSession(t){const n=Object(T.getStore)("ActiveWorkspaceStore").id,r=Object(S.getSessionId)(U.COLLECTION,this.collectionId,n,this.isTransient);return I.default.get({id:r}).then((a=>{if(a)return k.default.addEvent("session","user_edit","collection"),Object(E.default)(Object(A.createEvent)("update",U.SESSION,e.assign({},e.cloneDeep(a),{values:t})));if(!e.isEmpty(t)){const e={id:r,model:U.COLLECTION,modelId:this.collectionId,workspace:n,values:t};return k.default.addEvent("session","user_create","collection"),Object(E.default)(Object(A.createEvent)("create",U.SESSION,e))}}))}updateAuthSession(){const t=Object(T.getStore)("ActiveWorkspaceStore").id,n=Object(S.getSessionId)(U.COLLECTION,this.collectionId,t);return w.default.get({id:n}).then((r=>{if(r)return Object(E.default)(Object(A.createEvent)("update",U.AUTH_SESSION,e.assign({},e.cloneDeep(r),{value:Object(y.toJS)(this.authSession)})));if(!e.isEmpty(this.authSession)){const e={id:n,model:U.COLLECTION,modelId:this.collectionId,workspace:t,value:Object(y.toJS)(this.authSession)};return Object(E.default)(Object(A.createEvent)("create",U.AUTH_SESSION,e))}}))}unsetContext(e){this.additionalContext&&delete this.additionalContext[e]}getActions(){const t=Object(T.getStore)("CurrentUserStore"),n=Object(T.getStore)("ActiveWorkspacePermissionStore"),r=n&&n.permissions,a=Object(T.getStore)("ForkedCollectionStore").find(this.uid),i=Boolean(a&&a.id),{userCanSave:o,userCanSaveAndSync:s}=Object(T.getStore)("OnlineStatusStore"),l=Object(T.getStore)("CurrentUserStore").isLoggedIn;return this.isTransient?[{type:B.ACTION_TYPE_DOWNLOAD,label:"Export",isEnabled:!0,xpathLabel:"export"}]:[{type:B.ACTION_TYPE_MOVE,label:"Move",isEnabled:s&&e.get(r,P.WORKSPACE_PERMISSIONS.REMOVE_COLLECTION_FROM_WORKSPACE,!0),xpathLabel:"move"},{type:B.ACTION_TYPE_FORK,label:"Create a fork",isEnabled:l&&s,xpathLabel:"fork"},{type:B.ACTION_TYPE_PULL_REQUEST,label:"Create pull request",isEnabled:l&&s&&i,xpathLabel:"pull-request"},{type:B.ACTION_TYPE_MERGE,label:"Merge changes",isEnabled:l&&s&&i,xpathLabel:"merge"},{type:B.ACTION_TYPE_PULL_CHANGES,label:"Pull changes",isEnabled:l&&s&&this.isFork&&this.userCanPullChanges&&this.isOutOfSync,xpathLabel:"pull-changes",userCanPullChanges:this.userCanPullChanges,isFork:this.isFork,isOutOfSync:this.isOutOfSync},{type:B.ACTION_TYPE_VIEW_CHANGELOG,label:"View Changelog",isEnabled:s,xpathLabel:"view-changelog"},{type:B.ACTION_TYPE_DOWNLOAD,label:"Export",isEnabled:!0,xpathLabel:"export"},{type:B.ACTION_MANAGE_ROLES,label:"Manage roles",isEnabled:s&&!!t.team&&!Object(N.isPublicUserForWorkspace)(),xpathLabel:"manageRoles"},{type:B.ACTION_TYPE_DELETE,label:"Delete",shortcut:"delete",isEnabled:o&&e.get(this.collectionItem,"permissions.delete",!0),xpathLabel:"delete"}]}}).editableKeys=["auth","preRequestScript","tests","variables","protocolProfileBehavior"],a=K((r=b).prototype,"isFork",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),i=K(r.prototype,"isOutOfSync",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),o=K(r.prototype,"userCanPullChanges",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),s=K(r.prototype,"activeTab",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return _.COLLECTION_AUTHORIZATION}}),l=K(r.prototype,"isSaving",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),c=K(r.prototype,"team",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),u=K(r.prototype,"watchersCount",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),d=K(r.prototype,"isWatching",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),h=K(r.prototype,"isWatchDisabled",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),p=K(r.prototype,"isWatchersLoading",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),m=K(r.prototype,"isWatchersListDisabled",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),f=K(r.prototype,"watchersList",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),g=K(r.prototype,"authSession",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),K(r.prototype,"name",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"name"),r.prototype),K(r.prototype,"setOutOfSyncStatuses",[y.action],Object.getOwnPropertyDescriptor(r.prototype,"setOutOfSyncStatuses"),r.prototype),K(r.prototype,"preRequestScript",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"preRequestScript"),r.prototype),K(r.prototype,"tests",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"tests"),r.prototype),K(r.prototype,"auth",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"auth"),r.prototype),K(r.prototype,"variables",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"variables"),r.prototype),K(r.prototype,"protocolProfileBehavior",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"protocolProfileBehavior"),r.prototype),K(r.prototype,"isDirty",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"isDirty"),r.prototype),K(r.prototype,"initialState",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"initialState"),r.prototype),K(r.prototype,"updates",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"updates"),r.prototype),K(r.prototype,"actionMenuContext",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"actionMenuContext"),r.prototype),K(r.prototype,"setSavingState",[y.action],Object.getOwnPropertyDescriptor(r.prototype,"setSavingState"),r.prototype),K(r.prototype,"collection",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"collection"),r.prototype),K(r.prototype,"set",[y.action],Object.getOwnPropertyDescriptor(r.prototype,"set"),r.prototype),r)}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/collection/workbench/CollectionWorkbenchView.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return S}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),c=n("./js/stores/StoreManager.js"),u=n("./js/stores/SyncStatusStore.js"),d=n("./runtime-repl/extensible-collection/workbench/ExtensibleCollectionWorkbenchController.ts"),h=n("./runtime-repl/extensible-collection/workbench/ExtensibleCollectionEditor/ExtensibleCollectionEditor.js"),p=n("./runtime-repl/extensible-collection/workbench/ExtensibleCollectionWorkbenchModel.ts"),m=n("./runtime-repl/extensible-collection/api/ExtensibleCollectionAPI.ts"),f=n("./growth/foundation/public/amplitude/AmplitudeService.js"),g=n("./runtime-repl/_common/components/molecule.js"),b=n("./runtime-repl/collection/workbench/CollectionEditor/CollectionEditor.js"),y=n("./js/services/NavigationService.js"),v=n("./js/components/network/NetworkTrouble.js"),T=n("./runtime-repl/collection/workbench/CollectionWorkbenchModel.js"),A=n("./runtime-repl/_common/WorkbenchStatusConstants.js"),E=n("./runtime-repl/_common/components/EntityTabEmptyShell/EntityTabEmptyShell.js");let S=Object(l.observer)(r=class extends a.Component{render(){const{extensibleCollectionController:t,collectionId:n,status:r,model:a}=this.props.controller,o=this.props.id,s=t?m.default.cacheAPI.get(n):a&&a.collectionItem,l=e.get(a,"isTransient");if(Object(c.resolveStoreInstance)(u.default).isConsistentlyOffline&&!s&&!l)return i.a.createElement(v.default,{origin:"workbench",title:"Unable to load collections",entity:"collection"});if(r===A.ERROR){const t=y.default.getActiveQueryParams().get();return"share"===e.get(t,"action")&&f.Ampli.shareEntityLinkError({entity_type:"collection",error_type:"collectionNotFound"}),i.a.createElement(g.EntityTabLoadingError,{type:"error",userFriendlyEntityName:"collection"})}return r===A.DELETED?i.a.createElement(g.EntityTabLoadingError,{type:"deleted",userFriendlyEntityName:"collection"}):r===A.READY&&(s||l)?t?i.a.createElement(h.default,{editorId:o,model:a}):i.a.createElement(b.default,{editorId:o,model:a}):i.a.createElement(E.default,null)}})||r;S.propTypes={controller:s.a.shape({model:s.a.oneOfType([s.a.instanceOf(T.default),s.a.instanceOf(p.default)]),status:s.a.oneOf([A.ERROR,A.DELETED,A.READY,A.LOADING]),extensibleCollectionController:s.a.instanceOf(d.default)}).isRequired,id:s.a.string.isRequired}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/collection/workbench/Experiment/ShareCollectionTrialModal.js":function(e,t,n){"use strict";n.r(t);var r=n("./node_modules/prop-types/index.js"),a=n.n(r),i=n("../../node_modules/react/index.js"),o=n.n(i),s=n("../../node_modules/@postman/aether/esmLib/index.js"),l=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),c=n("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),u=n("./runtime-repl/collection/_api/CollectionInterface.js"),d=n("./growth/conversion/stores/GrowthConversionExperimentStore.js"),h=n("./runtime-repl/collection/workbench/Experiment/helper.js"),p=n("./growth/foundation/public/amplitude/AmplitudeService.js"),m=n("./growth/conversion/stores/GrowthConversionExperimentConstants.js");function f(){return f=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},f.apply(this,arguments)}const g=[{Icon:s.IconStateSuccessStrokeSmall,iconColor:"content-color-success",heading:"Start Trial",description:"You successfully started the Postman Basic Trial."},{Icon:s.IconDescriptiveTeamStrokeSmall,iconColor:"content-color-primary",heading:"Invite Collaborators",description:"Invite unlimited people to your Postman collections for free."},{Icon:s.IconActionFavoriteStrokeSmall,iconColor:"content-color-primary",heading:"Upgrade or continue for free",description:"On day 14, receive a notification to upgrade or return to the Free plan with 3 members."}],b={type:"secondary",text:"Maybe Later"},y={type:"primary",text:"Invite People"},v=c.default.div`
    display: flex;
    justify-content: center;
    width: 40%;
    background-color: var(--background-color-secondary);
  `,T=({canEdit:e,name:t,id:n})=>{const[r,a]=Object(i.useState)(!1),{collectionShareTrialModal:c}=d.default;if(Object(i.useEffect)((()=>{c.isEnabled&&(async()=>{await Object(h.hydrateStore)(),Object(h.shouldShowModal)(c.dismissedCoolOffPeriod)&&setTimeout((()=>{Object(h.updateStore)({viewed:!0,viewedTimestamp:(new Date).getTime()}),a(!0),Object(p.ampliIdentifyExperimentV2)({experimentId:m.COLLECTION_SHARE_TRIAL_MODAL.key,variationId:c.variation}),Object(h.recordAnalyticsEvent)({meta:Object(p.getAmpliModalViewedProperties)(),action:"Share Collection Trial Modal - Viewed",key:"shareCollectionTrialModalViewed"})}),1e3*c.modalViewDelay)})()}),[c.isEnabled]),!r||!e)return null;const T=()=>{const{collectionShareTrialModal:e}=d.default;return e.isEnabled?o.a.createElement(s.Modal,{isOpen:r,size:"medium",onClose:()=>a(!1)},o.a.createElement(s.Flex,null,o.a.createElement(s.Flex,{width:"60%"},o.a.createElement(s.Flex,{gap:"spacing-l",direction:"column",padding:{paddingLeft:"spacing-xxl",paddingTop:"spacing-xxxl",paddingBottom:"spacing-xxxl"},width:"100%",shrink:1},o.a.createElement(s.Heading,{type:"h3",text:"Share with more people, no CC required",color:"content-color-primary"}),g.map((({Icon:e,heading:t,description:n,iconColor:r})=>o.a.createElement(s.Flex,{gap:"spacing-s"},o.a.createElement("div",null,o.a.createElement(e,{color:r})),o.a.createElement(s.Flex,{direction:"column",width:"90%"},o.a.createElement(s.Heading,{type:"h6",text:t,color:"content-color-primary"}),o.a.createElement(s.Text,{type:"body-medium",color:"content-color-primary"},n))))),o.a.createElement(s.Flex,{gap:"spacing-s",padding:{paddingTop:"spacing-l"}},o.a.createElement(s.Button,f({},y,{onClick:()=>{Object(u.collectionActions)(n,"share",{},{origin:"collectionShareTrialModal",name:t},(()=>{a(!1),Object(h.recordAnalyticsEvent)({meta:Object(p.getAmpliCTAProperties)(y),action:"Share Collection Trial Modal - Invite - Clicked",key:"shareCollectionTrialModalInviteClicked"})}))}})),o.a.createElement(s.Button,f({},b,{onClick:()=>{Object(h.updateStore)({clickedMaybeLater:!0,clickedMaybeLaterTimestamp:(new Date).getTime()}),a(!1),Object(h.recordAnalyticsEvent)({meta:Object(p.getAmpliCTAProperties)(b),action:"Share Collection Trial Modal - Maybe Later - Clicked",key:"shareCollectionTrialModalMaybeLaterClicked"})}}))))),o.a.createElement(v,null,o.a.createElement(s.Flex,{alignSelf:"center",jusitfyContent:"center"},o.a.createElement(s.IllustrationJoinTeam,null))))):null};return o.a.createElement(l.Observer,null,T)};T.propTypes={canEdit:a.a.bool,id:a.a.string,name:a.a.string},t.default=T},"./runtime-repl/extensible-collection/constants/ExtensibleCollectionConstants.ts":function(e,t,n){"use strict";n.r(t),n.d(t,"EXTENSIBLE_COLLECTION_INFO",(function(){return r})),n.d(t,"EXTENSIBLE_COLLECTION_CHANGELOG",(function(){return a}));const r="extensible-collection-info",a="extensible-collection-changelog"},"./runtime-repl/extensible-collection/workbench/ExtensibleCollectionEditor/ExtensibleCollectionEditor.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return y}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),c=n("./js/components/base/Panes.js"),u=n("./js/constants/AppSettingsDefaults.js"),d=n("./js/constants/Panes.js"),h=n("./appsdk/contextbar/ContextBar.js"),p=n("./collaboration/constants/comments.js"),m=n("../../packages/version-control/change-management/index.ts"),f=n("./runtime-repl/extensible-collection/constants/ExtensibleCollectionConstants.ts"),g=n("./runtime-repl/extensible-collection/workbench/ExtensibleCollectionEditorContent/ExtensibleCollectionEditorContentPane.js"),b=n("./runtime-repl/extensible-collection/workbench/ExtensibleCollectionWorkbenchModel.ts");let y=Object(l.observer)(r=class extends a.Component{render(){const{model:e}=this.props;return i.a.createElement(c.PaneGroup,{defaultLayout:d.PANE_LAYOUT_HORIZONTAL},i.a.createElement(g.default,{width:{min:u.default.ui.WORKBENCH_MIN_WIDTH},className:"extensible-collection-editor",model:e}),i.a.createElement(h.ContextBarPane,{allowedContexts:[p.COMMENTS_CONTEXT_IDENTIFIER,f.EXTENSIBLE_COLLECTION_CHANGELOG,m.FORK_LIST_CONTEXT_BAR_VIEW,f.EXTENSIBLE_COLLECTION_INFO],contextData:{collectionId:e.collectionId,collectionInfo:e.collectionInfo,modelId:e.collectionId,model:p.MODEL_TYPE.EXTENSIBLE_COLLECTION,modelType:p.MODEL_TYPE.EXTENSIBLE_COLLECTION,anchor:`${p.MODEL_TYPE.EXTENSIBLE_COLLECTION}/${e.collectionId}`},width:u.default.ui.CONTEXT_BAR_WIDTH_CONFIG,collapsedByDefault:!0,editorId:this.props.editorId}))}})||r;y.propTypes={model:s.a.instanceOf(b.default).isRequired,editorId:s.a.string.isRequired}},"./runtime-repl/extensible-collection/workbench/ExtensibleCollectionEditorContent/ExtensibleCollectionEditorContentPane.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return j}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("./node_modules/classnames/index.js"),c=n.n(l),u=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),d=n("../../node_modules/@postman/aether/esmLib/index.js"),h=n("./js/components/base/Panes.js"),p=n("./runtime-repl/_common/components/compound.js"),m=n("./runtime-repl/collection/CollectionModalTabContents.js"),f=n("./runtime-repl/collection/CollectionModalTabContent.js"),g=n("./runtime-repl/collection/CollectionVariablesProvider.js"),b=n("./runtime-repl/_common/_api/RuntimePreferenceInterface.js"),y=n("./runtime-repl/collection/CollectionModalTabsConstants.js"),v=n("./js/constants/AppUrlConstants.js"),T=n("./runtime-repl/_common/RuntimePreferenceConstants.js"),A=n("./runtime-repl/extensible-collection/api/ExtensibleCollectionAPI.ts"),E=n("./runtime-repl/extensible-collection/types/ExtensibleCollectionTypes.ts"),S=n("./js/external-navigation/ExternalNavigationService.js"),C=n("./runtime-repl/extensible-collection/workbench/ExtensibleCollectionEditorHeader/ExtensibleCollectionEditorHeader.js"),k=n("./runtime-repl/extensible-collection/workbench/ExtensibleCollectionWorkbenchModel.ts"),I=n("./runtime-repl/extensible-collection/workbench/ExtensibleCollectionEditorTabs/ExtensibleCollectionEditorTabs.js"),w=n("./runtime-repl/extensible-collection/workbench/Overview.jsx");function x(){return x=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},x.apply(this,arguments)}let j=Object(u.observer)(r=class extends h.Pane{constructor(e){super(e),this.handleTabSelect=this.handleTabSelect.bind(this),this.handleVariablesChange=this.handleVariablesChange.bind(this),this.handleDescriptionSave=this.handleDescriptionSave.bind(this),this.handleSummarySave=this.handleSummarySave.bind(this),this.handleDescriptionChange=this.handleDescriptionChange.bind(this),this.handleDescriptionReset=this.handleDescriptionReset.bind(this),this.onCollectionSave=this.onCollectionSave.bind(this),this.hideBanner=this.hideBanner.bind(this),this.overviewRef=i.a.createRef()}onCollectionSave(){this.overviewRef&&this.overviewRef.current&&this.overviewRef.current.setEditMode(!1)}handleTabSelect(e){this.props.model.set("activeTab",e)}handleVariablesChange(e){this.props.model.set("variables",e)}handleDescriptionChange(e){this.props.model.set("description",e)}handleDescriptionSave(e,t){this.props.model.saveDescription().then((()=>t(null))).catch((e=>{t(e),pm.logger.error("ExtensibleCollectionEditorContentPane~onDescriptionSave",e),pm.toasts.error("Something went wrong while saving the collection description.",{dedupeId:"collection-desc-save"})}))}handleSummarySave(e,t){this.props.model.saveSummary(e).then((()=>t(null))).catch((e=>{t(e),pm.logger.error("ExtensibleCollectionEditorContentPane~handleSummarySave",e),pm.toasts.error("Something went wrong while updating the collection summary.")}))}handleDescriptionReset(){this.props.model.set("description",this.props.model.savedDescription)}hideBanner(){b.default.set(T.BETA_COLLECTION_BANNER_IN_TAB,!1)}render(){const{model:t}=this.props,n=b.default.getObservableStore(),r=e.get(n.find(T.BETA_COLLECTION_BANNER_IN_TAB),"value",!0),a=A.default.hasPermission(t.collectionId,E.ECAction.SAVE),o=x({height:this.state.height,width:this.state.width},this.props.style||{}),s=c()({pane:!0,resizableX:this.isResizable("x"),resizableY:this.isResizable("y"),collapsedX:this.state.collapsedX,collapsedY:this.state.collapsedY},this.props.className);return i.a.createElement("div",{className:s,style:o},i.a.createElement(C.default,{model:t,onCollectionSave:this.onCollectionSave}),i.a.createElement(h.PaneContent,null,i.a.createElement("div",{className:"extensible-collection-editor-content"},a&&r&&i.a.createElement(d.Banner,{status:"info",type:"global",onDismiss:this.hideBanner,primaryAction:i.a.createElement(d.Button,{type:"outline",size:"small",text:"Learn more",onClick:()=>Object(S.openExternalLink)(v.BETA_COLLECTIONS,"_blank")})},"Collections with WebSocket and gRPC requests have limited functionality for now. You’ll be able to do more soon."),i.a.createElement(I.default,{width:this.state.width,onSelect:this.handleTabSelect,activeTab:t.activeTab,hasVariables:!e.isEmpty(t.variables)}),i.a.createElement(g.default,{collectionVariables:t.variables},i.a.createElement(m.default,{activeKey:t.activeTab},i.a.createElement(f.default,{key:y.COLLECTION_OVERVIEW},i.a.createElement(w.default,{entityType:"collection",ref:this.overviewRef,hasPermission:a,info:t.collectionInfo,enableSummary:!0,summary:t.summary,onSummarySave:this.handleSummarySave,description:t.description,savedDescription:t.savedDescription,onDescriptionSave:this.handleDescriptionSave,onDescriptionReset:this.handleDescriptionReset,onDescriptionChange:this.handleDescriptionChange})),i.a.createElement(f.default,{key:y.COLLECTION_VARIABLES},i.a.createElement(p.VariablesEditor,{entityType:"collection",meta:{text:"These variables are specific to this collection and its requests.",link:v.VARIABLE_DOCS,linkText:"Learn more about collection variables."},values:t.variables||[],isEntityEditable:a,onChange:this.handleVariablesChange,className:"extensible-collection-editor-content__variables-editor"})),i.a.createElement(f.default,{key:y.COLLECTION_TESTS},i.a.createElement(d.BlankState,{title:"Coming soon",description:"You’ll be able to add tests to this collection soon."},i.a.createElement(d.IllustrationTestPass,null))))))))}})||r;j.propTypes={model:s.a.instanceOf(k.default).isRequired}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/extensible-collection/workbench/ExtensibleCollectionEditorHeader/ExtensibleCollectionEditorHeader.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return v}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("./node_modules/prop-types/index.js"),s=n.n(o),l=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),c=n("../../node_modules/@postman/aether/esmLib/index.js"),u=n("./runtime-repl/collection/CollectionMetaIcons.js"),d=n("./runtime-repl/_common/components/EntityTabHeader/index.js"),h=n("./runtime-repl/collection/view/CollectionActionsDropdown.js"),p=n("./runtime-repl/_common/DisabledTooltipConstants.js"),m=n("../../packages/version-control/change-management/index.ts"),f=n("./runtime-repl/extensible-collection/api/ExtensibleCollectionAPI.ts"),g=n("./runtime-repl/extensible-collection/types/ExtensibleCollectionTypes.ts"),b=n("./runtime-repl/extensible-collection/workbench/ExtensibleCollectionWorkbenchModel.ts"),y=n("./runtime-repl/extensible-collection/helpers/ForkValidationHelper.ts");let v=Object(l.observer)(r=class extends a.Component{constructor(e){super(e),this.handleSave=this.handleSave.bind(this),this.renderDecorators=this.renderDecorators.bind(this),this.handleActions=this.handleActions.bind(this),this.renderActions=this.renderActions.bind(this),this.handleNameUpdate=this.handleNameUpdate.bind(this)}getTooltipTextForSave(e,t){return e?t?this.props.model.isDirty?"Save collection":"No new changes to save.":p.DISABLED_TOOLTIP_NO_PERMISSION:p.DISABLED_TOOLTIP_IS_OFFLINE}handleActions(t,n={}){f.default.menuActionHandler(this.props.model.collectionId,t,n,{},(()=>{if(t===g.ECAction.RENAME_TOGGLE)e.invoke(this.collectionEditorHeader,"handleEditName")}))}handleNameUpdate(e){this.handleActions(g.ECAction.RENAME,{name:e})}handleSave(){this.props.model.requestWorkbenchSave&&this.props.model.requestWorkbenchSave(),this.props.onCollectionSave&&this.props.onCollectionSave()}renderActions(e,t){const n=!e||!t&&!this.props.model.hasVariablesToSave||!this.props.model.isDirty;return i.a.createElement("div",{className:"extensible-collection-editor-header__actions"},i.a.createElement(m.ForkButton,{modelId:this.props.model.collectionId,modelType:"extensibleCollection",validateForkAction:async()=>Object(y.checkUserSignInForFork)(this.props.model.collectionId)}),i.a.createElement(c.Button,{type:"tertiary",text:"Save",icon:"icon-action-save-stroke",tooltip:i.a.createElement(c.Tooltip,{content:this.getTooltipTextForSave(e,t||this.props.model.hasVariablesToSave),placement:"bottom"}),isDisabled:n,onClick:this.handleSave}),i.a.createElement(h.default,{onSelect:this.handleActions,actions:this.props.model.actions}))}renderDecorators(){return i.a.createElement(u.default,{collection:f.default.cacheAPI.get(e.get(this.props.model,"collectionId"))})}render(){const{model:e}=this.props,t=f.default.isOnline(),n=f.default.hasPermission(e.collectionId,g.ECAction.SAVE);return i.a.createElement(d.default,{ref:e=>{this.collectionEditorHeader=e},name:e.title,placeholder:"Collection Name",isEntityEditable:t&&n,onSubmit:this.handleNameUpdate,renderActions:()=>this.renderActions(t,n),renderDecorators:this.renderDecorators,entityUID:e.collectionId,entityType:"collection"})}})||r;v.propTypes={model:s.a.instanceOf(b.default).isRequired}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/extensible-collection/workbench/ExtensibleCollectionEditorTabs/ExtensibleCollectionEditorTabs.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("./runtime-repl/_common/components/EntityEditorTabs.js"),o=n("./runtime-repl/_common/ListTypeConstants.js"),s=n("./runtime-repl/collection/CollectionModalTabsConstants.js");class l extends r.Component{getMeta(e){return e&&a.a.createElement("div",{className:"collection-modal-tabs-badge"})}getTabsList(){return[{refKey:s.COLLECTION_OVERVIEW,label:"Overview"},{refKey:s.COLLECTION_VARIABLES,label:"Variables",getBadge:()=>this.getMeta(this.props.hasVariables)},{refKey:s.COLLECTION_TESTS,label:"Tests"}]}render(){let e=o.HORIZONTAL_LIST;return this.props.width<400?e=o.DROPDOWN:this.props.width<530&&(e=o.SHORT_HORIZONTAL_LIST),a.a.createElement(i.default,{activeTab:this.props.activeTab,tabsList:this.getTabsList(),tabsListType:e,onTabSelect:this.props.onSelect})}}l.defaultProps={hasVariables:!1}},"./runtime-repl/extensible-collection/workbench/ExtensibleCollectionWorkbenchController.ts":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return g}));var r=n("./node_modules/lodash/lodash.js"),a=n.n(r),i=n("./runtime-repl/_common/datastores/controllers/VariableSessionController.js"),o=n("./runtime-repl/_common/VariableSessionHelper.js"),s=n("./runtime-repl/_common/VariableSessionService.js"),l=n("./js/stores/get-store.js"),c=n("./js/modules/services/DBResourceWatcher.js"),u=n("./js/services/EditorService.js"),d=n("./runtime-repl/_common/WorkbenchStatusConstants.js"),h=n("./runtime-repl/_common/ModelConstant.js"),p=n("./collaboration/services/CollaborationNavigationService.js"),m=n("./runtime-repl/extensible-collection/api/ExtensibleCollectionAPI.ts"),f=n("./runtime-repl/extensible-collection/workbench/ExtensibleCollectionWorkbenchModel.ts");class g{constructor(e){this.$controller=e,this.handleResourceChangedDebounced=a.a.debounce(this.$controller.handleResourceChanged.bind(this.$controller),500)}handleSessionCreatedOrUpdated(e){this.$controller.model?(this.$controller.session=e,m.default.get(this.$controller.collectionId).then((t=>{this.handleResourceChangedDebounced(t,e,null)})).catch((e=>{pm.logger.error("ExtensibleCollectionWorkbenchController~handleCollectionChanged: Error in fetching collection.",e)}))):pm.logger.warn("ExtensibleCollectionWorkbenchController~handleSessionCreatedOrChanged: Model not found")}handleCollectionUpdated(e){this.$controller.model?(this.$controller.setTitle(e.title),(this.$controller.session?Object(s.getSessionFor)(this.$controller.sessionId,e):Promise.resolve()).then((t=>{this.handleResourceChangedDebounced(e,t,null)})).catch((e=>{pm.logger.error("ExtensibleCollectionWorkbenchController~handleCollectionChanged: Error in fetching sessions",e)}))):pm.logger.error("ExtensibleCollectionWorkbenchController~handleCollectionChanged: Model not found")}handleCollectionDeleted(){u.default.close({id:this.$controller.getTabId()},{force:!0})}subscribeIncomingChanges(){!this.$controller.sessionWatcherId&&(this.$controller.sessionWatcherId=c.default.watch({model:h.SESSION,modelId:this.$controller.sessionId},{onCreated:this.handleSessionCreatedOrUpdated.bind(this),onChanged:this.handleSessionCreatedOrUpdated.bind(this)})),!this.collectionChangeListenersDisposer&&this.$controller.collectionId&&(this.collectionChangeListenersDisposer=m.default.cacheAPI.subscribeToChanges({onUpdate:this.handleCollectionUpdated.bind(this),onDelete:this.handleCollectionDeleted.bind(this)},{collectionId:this.$controller.collectionId}))}unsubscribeIncomingChanges(){this.collectionChangeListenersDisposer&&this.collectionChangeListenersDisposer(),this.collectionChangeListenersDisposer=null,this.$controller.sessionWatcherId&&c.default.unwatch({model:h.SESSION,modelId:this.$controller.sessionId},this.$controller.sessionWatcherId),this.$controller.sessionWatcherId=null}didCreate({routeParams:e,queryParams:t}){const n=a.a.get(t,"comment");this.$controller.collectionId=e&&e.cid,this.$controller.setWorkbenchStatus(d.LOADING),m.default.get(this.$controller.collectionId).then((t=>t?(this.$controller.sessionId=Object(o.getSessionId)(h.COLLECTION,t.id,Object(l.getStore)("ActiveWorkspaceBaseStore").id),a.a.isEmpty(a.a.get(t,"payload.variables"))?i.default.get({id:this.$controller.sessionId}).then((e=>({collection:t,session:e}))):Object(s.getSessionFor)(this.$controller.sessionId,t).then((n=>n?{collection:t,session:n}:Promise.reject(new Error(`ExtensibleCollectionWorkbenchController~didCreate: Session for collection '${e.cid}' not found`))))):Promise.reject(new Error(`ExtensibleCollectionWorkbenchController~didCreate: Collection '${e.cid}' not found`)))).then((({collection:e,session:t})=>{this.$controller.session=t,this.$controller.model=new f.default(e,t),this.$controller.attachTrackedState(this.$controller.model._trackedCollection,this.$controller.model.save.bind(this.$controller.model),{persist:!0}),this.$controller.setTitle(e.title),this.$controller.setConflictOptions({entityType:"collection"}),this.$controller.restoreCollectionState(),this.subscribeIncomingChanges(),this.$controller.setWorkbenchStatus(d.READY)})).then((()=>{n&&p.default.handleOpenComment(this.$controller.collectionId,n)})).catch((e=>{pm.logger.error("ExtensibleCollectionWorkbenchController~didCreate: Error in loading collection or its sessions",e),this.$controller.setWorkbenchStatus(d.ERROR)}))}beforeDestroy(){this.unsubscribeIncomingChanges&&this.unsubscribeIncomingChanges()}}},"./runtime-repl/extensible-collection/workbench/ExtensibleCollectionWorkbenchModel.ts":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return v}));var r=n("./node_modules/lodash/lodash.js"),a=n.n(r),i=n("../../node_modules/mobx/lib/mobx.module.js"),o=n("./runtime-repl/_common/VariableSessionHelper.js"),s=n("./appsdk/tracked-state/ObservableTrackedState.js"),l=n("./js/services/EditorService.js"),c=n("./runtime-repl/collection/CollectionModalTabsConstants.js"),u=n("./js/stores/get-store.js"),d=n("./js/common/model-event.js"),h=n("./js/modules/pipelines/user-action.js"),p=n("./runtime-repl/_common/datastores/controllers/VariableSessionController.js"),m=n("./runtime-repl/_common/ModelConstant.js"),f=n("./runtime-repl/_common/VariableSessionService.js"),g=n("./runtime-repl/extensible-collection/types/ExtensibleCollectionTypes.ts"),b=n("./runtime-repl/extensible-collection/api/ExtensibleCollectionAPI.ts"),y=function(e,t,n,r){var a,i=arguments.length,o=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(a=e[s])&&(o=(i<3?a(o):i>3?a(t,n,o):a(t,n))||o);return i>3&&o&&Object.defineProperty(t,n,o),o};class v{constructor(e,t){var n,r;this.activeTab=c.COLLECTION_OVERVIEW,this.collectionId=e.id,this.title=e.title,this.summary=(null===(r=null===(n=e.extensions)||void 0===n?void 0:n.documentation)||void 0===r?void 0:r.summary)||"",this.collectionInfo={createdBy:e.createdBy,createdAt:e.createdAt},this._trackedCollection=new s.ObservableTrackedState(this.transform(e,t))}set(e,t){this[e]=t}transform(e,t){if(!e)return void pm.logger.warn("ExtensibleCollectionWorkbenchModel~transform: Collection not found");const n=Object(f.mapDisableToEnable)(a.a.get(e,"payload.variables",[]));return{description:a.a.get(e,"extensions.documentation.content",""),variables:t?Object(o.zipVariables)(n,t.values):n}}getCollectionForStorage(){const{variables:e}=Object(o.unzipVariables)(this.variables);return Object(i.toJS)({id:this.collectionId,payload:{variables:Object(f.mapEnableToDisable)(e)},extensions:{documentation:{content:this.description}}},{recurseEverything:!0})}handleIncomingUpdates(e,t){e&&Object(i.transaction)((()=>{var n,r;this.set("title",e.title),this.set("summary",(null===(r=null===(n=e.extensions)||void 0===n?void 0:n.documentation)||void 0===r?void 0:r.summary)||""),this._trackedCollection.setInitialState(this.transform(e,t))}))}get actions(){return[{type:g.ECAction.DELETE,label:"Delete",shortcut:"delete",isEnabled:b.default.isOnline()&&b.default.hasPermission(this.collectionId,g.ECAction.DELETE)}]}get isDirty(){return this._trackedCollection.isDirty}get initialState(){return this._trackedCollection.initialState}get updates(){return this._trackedCollection.updates}set variables(e){this._trackedCollection.set({variables:e})}get variables(){return this._trackedCollection.get("variables")}set description(e){this._trackedCollection.set({description:e})}get description(){return this._trackedCollection.get("description")}get savedDescription(){return this._trackedCollection.initialState.description}get hasVariablesToSave(){return a.a.has(this._trackedCollection.getDirtyValues(),"variables")}resetTracking(){this._trackedCollection.reset({variables:this.variables,description:this.description})}resetDescriptionTracking(){this._trackedCollection.setInitialState(a.a.assign(a.a.cloneDeep(this.initialState),{description:this.description}))}requestWorkbenchSave(){l.default.requestSave({id:Object(u.getStore)("ActiveWorkspaceSessionStore").activeEditor})}saveDescription(){var e;if(!this.collectionId)return pm.logger.error("ExtensibleCollectionWorkbenchModel~saveDescription: Collection id not found"),Promise.reject(new Error("Collection id not found"));if(!this.isDirty)return Promise.resolve();const t=a.a.cloneDeep(null===(e=b.default.cacheAPI.get(this.collectionId))||void 0===e?void 0:e.extensions);return b.default.update({id:this.collectionId,extensions:a.a.merge(t,{documentation:{content:this.description}})}).then((()=>this.resetDescriptionTracking()))}saveSummary(e){var t;const n=a.a.cloneDeep(null===(t=b.default.cacheAPI.get(this.collectionId))||void 0===t?void 0:t.extensions);return b.default.update({id:this.collectionId,extensions:a.a.merge(n,{documentation:{summary:e}})}).then((()=>{Object(i.runInAction)((()=>{this.summary=e}))}))}save(){return this.collectionId?this.isDirty&&b.default.isOnline(!0)?Promise.resolve().then((()=>b.default.hasPermission(this.collectionId,g.ECAction.SAVE)?b.default.update(this.getCollectionForStorage()):Promise.resolve())).then((()=>{const e=Object(u.getStore)("ActiveWorkspaceBaseStore").id,t=Object(o.getSessionId)(m.COLLECTION,this.collectionId,e),{sessionVariables:n}=Object(o.unzipVariables)(this.variables);return p.default.get({id:t}).then((r=>{if(r)return Object(h.default)(Object(d.createEvent)("update",m.SESSION,a.a.assign({},a.a.cloneDeep(r),{values:n})));if(!a.a.isEmpty(n)){const r={id:t,model:m.COLLECTION,modelId:this.collectionId,workspace:e,values:n};return Object(h.default)(Object(d.createEvent)("create",m.SESSION,r))}}))})).then((()=>this.resetTracking())).catch((e=>(pm.logger.error("Error while updating collection or it's session",e),pm.toasts.error("Something went wrong while saving the ollection.",{dedupeId:"collection-tab-save"}),Promise.reject(new Error("Error while updating collection or it's session"))))):Promise.resolve():(pm.logger.error("ExtensibleCollectionWorkbenchModel~save: Collection id not found"),Promise.reject(new Error("Collection id not found")))}}y([i.observable],v.prototype,"title",void 0),y([i.observable],v.prototype,"summary",void 0),y([i.observable],v.prototype,"activeTab",void 0),y([i.action],v.prototype,"set",null),y([i.computed],v.prototype,"isDirty",null),y([i.computed],v.prototype,"initialState",null),y([i.computed],v.prototype,"updates",null),y([i.computed],v.prototype,"variables",null),y([i.computed],v.prototype,"description",null),y([i.computed],v.prototype,"savedDescription",null),y([i.computed],v.prototype,"hasVariablesToSave",null)},"./runtime-repl/extensible-collection/workbench/Overview.jsx":function(e,t,n){"use strict";n.r(t),function(e){var r=n("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("../../node_modules/@postman/aether/esmLib/index.js"),s=n("../../packages/documentation/documentation-core/index.js"),l=n("./js/stores/get-store.js"),c=n("./runtime-repl/_common/components/EntityMetaInfoView/EntityMetaInfoView.js"),u=n("./runtime-repl/_common/DisabledTooltipConstants.js"),d=n("./documentation/components/DocumentationIntersectionObserver/index.js"),h=n("./runtime-repl/extensible-collection/workbench/Summary.tsx");const p=Object(r.default)(o.Flex)`
  overflow-y: auto;
  padding-top: var(--spacing-l);
`,m=Object(r.default)(o.ResponsiveContainer)`
  width: 100%;
`,f=Object(r.default)(o.ResponsiveContainer)`
  font-size: var(--text-size-m);
  line-height: var(--line-height-m);

  ${e=>e.inEditMode&&r.css`
    height: 100%;
    overflow: unset;
  `}

  .description-editor-wrapper {
    height: 100%;
    overflow: hidden;

    .description-editor__markdown-editor {
      pre {
        word-break: break-word;
      }
    }
  }

  .description-preview {
    overflow: auto;

    &__edit-icon {
      margin-left: var(--spacing-l);
    }

    &__markdown {
      word-break: break-word;
    }
  }
`,g=Object(a.forwardRef)((({entityType:t,info:n,description:r,savedDescription:g,onDescriptionSave:b,onDescriptionReset:y,onDescriptionChange:v=e.noop,summary:T,enableSummary:A=!1,onSummarySave:E=e.noop,hasPermission:S=!0},C)=>{const[k,I]=Object(a.useState)(!1),w=Object(l.getStore)("OnlineStatusStore").userCanSave,x=()=>{I(!1),y()},j=e=>{b(e,(e=>{e||I(!1)}))};return Object(a.useImperativeHandle)(C,(()=>({setEditMode:I}))),i.a.createElement(d.default,null,(({rootRef:e})=>i.a.createElement(p,{grow:1,shrink:1,justifyContent:"center",ref:e},i.a.createElement(m,{type:"row",maxWidth:"container-width-medium",overflow:"unset"},i.a.createElement(o.ResponsiveContainer,{type:"column",span:1,hiddenFor:["mobile"]}),i.a.createElement(f,{type:"column",span:7,mobile:12,minHeight:"100%",inEditMode:k&&w},k&&w?i.a.createElement(s.DescriptionEditor,{entityType:t,description:g,onChange:v,onCancel:x,onSave:j,placeholder:`Make things easier for your teammates with a complete ${t} description.`}):i.a.createElement(s.DescriptionPreview,{entityType:t,description:r,onEditButtonClick:()=>I(!0),editable:w,canEdit:S,showEmptyPlaceholder:!0,tooltip:w?S?null:u.DISABLED_TOOLTIP_NO_PERMISSION:u.DISABLED_TOOLTIP_IS_OFFLINE})),i.a.createElement(o.ResponsiveContainer,{type:"column",span:3,mobile:12,padding:{paddingRight:"spacing-s",paddingLeft:"spacing-s"}},i.a.createElement(o.Flex,{gap:"spacing-l",direction:"column"},A&&i.a.createElement(h.default,{summary:T,placeholder:`Briefly explain this ${t} with a summary.`,isEditable:w&&S,onSubmit:E}),i.a.createElement(c.default,{userFriendlyEntityName:t,info:{createdAt:n.createdAt,owner:n.createdBy}}))),i.a.createElement(o.ResponsiveContainer,{type:"column",span:1,hiddenFor:["mobile"]})))))}));t.default=g}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/extensible-collection/workbench/Summary.tsx":function(e,t,n){"use strict";n.r(t);var r=n("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("../../node_modules/@postman/aether/esmLib/index.js"),s=n("./js/components/base/keymaps/KeyMaps.js");const l=Object(r.default)(o.Text)`
  padding: var(--spacing-xs) var(--spacing-s);
  white-space: pre-wrap
`,c=r.default.div`
  display: flex;
  align-items: center;
  flex: 1 auto;
  min-height: var(--size-m);
  margin-left: -8px;
  cursor: ${e=>e.isEditable?"text":"default"};

  ${e=>e.isEditable&&r.css`
    &:hover {
      border-radius: var(--border-radius-default);
      background-color: var(--background-color-tertiary);
    }
  `}
`;t.default=({summary:e,onSubmit:t,onChange:n=(()=>{}),placeholder:r="Add a brief summary.",characterLimit:u=140,isEditable:d=!0,showLabel:h=!0})=>{const[p,m]=Object(a.useState)(!1),[f,g]=Object(a.useState)(!1),[b,y]=Object(a.useState)(""),[v,T]=Object(a.useState)(e);Object(a.useEffect)((()=>{!p&&T(e)}),[e]);const A=()=>{d&&!f&&(g(!1),m(!1),t(v,(e=>{e&&m(!0)})))};return i.a.createElement(a.Fragment,null,p?i.a.createElement(s.default,{handlers:{enter:A,submit:A,quit:()=>{m(!1),g(!1),T(e)}}},i.a.createElement("div",null,i.a.createElement(o.TextArea,{label:i.a.createElement(o.Label,{text:h?"Summary":""}),value:v,placeholder:r,maxLength:u,validationStatus:f?"error":"",validationMessage:b,onChange:(e,{charLimit:t})=>{var r,a;if(!d)return;const i=null===(r=null==e?void 0:e.nativeEvent)||void 0===r?void 0:r.inputType;let o=null===(a=null==e?void 0:e.target)||void 0===a?void 0:a.value;var s;"insertLineBreak"!==i&&("insertFromPaste"===i&&(o=(s=o)?s.replace(/\r\n|\r|\n/g," "):""),o.length>u?(g(!0),y(`You are over permitted characters limit by ${t} characters`)):f&&(g(!1),y("")),T(o),n(o))},onBlur:A,isResizable:!1,autoFocus:!0}))):i.a.createElement(a.Fragment,null,h&&i.a.createElement(o.Heading,{type:"h6",text:"Summary",color:"content-color-secondary",hasBottomSpacing:!0}),i.a.createElement(c,{isEditable:d,onClick:()=>d&&m(!0)},i.a.createElement(l,{type:"para",maxLines:10,color:v?"content-color-primary":"content-color-tertiary"},v||(d?r:"Summary is yet to be added.")))))}},"./runtime-repl/request-http/ConfigurationConstants.js":function(e,t,n){"use strict";n.r(t),n.d(t,"BASE",(function(){return r})),n.d(t,"CONFIGURATION_MAP",(function(){return a})),n.d(t,"CONFIGURATION_INPUT_TYPES",(function(){return i})),n.d(t,"CONFIGURATIONS",(function(){return o}));const r={GLOBAL:"global",COLLECTION:"request",FOLDER:"folder",REQUEST:"request"},a={followRedirects:"interceptorRedirect",strictSSL:"SSLCertVerify"},i={BOOLEAN:"boolean",NUMBER:"number",STRING:"text",ARRAY:"array"},o=[{id:"strictSSL",title:"Enable SSL certificate verification",description:"Verify SSL certificates when sending a request. Verification failures will result in the request being aborted.",inputFieldType:"toggle",inputType:i.BOOLEAN,defaultValue:!0,base:r.GLOBAL},{id:"followRedirects",title:"Automatically follow redirects",description:"Follow HTTP 3xx responses as redirects.",inputFieldType:"toggle",inputType:i.BOOLEAN,defaultValue:!0,base:r.GLOBAL},{id:"followOriginalHttpMethod",title:"Follow original HTTP Method",description:"Redirect with the original HTTP method instead of the default behavior of redirecting with GET.",inputFieldType:"toggle",inputType:i.BOOLEAN,defaultValue:!1,base:r.COLLECTION},{id:"followAuthorizationHeader",title:"Follow Authorization header",description:"Retain authorization header when a redirect happens to a different hostname.",inputFieldType:"toggle",inputType:i.BOOLEAN,defaultValue:!1,base:r.COLLECTION},{id:"removeRefererHeaderOnRedirect",title:"Remove referer header on redirect",description:"Remove the referer header when a redirect happens.",inputFieldType:"toggle",inputType:i.BOOLEAN,defaultValue:!1,base:r.COLLECTION},{id:"disableUrlEncoding",title:"Encode URL automatically",description:"Encode the URL's path, query parameters, and authentication fields.",inputFieldType:"invertedToggle",inputType:i.BOOLEAN,defaultValue:!1,base:r.COLLECTION},{id:"disableCookies",title:"Disable cookie jar",description:"Prevent cookies used in this request from being stored in the cookie jar. Existing cookies in the cookie jar will not be added as headers for this request.",inputFieldType:"toggle",inputType:i.BOOLEAN,defaultValue:!1,base:r.COLLECTION},{id:"tlsPreferServerCiphers",title:"Use server cipher suite during handshake",description:"Use the server's cipher suite order instead of the client's during handshake.",inputFieldType:"toggle",inputType:i.BOOLEAN,defaultValue:!1,base:r.COLLECTION},{id:"maxRedirects",title:"Maximum number of redirects",description:"Set a cap on the maximum number of redirects to follow.",inputFieldType:"input",inputType:i.NUMBER,defaultValue:10,base:r.COLLECTION},{id:"tlsDisabledProtocols",title:"Protocols disabled during handshake",description:"Specify the SSL and TLS protocol versions to be disabled during handshake. All other protocols will be enabled.",inputFieldType:"multiSelectDropdown",inputType:i.ARRAY,menuOptions:["TLSv1","TLSv1_1","TLSv1_2","TLSv1_3"],menuLabels:["TLS v1","TLS v1.1","TLS v1.2","TLS v1.3"],defaultValue:[],base:r.COLLECTION},{id:"tlsCipherSelection",title:"Cipher suite selection",description:"Order of cipher suites that the SSL server profile uses to establish a secure connection.",inputFieldType:"multipleInput",inputType:i.ARRAY,defaultValue:[],base:r.COLLECTION}]},"./runtime-repl/request-http/RequestApiKeyAuthConstants.js":function(e,t,n){"use strict";n.r(t),n.d(t,"IN",(function(){return r}));const r={QUERY:"query",HEADER:"header"}},"./runtime-repl/runner/RunHistoryView.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return x}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),s=n("../../node_modules/@postman/aether/esmLib/index.js"),l=n("./node_modules/moment/moment.js"),c=n.n(l),u=n("./js/stores/StoreManager.js"),d=n("./js/stores/CurrentUserInfoStore.js"),h=n("./collaboration/workspace/model/ActiveWorkspacePermissionStore.ts"),p=n("./collaboration/workspace/types/PermissionTypes.ts"),m=n("./js/modules/services/AnalyticsService.js"),f=n("./runtime-repl/runner/_api/RunnerInterface.js"),g=n("./appsdk/contextbar/ContextBarUtil.js"),b=n("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),y=n("./runtime-repl/runner/components/ShareCollectionRunButton.js"),v=n("./runtime-repl/runner/workbench/CollectionRunCreate/AutomateRun/AutomateRunModal.js"),T=n("./runtime-repl/runner/RunnerRun/RunnerRunStore.js"),A=n("./runtime-repl/runner/datastores/RunReportPreferenceStore.js"),E=n("./runtime-repl/runner/SyncService.js"),S=n("./appsdk/components/link/Link.js");const C=b.default.span`
    padding-left: var(--spacing-m);
  `,k=b.default.div`
    opacity: 0;
    margin-top: -2px;
  `,I=Object(b.default)(s.Table)`

   & tr {
    & .test-count__text--wrapper {
        margin-top: calc(var(--spacing-s) * -1);
        margin-bottom: calc(var(--spacing-s) * -1);
        margin-left: var(--spacing-l);
    }
   }

    & .run-history-view--actions-wrapper.share-modal-open {
      opacity: 1;
    }

   & tr:hover {
    & .run-history-view--actions-wrapper {
      opacity: 1;
    }

    & .test-count__text {
      text-decoration: underline;

      &--wrapper {
        cursor: pointer;
      }

      &--fail {
        color: var(--content-color-error);
      }

      &--pass {
        color: var(--content-color-success);
      }
    }
   }

   & th {
    padding: var(--spacing-s) var(--spacing-xs);
   }

   & td {
     padding: var(--spacing-s) var(--spacing-xs);
    }
  `,w=(e,t,n,r)=>({paddingLeft:e,paddingTop:t,paddingRight:n,paddingBottom:r});let x=Object(o.observer)(r=class extends a.Component{constructor(e){super(e),this.fetchCount=0,this.rowsSelected=[],this.runHistory=[],this.rowDataMap=new Map,this.runStore=Object(u.resolveStoreInstance)(T.default),this.currentUserInfo=Object(u.resolveStoreInstance)(d.default),!A.default.has(e.collectionId)&&A.default.add({collectionId:e.collectionId}),this.preferences=A.default.find(e.collectionId),this.clearSelectionNodeRef=i.a.createRef(),this.state={isLoading:!0,isError:!1,showBulkAction:!1,rowSelectionCount:0,isAutomateRunModalOpen:!1},this.fetchMoreData=this.fetchMoreData.bind(this),this.getData=this.getData.bind(this),this.handleCountOptionSelection=this.handleCountOptionSelection.bind(this),this.handleSourceFilterOptionSelection=this.handleSourceFilterOptionSelection.bind(this),this.handleRowSelectionChange=this.handleRowSelectionChange.bind(this),this.handleDelete=this.handleDelete.bind(this),this.renderBlankSlate=this.renderBlankSlate.bind(this),this.sortByDate=this.sortByDate.bind(this),this.handleAutomateRunModalClose=this.handleAutomateRunModalClose.bind(this),this.handleOnSort=this.handleOnSort.bind(this)}componentDidUpdate(e){this.props.isActive&&!e.isActive&&(Object(g.removeContextQueryParams)(),this.fetchMoreData(),m.default.addEventV2({category:"run-reports",action:"open_run_history_view",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId,entityId:this.props.collectionId}))}componentWillUnmount(){clearTimeout(this.clearCopySuccessTimeout)}setIsLoading(e){this.setState({isLoading:e})}getData(){if(!this.state.isLoading){const t=e.filter(this.runStore.collectionRunsInActiveWorkspace,(t=>t.context&&t.context.collection===this.props.collectionId&&e.includes(["finished","error","aborted"],t.status)&&(!this.preferences.sourceFilter||t.source===this.preferences.sourceFilter.value))),n=t.sort(this.sortByDate).slice(0,this.preferences.countOption.value);this.fetchCount=e.size(t),!e.isEqual(this.runHistory,n)&&(this.runHistory=n)}return this.runHistory}getColumnConfiguration(){return[{Header:"Start time",id:"startTime",accessor:this.getRunStartTime,Cell:t=>{const n=c()(t.value).local().format("MMM DD, YYYY HH:mm:ss"),{status:r}=t.row.original,a=e=>{switch(e.status){case"aborted":return i.a.createElement(s.Tooltip,{content:"The run was abandoned before completing",openDelay:250},i.a.createElement(s.IconStateDisableStrokeSmall,{color:"base-color-warning"}));case"error":return i.a.createElement(s.Tooltip,{content:"Failed to complete the run",openDelay:250},i.a.createElement(s.IconStateErrorStrokeSmall,{color:"base-color-error"}));default:return i.a.createElement(i.a.Fragment,null)}};return i.a.createElement(s.Flex,{alignItems:"center"},i.a.createElement("div",{style:{flex:"0 0 138px"}},i.a.createElement(s.Text,{type:"body-medium"},e.toString(n))),i.a.createElement(a,{status:r}))},sortType:(e,t)=>{const n=this.getRunStartTime(e.original),r=this.getRunStartTime(t.original);return new Date(n)-new Date(r)},cellWidth:"162px"},{Header:()=>i.a.createElement(s.Tooltip,{content:"Where the run is executed from",openDelay:750},i.a.createElement(s.Flex,{inline:!0},i.a.createElement(s.Heading,{text:"Source",type:"h6"}))),accessor:"source",Cell:t=>this.renderCell(e.capitalize(t.value),t.row),cellWidth:"74px"},{Header:()=>i.a.createElement(s.Tooltip,{content:"Time taken to complete the run",openDelay:750},i.a.createElement(s.Flex,{inline:!0},i.a.createElement(s.Heading,{text:"Duration",type:"h6"}))),id:"duration",accessor:e=>e.startedAt?new Date(e.createdAt)-new Date(e.startedAt):e.meta.totalTime,Cell:e=>{const t=Math.floor(e.value/864e5),n=Math.floor(e.value/36e5%24),r=Math.floor(e.value/6e4%3600),a=Math.floor(e.value/1e3%60),o=e.value%1e3,l=e=>e>1?"s":"";let c="",u="";return t&&(c=`${t}d `),n&&(c=`${c}${n}h `),!t&&r&&(c=`${c}${r}m `),!t&&!n&&a&&(c=`${c}${a}s `),!t&&!n&&!r&&o&&(c=`${c}${o}ms`),t&&(u=`${t} day${l(t)} `),n&&(u=`${u}${n} hour${l(n)} `),r&&(u=`${u}${r} minute${l(r)} `),a&&(u=`${u}${a} second${l(a)} `),o&&(u=`${u}${o} millisecond${l(o)}`),c?i.a.createElement(s.Tooltip,{content:u,openDelay:750},i.a.createElement("div",null,i.a.createElement(s.Text,{type:"body-medium"},c))):this.renderCell(c,e.row)},cellWidth:"82px",align:"right"},{Header:()=>i.a.createElement(s.Tooltip,{content:"Number of iterations executed",openDelay:750},i.a.createElement(s.Flex,{inline:!0},i.a.createElement(s.Heading,{text:"Iterations",type:"h6"}))),id:"iterations",accessor:"meta.currentIteration",Cell:e=>this.renderCell(e.value,e.row),cellWidth:"80px",align:"right"},{Header:()=>i.a.createElement(s.Tooltip,{content:"Sum of passed, skipped, and failed tests across iterations",openDelay:750},i.a.createElement(s.Flex,{inline:!0},i.a.createElement(s.Heading,{text:"All tests",type:"h6"}))),id:"allTest",accessor:"meta.totalTestCount",Cell:t=>0===t.value||t.value?i.a.createElement("div",{onClick:()=>{var e,n,r;Object(f.openRunInTab)(null===(e=t.row.original)||void 0===e?void 0:e.uid,{preview:!1,activeTestTab:"all"}),m.default.addEventV2({category:"run-reports",action:"open_all_test_view",label:null===(n=t.row.original)||void 0===n?void 0:n.source,userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId,entityId:null===(r=t.row.original)||void 0===r?void 0:r.uid})}},i.a.createElement(s.Flex,{className:"test-count__text--wrapper",height:"35px",alignItems:"center",justifyContent:"flex-end"},i.a.createElement(s.Text,{className:"test-count__text test-count__text--all",type:"body-medium"},e.toString(t.value)))):this.renderCell(t.value,t.row),cellWidth:"72px",align:"right"},{Header:()=>i.a.createElement(s.Tooltip,{content:"Passed tests across iterations",openDelay:750},i.a.createElement(s.Flex,{inline:!0},i.a.createElement(s.Heading,{text:"Passed",type:"h6"}))),id:"passedTest",accessor:"meta.passedTestCount",Cell:t=>0===t.value||t.value?i.a.createElement("div",{onClick:()=>{var e,n,r;Object(f.openRunInTab)(null===(e=t.row.original)||void 0===e?void 0:e.uid,{preview:!1,activeTestTab:"pass"}),m.default.addEventV2({category:"run-reports",action:"open_passed_test_view",label:null===(n=t.row.original)||void 0===n?void 0:n.source,userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId,entityId:null===(r=t.row.original)||void 0===r?void 0:r.uid})}},i.a.createElement(s.Flex,{className:"test-count__text--wrapper",height:"35px",alignItems:"center",justifyContent:"flex-end",onClick:()=>{var e;return Object(f.openRunInTab)(null===(e=t.row.original)||void 0===e?void 0:e.uid,{preview:!1,activeTestTab:"pass"})}},i.a.createElement(s.Text,{className:"test-count__text test-count__text--pass",type:"body-medium"},e.toString(t.value)))):this.renderCell(t.value,t.row),cellWidth:"70px",align:"right"},{Header:()=>i.a.createElement(s.Tooltip,{content:"Failed tests across iterations",openDelay:750},i.a.createElement(s.Flex,{inline:!0},i.a.createElement(s.Heading,{text:"Failed",type:"h6"}))),id:"failedTest",accessor:"meta.failedTestCount",Cell:t=>{if(!t.value)return 0===t.value?i.a.createElement("div",{onClick:()=>{var e,n,r;Object(f.openRunInTab)(null===(e=t.row.original)||void 0===e?void 0:e.uid,{preview:!1,activeTestTab:"fail"}),m.default.addEventV2({category:"run-reports",action:"open_failed_test_view",label:null===(n=t.row.original)||void 0===n?void 0:n.source,userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId,entityId:null===(r=t.row.original)||void 0===r?void 0:r.uid})}},i.a.createElement(s.Flex,{className:"test-count__text--wrapper",height:"35px",alignItems:"center",justifyContent:"flex-end"},i.a.createElement(s.Text,{className:"test-count__text test-count__text--fail",type:"body-medium"},e.toString(t.value)))):this.renderCell(t.value,t.row);const n=Number(t.value),r=Number(e.get(t.row.original,"meta.totalTestCount")),a=Math.floor(n/r*100);return i.a.createElement(s.Tooltip,{content:`${a}% tests failed`,openDelay:500,closeDelay:10},i.a.createElement("div",{onClick:()=>{var e,n,r;Object(f.openRunInTab)(null===(e=t.row.original)||void 0===e?void 0:e.uid,{preview:!1,activeTestTab:"fail"}),m.default.addEventV2({category:"run-reports",action:"open_failed_test_view",label:null===(n=t.row.original)||void 0===n?void 0:n.source,userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId,entityId:null===(r=t.row.original)||void 0===r?void 0:r.uid})}},i.a.createElement(s.Flex,{className:"test-count__text--wrapper",height:"35px",alignItems:"center",justifyContent:"flex-end"},i.a.createElement(s.Text,{className:"test-count__text test-count__text--fail",type:"body-medium"},e.toString(n)))))},cellWidth:"70px",align:"right"},{Header:()=>i.a.createElement(s.Tooltip,{content:"Skipped tests across iterations",openDelay:750},i.a.createElement(s.Flex,{inline:!0},i.a.createElement(s.Heading,{text:"Skipped",type:"h6"}))),id:"skippedTest",accessor:"meta.skippedTestCount",Cell:t=>0===t.value||t.value?i.a.createElement("div",{onClick:()=>{var e,n,r;Object(f.openRunInTab)(null===(e=t.row.original)||void 0===e?void 0:e.uid,{preview:!1,activeTestTab:"skip"}),m.default.addEventV2({category:"run-reports",action:"open_skipped_test_view",label:null===(n=t.row.original)||void 0===n?void 0:n.source,userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId,entityId:null===(r=t.row.original)||void 0===r?void 0:r.uid})}},i.a.createElement(s.Flex,{className:"test-count__text--wrapper",height:"35px",alignItems:"center",justifyContent:"flex-end"},i.a.createElement(s.Text,{className:"test-count__text test-count__text--skip",type:"body-medium"},e.toString(t.value)))):this.renderCell(t.value,t.row),cellWidth:"72px",align:"right"},{Header:()=>i.a.createElement(s.Tooltip,{content:"Average response time",openDelay:750},i.a.createElement(s.Flex,{inline:!0},i.a.createElement(s.Heading,{text:"Avg. Resp. Time",type:"h6"}))),id:"avgResponseTime",accessor:e=>{const t=e.meta.totalTime&&Number(e.meta.totalTime),n=e.meta.totalRequests&&Number(e.meta.totalRequests);return t&&n?`${Math.round(t/n)} ms`:""},Cell:e=>this.renderCell(e.value,e.row),cellWidth:"120px",align:"right"},{id:"actions",accessor:(e,t)=>({rowData:e,rowId:t}),Cell:e=>{const{rowData:t,rowId:n}=e.value;return this.rowDataMap.set(n,t.id),i.a.createElement(k,{tabIndex:-1,className:"run-history-view--actions-wrapper"},i.a.createElement(s.Button,{type:"tertiary",text:" View Details",icon:i.a.createElement(s.IconActionOpenStroke,null),onClick:()=>{Object(f.openRunInTab)(t.uid,{preview:!1}),m.default.addEventV2({category:"run-reports",action:"open_run_details_view",label:t.source,userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId,entityId:t.uid})},size:"small"}),i.a.createElement(y.default,{runUID:t.uid,runSource:t.source}))},cellWidth:"190px",disableSortBy:!0}]}getRunStartTime(e){return e.startedAt?e.startedAt:c()(e.createdAt).subtract(e.meta.totalTime,"milliseconds").toISOString()}sortByDate(e,t){const n=this.getRunStartTime(e),r=this.getRunStartTime(t);return new Date(r)-new Date(n)}handleCountOptionSelection(e){this.preferences.update({collectionId:this.props.collectionId,countOption:e}),this.fetchMoreData(),m.default.addEventV2({category:"run-reports",action:"change_count_filter",value:e.value,label:e.label,userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId,entityId:this.props.collectionId})}handleSourceFilterOptionSelection(e){this.preferences.update({collectionId:this.props.collectionId,sourceFilter:e}),this.fetchMoreData(),e&&m.default.addEventV2({category:"run-reports",action:"change_source_filter",label:e.value,userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId,entityId:this.props.collectionId})}handleDelete(){const t=e.map(this.rowsSelected,(e=>this.rowDataMap.get(parseInt(e,10)))),n=Object(u.resolveStoreInstance)(h.default),r=n&&n.permissions;e.get(r,p.WORKSPACE_PERMISSIONS.REMOVE_HISTORY_FROM_WORKSPACE,!0)&&pm.mediator.trigger("showDeleteHistoryModal",(()=>{this.runStore.deleteRun(t),this.runHistory.length===t.length&&this.setState({rowSelectionCount:0,showBulkAction:!1}),m.default.addEventV2({category:"run-reports",action:"delete_runs",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId,value:t.length,entityId:this.props.collectionId})}),{identifier:"selectedRun",title:"Delete selected runs?"})}handleRowSelectionChange(e){this.rowsSelected=Object.keys(e),this.state.rowSelectionCount!==this.rowsSelected.length&&this.setState({rowSelectionCount:this.rowsSelected.length,showBulkAction:this.rowsSelected.length>0})}fetchMoreData(){(this.preferences.countOption&&this.preferences.countOption.value-this.fetchCount)<=0?this.state.isLoading&&this.setIsLoading(!1):(this.setIsLoading(!0),Object(E.fetchMoreRunsInActiveWorkspace)(this.preferences.countOption.value,0,this.props.collectionId,e.get(this.preferences.sourceFilter,"value")).then((()=>{this.setIsLoading(!1)})).catch((()=>{pm.logger.error("RunHistoryView~constructor: Error in fetching runs"),this.setState({isLoading:!1,isError:!0})})))}handleAutomateRunModalClose(){this.setState({isAutomateRunModalOpen:!1})}handleOnSort(t){if(e.isEmpty(t))return;const n=e.get(t[0],"id"),r=e.get(t[0],"desc");m.default.addEventV2({category:"run-reports",action:r?"sort-desc":"sort",label:n,userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId,entityId:this.props.collectionId})}renderCell(t,n){if(0!==t&&!t){var r;const e="Data not available. Please contact help@postman.com";return"finished"!==(null===(r=n.original)||void 0===r?void 0:r.status)?i.a.createElement(s.Text,{type:"body-medium"},"-"):i.a.createElement(s.Tooltip,{content:e,openDelay:250},i.a.createElement("div",null,i.a.createElement(s.Text,{type:"body-medium"},"-")))}return i.a.createElement(s.Text,{type:"body-medium"},e.toString(t))}renderBulkActions(){const t=this.state.rowSelectionCount>1?"s":"",n=Object(u.resolveStoreInstance)(h.default),r=n&&n.permissions,a=e.get(r,p.WORKSPACE_PERMISSIONS.REMOVE_HISTORY_FROM_WORKSPACE,!0);return i.a.createElement(s.Banner,{status:"neutral",hideIcon:!0},i.a.createElement(s.Flex,{justifyContent:"space-between",alignItems:"center"},i.a.createElement(s.Text,{type:"body-medium",color:"content-color-primary"},`${this.state.rowSelectionCount} item${t} selected`),i.a.createElement(s.Flex,{justifyContent:"flex-end",alignItems:"center",padding:w("spacing-m","spacing-zero","spacing-l","spacing-zero")},i.a.createElement(C,null,i.a.createElement(s.Button,{type:"secondary",text:"Cancel",size:"small",ref:this.clearSelectionNodeRef})),i.a.createElement(C,null,i.a.createElement(s.Button,{type:"destructive",text:"Delete",size:"small",isDisabled:!a,onClick:this.handleDelete})))))}renderBlankSlate(e){return this.state.isLoading?i.a.createElement(s.Flex,{alignItems:"center",justifyContent:"center",height:`${e}px`},i.a.createElement(s.Spinner,{description:"Loading run history"})):this.state.isError?i.a.createElement(s.Flex,{height:`${e}px`},i.a.createElement(s.BlankState,{title:"Couldn’t load the runs",description:"Just a faulty wire. Try reloading.",primaryAction:i.a.createElement(s.Button,{type:"outline",text:"Reload",onClick:this.fetchMoreData})},i.a.createElement(s.IllustrationUnableToLoad,null))):this.props.isNewmanDiscoveryEnabled&&this.preferences.sourceFilter&&"newman"===this.preferences.sourceFilter.value?i.a.createElement(i.a.Fragment,null,i.a.createElement(s.Flex,{height:`${e}px`},i.a.createElement(s.BlankState,{title:"There are no Newman runs for this collection",description:i.a.createElement(s.Text,{type:"body-medium",color:"content-color-secondary"},"Newman is a command-line Collection Runner for Postman. You can integrate it with your continuous integration servers and build systems. Learn more about ",i.a.createElement(S.default,{to:"https://learning.postman.com/docs/running-collections/using-newman-cli/command-line-integration-with-newman/",target:"_blank",onClick:()=>{m.default.addEventV2({category:"newman-discoverability",action:"open_newman_learning_center",label:"run-history-empty-state",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId,entityId:this.props.collectionId})}},i.a.createElement(s.Text,{type:"link-default",isExternal:!0},"Newman"))),primaryAction:i.a.createElement(s.Button,{type:"primary",text:"Run on CLI",onClick:()=>{this.setState({isAutomateRunModalOpen:!0},(()=>{m.default.addEventV2({category:"newman-discoverability",action:"open_automate_in_cli_modal",label:"run-history-empty-state",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId,entityId:this.props.collectionId})}))}})},i.a.createElement(s.IllustrationNoReport,null))),i.a.createElement(v.default,{isOpen:this.state.isAutomateRunModalOpen,onClose:this.handleAutomateRunModalClose,selection:{collection:this.props.collectionId}})):i.a.createElement(s.Flex,{height:`${e}px`},i.a.createElement(s.BlankState,{title:"Your collection has not been run yet",primaryAction:i.a.createElement(s.Button,{type:"primary",text:"Run Collection",onClick:()=>Object(f.openCollectionInRunner)(this.props.collectionId)})},i.a.createElement(s.IllustrationNoReport,null)))}render(){const e=document.querySelector("div.collection-modal-tab-contents"),t=e&&e.getBoundingClientRect(),n=t&&t.height?t.height-220:"370",r=n-64;return this.rowDataMap.clear(),i.a.createElement(s.Flex,{direction:"column",gap:"spacing-s",width:"100%",padding:w("spacing-l","spacing-m","spacing-zero","spacing-m")},i.a.createElement(s.Flex,{alignItems:"center"},i.a.createElement(s.Text,{type:"body-medium",color:"content-color-primary"},"Runs triggered for this collection via Runner and Newman")),this.state.showBulkAction?this.renderBulkActions():i.a.createElement(s.Flex,{height:"52px",gap:"spacing-m",alignItems:"center"},i.a.createElement("div",{style:{flex:"0 1 17%"}},i.a.createElement(s.Dropdown,{onChange:this.handleCountOptionSelection,options:[{label:"Last 100 runs",value:100},{label:"Last 500 runs",value:500},{label:"Last 1000 runs",value:1e3}],isClearable:!1,isSearchable:!1,value:this.preferences.countOption})),i.a.createElement("div",{style:{flex:"0 1 17%"}},i.a.createElement(s.Dropdown,{onChange:this.handleSourceFilterOptionSelection,options:[{label:"Newman",value:"newman"},{label:"Runner",value:"runner"}],isSearchable:!1,placeholder:"Run Source",value:this.preferences.sourceFilter}))),i.a.createElement(I,{data:this.getData(),columns:this.getColumnConfiguration(),pagination:{initialPageSize:20},rowSelected:0!==this.fetchCount?{onSelect:this.handleRowSelectionChange,clearSelectionNodeRef:this.clearSelectionNodeRef}:{},blankState:{isEmpty:this.state.isLoading||0===this.fetchCount,component:this.renderBlankSlate(r)},bodyMaxHeight:`${n}px`,sorting:0!==this.fetchCount&&{onSort:this.handleOnSort}}))}})||r}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/runner/SyncService.js":function(e,t,n){"use strict";n.r(t),n.d(t,"fetchMoreRunsInActiveWorkspace",(function(){return p}));var r=n("./node_modules/async/dist/async.js"),a=n.n(r),i=n("./js/modules/services/SyncRemoteFetcherService.js"),o=n("./js/modules/sync-helpers/create-changeset.js"),s=n("./js/models/sync/services/SyncIncomingHandler.js"),l=n("./js/stores/get-store.js"),c=n("./runtime-repl/runner/datastores/controllers/RunnerRunController.js"),u=n("./collaboration/workspace/controller/ActiveWorkspaceController.ts");function d(){return d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},d.apply(this,arguments)}const h="collectionrun";function p(e=20,t=0,n,r){return Promise.resolve(Object(l.getStore)("SyncStatusStore")).then((e=>e.onSyncAvailable())).then((()=>async function(){const e=u.default.get();return e?e.id:(pm.logger.error("WorkspaceSession not found in DB"),Promise.reject(Error("Runtime~getActiveWorkspace: WorkspaceSession not found in db")))}())).then((l=>function({workspace:e,count:t,sinceLastRevisionId:n,collection:r,source:l}){return new Promise(((u,p)=>{a.a.waterfall([a=>{i.default.remoteFetch(h,"find",d({workspace:e,count:t,since_id:n,iterations:!1},r&&{collection:r},l&&{source:l})).then((e=>a(null,e))).catch((e=>a(e)))},(e,t)=>{const n=e.map((e=>e.id));c.default.getAll({id:n}).then((r=>{const a=r.map((e=>e.id)),i=n.filter((e=>-1===a.indexOf(e))),o=e.filter((e=>-1!==i.indexOf(e.id)));t(null,o)})).catch((e=>t(e)))},(e,t)=>{t(null,e.map((e=>Object(o.default)(h,"import",{instance:e,modelId:e.id,owner:e.owner},{partial:!0}))))},(e,t)=>{const n=e.map((e=>Object(s.processIncomingChangeset)(e).catch((e=>{pm.logger.warn("RunnerRunStore~fetchMoreCollectionRuns: Could not create collection run",e)}))));return Promise.all(n).then((()=>t(null,e))).catch((e=>t(e)))}],(e=>{e?p(e):u()}))}))}({workspace:l,count:e,sinceLastRevisionId:t,collection:n,source:r})))}},"./runtime-repl/runner/components/ShareCollectionRunButton.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return y}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),s=n("./node_modules/prop-types/index.js"),l=n.n(s),c=n("../../node_modules/@postman/aether/esmLib/index.js"),u=n("./js/utils/util.js"),d=n("./js/services/NavigationService.js"),h=n("./js/modules/services/AnalyticsService.js"),p=n("./js/stores/StoreManager.js"),m=n("./js/stores/CurrentUserInfoStore.js"),f=n("./js/constants/WorkspaceVisibilityConstants.js"),g=n("./collaboration/workspace/controller/ActiveWorkspaceController.ts"),b=n("./js/utils/ClipboardHelper.js");let y=Object(o.observer)(r=class extends a.Component{constructor(e){super(e),this.state={isPopoverOpen:!1}}getLink(e){const t=d.default.getURLForRoute("build.run.open",{rid:this.props.runUID});return`${(e=>{const t=Object(p.resolveStoreInstance)(m.default);if(e===f.VISIBILITY.public)return window.postman_explore_url;if(u.default.isTeamMember(t)){const e=u.default.getTeamDomain(t);return e&&`https://${e}.${pm.artemisUrl.split(".")[1]}.co`}return`https://web.${pm.artemisUrl.split(".")[1]}.co`})(e)}/${t}`}getSharedWorkspaceBody(e){const t=e===f.VISIBILITY.privateTeam?"Only workspace members can access this link.":"Only team members can access this link.";return i.a.createElement(c.Flex,{direction:"column",gap:"spacing-s"},i.a.createElement(c.Heading,{type:"h3",text:"Share link"}),i.a.createElement(c.Flex,{direction:"column",gap:"spacing-xs"},i.a.createElement(c.TextInput,{type:"text",value:this.getLink(e),enableCopy:!0}),i.a.createElement(c.Flex,{gap:"spacing-s",alignItems:"center"},i.a.createElement(c.IconStateInfoStrokeSmall,{color:"content-color-secondary"}),i.a.createElement(c.Text,{type:"para",color:"content-color-secondary"},t))),i.a.createElement(c.Flex,{padding:{paddingTop:"spacing-s"},alignItems:"center",justifyContent:"space-between"},i.a.createElement(c.Button,{type:"primary",onClick:()=>{b.default.copy(this.getLink(e)),this.setState({isPopoverOpen:!1},(()=>{var e;null===(e=this.parent)||void 0===e||e.classList.remove("share-modal-open"),pm.toasts.success("Collection run share link copied",{dedupeId:"collection-run-share-link-copied-message"})}))},text:"Copy link"}),i.a.createElement(c.Button,{type:"tertiary",icon:i.a.createElement(c.IconActionInviteStroke,null),onClick:()=>{this.setState({isPopoverOpen:!1},(()=>{var e;null===(e=this.parent)||void 0===e||e.classList.remove("share-modal-open"),this.handleInvitePeople()}))},text:"Invite people"})))}getPersonalWorkspaceBody(){return i.a.createElement(c.Flex,{direction:"column",gap:"spacing-m"},i.a.createElement(c.Heading,{type:"h3",text:"Share with team"}),i.a.createElement(c.Text,{type:"body-medium",color:"content-color-primary"},"This collection run is in your personal workspace.",i.a.createElement("br",null),"No one can access this unless you invite them."),i.a.createElement("div",null,i.a.createElement(c.Button,{type:"primary",onClick:()=>{this.setState({isPopoverOpen:!1},(()=>{var e;null===(e=this.parent)||void 0===e||e.classList.remove("share-modal-open"),this.handleInvitePeople()}))},text:"Invite people"})))}getPopoverBody(){var e;const t=null===(e=g.default.get())||void 0===e?void 0:e.visibilityStatus;switch(t){case f.VISIBILITY.onlyMe:return this.getPersonalWorkspaceBody();case f.VISIBILITY.public:case f.VISIBILITY.privateTeam:case f.VISIBILITY.team:return this.getSharedWorkspaceBody(t);default:this.setState({isPopoverOpen:!1},(()=>{var e;null===(e=this.parent)||void 0===e||e.classList.remove("share-modal-open"),pm.logger.warn(`ShareCollectionRunButton~getPopoverBody - Workspace with ${t} visibility is not handled`)}))}}handleInvitePeople(){var e;const t=null===(e=g.default.get())||void 0===e?void 0:e.id;return t?d.default.transitionTo("build.workspace.invite",null,{wid:t}):(pm.toasts.error("Unable to invite right now. Try again later?"),void pm.logger.error("ShareCollectionRunButton~handleInvitePeople - Could not get workspaceId"))}render(){return i.a.createElement(c.Popover,{isOpen:this.state.isPopoverOpen,onClickOutside:()=>this.setState({isPopoverOpen:!1},(()=>{var e;return null===(e=this.parent)||void 0===e?void 0:e.classList.remove("share-modal-open")})),placement:"bottom-start",padding:"spacing-l",trigger:i.a.createElement(c.Button,{size:"small",type:"tertiary",text:" Share",icon:i.a.createElement(c.IconActionShareStroke,null),ref:e=>{this.shareModalButtonRef=e},onClick:()=>this.setState({isPopoverOpen:!0},(()=>{var e,t;this.parent=null===(e=this.shareModalButtonRef)||void 0===e?void 0:e.parentElement,null===(t=this.parent)||void 0===t||t.classList.add("share-modal-open");const n=Object(p.resolveStoreInstance)(m.default);h.default.addEventV2({category:"run-reports",action:"share_run",label:this.props.runSource,userId:n.id,teamId:n.teamId,entityId:this.props.runUID})}))})},this.getPopoverBody())}})||r;y.propTypes={runUID:l.a.string.isRequired,runSource:l.a.string.isRequired}},"./runtime-repl/runner/datastores/RunReportPreferenceStore.js":function(e,t,n){"use strict";n.r(t),function(e){var r,a,i,o=n("../../node_modules/mobx/lib/mobx.module.js"),s=n("./js/stores/BaseListStore.js");function l(e,t,n,r){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(r):void 0})}function c(e,t,n,r,a){var i={};return Object.keys(r).forEach((function(e){i[e]=r[e]})),i.enumerable=!!i.enumerable,i.configurable=!!i.configurable,("value"in i||i.initializer)&&(i.writable=!0),i=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),i),a&&void 0!==i.initializer&&(i.value=i.initializer?i.initializer.call(a):void 0,i.initializer=void 0),void 0===i.initializer&&(Object.defineProperty(e,t,i),i=null),i}let u=(a=c((r=class{constructor(t){this.collectionId="",l(this,"sourceFilter",a,this),l(this,"countOption",i,this),this.collectionId=e.get(t,"collectionId"),this.sourceFilter=e.get(t,"sourceFilter",null),this.countOption=e.get(t,"countOption",{label:"Last 100 runs",value:100})}update(t){this.sourceFilter=e.get(t,"sourceFilter",this.sourceFilter),this.countOption=e.get(t,"countOption",this.countOption)}}).prototype,"sourceFilter",[o.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),i=c(r.prototype,"countOption",[o.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),c(r.prototype,"update",[o.action],Object.getOwnPropertyDescriptor(r.prototype,"update"),r.prototype),r);class d extends s.default{constructor(){super(u,{ignoreHydration:!0}),this.primaryKey="collectionId"}}t.default=new d}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/runner/workbench/CollectionRunCreate/AutomateRun/AutomateRun.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return C}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),s=n("../../node_modules/@postman/aether/esmLib/index.js"),l=n("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),c=n("./js/stores/StoreManager.js"),u=n("./runtime-repl/environment/datastores/ActiveEnvironmentStore.js"),d=n("./js/stores/CurrentUserInfoStore.js"),h=n("./js/modules/services/AnalyticsService.js"),p=n("./js/services/NavigationService.js"),m=n("./js/utils/ClipboardHelper.js"),f=n("./iam/src/common/api/IAMservice.js"),g=n("./js/components/base/keymaps/KeyMaps.js"),b=n("./appsdk/components/link/Link.js"),y=n("./js/utils/HttpService.js");function v(){return v=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},v.apply(this,arguments)}const T=`${pm.runtimeAssetsUrl}/newman-discoverability/newman-command-template.json`,A=Object(l.default)(s.Flex)`
    background-color: var(--background-color-secondary);
    max-width: 600px
  `,E=l.default.span`
    margin-left: var(--spacing-xs);
    margin-right: var(--spacing-xs);
    display: inline-block;
  `,S=l.default.div`
    background-color: var(--background-color-primary);
    padding: var(--spacing-s);
    overflow-y: auto;
    white-space: pre-wrap;
  `;let C=Object(o.observer)(r=class extends a.Component{constructor(e){super(e),this.state={isLoading:!0,isError:!1,isCopySuccess:!1,apiKeyInputText:"",apiKey:"",apiKeyName:"",isPopoverOpen:!1,popoverView:"InsertAPIKey",isGeneratingKey:!1,isButtonLoading:!1,apiKeyGenerationError:"",newmanCommandTemplate:{}},this.currentUserInfo=Object(c.resolveStoreInstance)(d.default),this.handleCopyNemanCommand=this.handleCopyNemanCommand.bind(this),this.handleCopy=this.handleCopy.bind(this),this.fetchNewmanCommand=this.fetchNewmanCommand.bind(this),this.fetchNewmanCommand()}getKeyMapHandlers(){return{copy:pm.shortcuts.handle("copyCommand",this.handleCopy)}}getInsertAPIKeyBody(){const{selection:t}=this.props;return i.a.createElement(s.Flex,{direction:"column",gap:"spacing-m"},i.a.createElement(s.Flex,{direction:"column",gap:"spacing-s"},i.a.createElement(s.Heading,{type:"h3",text:"Add Postman API key"}),i.a.createElement(s.Text,{type:"body-medium",color:"content-color-primary"},"API key is needed to access Postman API and fetch live Postman data. ",i.a.createElement(b.default,{to:"https://learning.postman.com/docs/developer/intro-api/#generating-a-postman-api-key",target:"_blank",onClick:()=>{h.default.addEventV2(v({category:"newman-discoverability",action:"open-postman-api-key-learning-center",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId},t.collection&&{entityId:t.collection}))}},i.a.createElement(s.Text,{type:"link-default",isExternal:!0},"Learn more")))),i.a.createElement(s.Flex,{padding:{paddingTop:"spacing-xs"},alignItems:"center",gap:"spacing-m"},i.a.createElement(s.Button,{type:"primary",isLoading:this.state.isButtonLoading,onClick:()=>{this.setState({isButtonLoading:!0},(()=>Object(f.fetchAllApiKeys)().then((n=>{const r=e.get(n,"apiKeys",[]),a=e.size(r)>4?"EnterAPIKey":"GenerateAPIKey";this.setState({popoverView:a,isAPILimitReached:e.size(r)>4,isButtonLoading:!1},(()=>{h.default.addEventV2(v({category:"newman-discoverability",action:"open-generate-new-api-key-modal",label:e.size(r)>4?"api-key-limit-exceeded-view":"generate-new-key-view",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId},t.collection&&{entityId:t.collection}))}))}))))},text:"Generate Key"}),i.a.createElement(s.Button,{type:"secondary",onClick:()=>{this.setState({popoverView:"EnterAPIKey",isAPILimitReached:!1},(()=>{h.default.addEventV2(v({category:"newman-discoverability",action:"open-use-existing-key-modal",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId},t.collection&&{entityId:t.collection}))}))},text:"Use Existing Key"})))}getEnterApiKeyBody(){const e=this.state.isAPILimitReached?"Postman API key limit reached":"Paste an existing Postman API key",t=this.state.isAPILimitReached?"You already have 5 keys. Enter existing key or delete or regenerate keys in ":"You can also delete, regenerate or check status of existing API keys in your ",{selection:n}=this.props;return i.a.createElement(s.Flex,{direction:"column",gap:"spacing-l"},i.a.createElement(s.Flex,{direction:"column",gap:"spacing-s"},i.a.createElement(s.Heading,{type:"h3",text:e}),i.a.createElement(s.Text,{type:"body-medium",color:"content-color-primary"},t,i.a.createElement(b.default,{to:`${pm.artemisUrl}/settings/me/api-keys`,target:"_blank",onClick:()=>{h.default.addEventV2({category:"newman-discoverability",action:"open-api-key-settings",label:this.state.isAPILimitReached?"api-key-limit-exceeded-view":"use-existing-key-view",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId})}},i.a.createElement(s.Text,{type:"link-default",isExternal:!0},"account settings")))),i.a.createElement(s.TextInput,{type:"text",placeholder:"Paste an existing Postman API key",value:this.state.apiKeyInputText,autoFocus:!0,onChange:e=>{this.setState({apiKeyInputText:e.target.value})},onClear:()=>this.setState({apiKeyInputText:""})}),i.a.createElement(s.Flex,{alignItems:"center",justifyContent:"space-between"},i.a.createElement(s.Button,{type:"primary",onClick:()=>{this.setState({apiKey:this.state.apiKeyInputText,isPopoverOpen:!1},(()=>{""!==this.state.apiKey&&h.default.addEventV2(v({category:"newman-discoverability",action:"insert-api-key",label:this.state.isAPILimitReached?"api-key-limit-exceeded-view":"use-existing-key-view",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId},n.collection&&{entityId:n.collection}))}))},text:"Insert Key"})))}getGenerateApiKeyBody(){const{selection:t}=this.props,n=e=>{this.setState({isGeneratingKey:e})};return i.a.createElement(s.Flex,{direction:"column",gap:"spacing-s"},i.a.createElement(s.Heading,{type:"h3",text:"Name your API key"}),i.a.createElement(s.Text,{type:"body-medium",color:"content-color-primary"},"This will help you identify and manage the keys."),i.a.createElement(s.TextInput,{type:"text",placeholder:"Enter name",value:this.state.apiKeyName,autoFocus:!0,onChange:e=>{this.setState({apiKeyName:e.target.value})},onClear:()=>{this.setState({apiKeyName:"",apiKeyGenerationError:""})},validationStatus:e.isEmpty(this.state.apiKeyGenerationError)?null:"error",validationMessage:e.isEmpty(this.state.apiKeyGenerationError)?null:this.state.apiKeyGenerationError}),i.a.createElement("div",{style:{paddingTop:"var(--spacing-s)",width:"fit-content"}},i.a.createElement(s.Button,{type:"primary",onClick:()=>{n(!0),Object(f.createNewApiKey)(this.state.apiKeyName).then((t=>{if("error"===t.status)this.setState({isGeneratingKey:!1,apiKeyGenerationError:e.get(t,"error.message","Unable to create API key")});else{const n=e.get(t,"apikey.key");this.setState({apiKeyInputText:n,popoverView:"GeneratedKey",isGeneratingKey:!1})}})).catch((t=>{this.setState({isPopoverOpen:!1,isGeneratingKey:!1},(()=>{pm.toasts.error(e.get(t,"error.message","Unable to create API key"))}))})).finally((()=>{h.default.addEventV2(v({category:"newman-discoverability",action:"generate_new_api_key",label:e.isEmpty(this.state.apiKeyGenerationError)?"success":"error",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId},t.collection&&{entityId:t.collection}))}))},text:"Generate",isLoading:this.state.isGeneratingKey,isDisabled:e.isEmpty(this.state.apiKeyName)})))}getGeneratedKeyBody(){const{selection:e}=this.props;return i.a.createElement(s.Flex,{direction:"column",gap:"spacing-s",width:"288px"},i.a.createElement(s.Heading,{type:"h3",text:"Key generated!"}),i.a.createElement(s.Text,{type:"body-medium",color:"content-color-primary"},"Make sure you copy and save this API key."),i.a.createElement(s.TextInput,{type:"text",value:this.state.apiKeyInputText,enableCopy:!0,onCopy:()=>{h.default.addEventV2({category:"newman-discoverability",action:"copy-generated-api-key",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId})}}),i.a.createElement("div",{style:{paddingTop:"var(--spacing-s)",width:"fit-content"}},i.a.createElement(s.Button,{type:"primary",onClick:()=>{this.setState({apiKey:this.state.apiKeyInputText,isPopoverOpen:!1},(()=>{h.default.addEventV2(v({category:"newman-discoverability",action:"insert-api-key",label:"generated-api-key",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId},e.collection&&{entityId:e.collection}))}))},text:"Insert Key"})))}getInsertedAPIKeyBody(){const{selection:e}=this.props;return i.a.createElement(s.Flex,{direction:"column",gap:"spacing-s",width:"288px"},i.a.createElement(s.Heading,{type:"h3",text:"Inserted API key"}),i.a.createElement(s.TextInput,{type:"text",value:this.state.apiKey,enableCopy:!0}),i.a.createElement(s.Flex,{padding:{paddingTop:"spacing-s"},alignItems:"center",justifyContent:"space-between"},i.a.createElement(s.Button,{type:"primary",onClick:()=>{this.setState({isPopoverOpen:!1})},text:"Done"}),i.a.createElement(s.Button,{type:"plain",onClick:()=>{this.setState({isPopoverOpen:!0,popoverView:"InsertAPIKey",apiKeyName:"",apiKeyInputText:"",isButtonLoading:!1,isAPILimitReached:!1,apiKeyGenerationError:""},(()=>{h.default.addEventV2(v({category:"newman-discoverability",action:"change-api-key",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId},e.collection&&{entityId:e.collection}))}))},text:"Change Key"})))}getPopoverBody(){switch(this.state.popoverView){case"InsertAPIKey":default:return this.getInsertAPIKeyBody();case"EnterAPIKey":return this.getEnterApiKeyBody();case"GenerateAPIKey":return this.getGenerateApiKeyBody();case"GeneratedKey":return this.getGeneratedKeyBody();case"InsertedAPIKey":return this.getInsertedAPIKeyBody()}}fetchNewmanCommand(){this.setState({isLoading:!0,isError:!1}),y.default.request(T,{method:"GET",headers:{},credentials:"omit"}).then((e=>{this.setState({newmanCommandTemplate:e.body,isLoading:!1,isError:!1})})).catch((e=>{pm.logger.error("ConfigureNewman~fetchServiceList - There was an error while fetching the ci/cd services list",e),pm.toasts.error("Cannot provide template for configuring Newman but you can continue without it by clicking Finish Setup"),this.setState({isLoading:!1,isError:!0})}))}generateNewmanRunCommand(e,t={replaceAPIKey:!0}){const n=Object(c.resolveStoreInstance)(u.default).uid,{newmanCommandTemplate:r}=this.state;let a=r.command;return r.preCommand&&(a=`${r.preCommand} ${a}`),t.replaceAPIKey&&(a=this.state.apiKey?a.replaceAll("%pid",this.state.apiKey):a.replaceAll("%pid","{{postman-api-key-here}}")),a=e.collection?a.replaceAll("%cid",e.collection):a.replaceAll("%cid","{{collection-id-here}}"),n&&(a=`${a} ${r.envArg}`,a=a.replaceAll("%eid",n)),r.reporterCommand&&(a=`${a} ${r.reporterCommand}`),r.postCommand&&(a=`${a}${r.postCommand}`),a}handleCopy(){let e=getSelection().toString();const{selection:t}=this.props;e=e.replace(/=\n.*\n{0,1}/g,this.state.apiKey?`=${this.state.apiKey}`:"={{postman-api-key-here}}"),m.default.copy(e),h.default.addEventV2(v({category:"newman-discoverability",action:"copy_newman-command",label:"keyboard-shortcut",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId},t.collection&&{entityId:t.collection}))}handleCopyNemanCommand(e){this.state.isCopySuccess||(m.default.copy(this.generateNewmanRunCommand(e)),this.setState({isCopySuccess:!0},(()=>{this.clearCopySuccessTimeout=setTimeout((()=>this.setState({isCopySuccess:!1})),1500),h.default.addEventV2(v({category:"newman-discoverability",action:"copy_newman-command",label:"copy-command-cta",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId},e.collection&&{entityId:e.collection}))})))}renderAddAPIKeyButton(){const{selection:t}=this.props;return i.a.createElement(s.Popover,{isOpen:this.state.isPopoverOpen,onClickOutside:()=>this.setState({isPopoverOpen:!1}),placement:"top-start",padding:"spacing-l",trigger:this.state.apiKey?i.a.createElement("span",{onClick:()=>this.setState({isPopoverOpen:!0,popoverView:"InsertedAPIKey",apiKeyName:"",isButtonLoading:!1,isAPILimitReached:!1,apiKeyGenerationError:""},(()=>{h.default.addEventV2(v({category:"newman-discoverability",action:"open_inserted_api_key_modal",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId},t.collection&&{entityId:t.collection}))}))},i.a.createElement(s.Text,{type:"link-primary"},e.truncate(this.state.apiKey,{length:18}))):i.a.createElement(E,null,i.a.createElement(s.Button,{size:"small",type:"outline",text:"Add API Key",onClick:()=>this.setState({isPopoverOpen:!0,popoverView:"InsertAPIKey",apiKeyName:"",isButtonLoading:!1,isAPILimitReached:!1,apiKeyGenerationError:""},(()=>{h.default.addEventV2(v({category:"newman-discoverability",action:"open_add_api_key_modal",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId},t.collection&&{entityId:t.collection}))}))}))},this.getPopoverBody())}renderNewmanCommand(e){const t=this.generateNewmanRunCommand(e,{replaceAPIKey:!1}),[n,r]=t.split("%pid");return i.a.createElement(s.Text,{type:"Code/Medium",color:"content-color-primary"},n,this.renderAddAPIKeyButton(),r)}render(){const{selection:e}=this.props;return this.state.isLoading?i.a.createElement(s.Flex,{alignItems:"center",justifyContent:"center",height:"100%"},i.a.createElement(s.Spinner,null)):this.state.isError?i.a.createElement(s.Flex,{height:"100%"},i.a.createElement(s.BlankState,{title:"Couldn’t load newman command",description:"Just a faulty wire. Try reloading.",primaryAction:i.a.createElement(s.Button,{type:"outline",text:"Reload",onClick:this.fetchNewmanCommand})},i.a.createElement(s.IllustrationUnableToLoad,null))):i.a.createElement(s.Flex,{direction:"column",gap:"spacing-s"},i.a.createElement(s.Flex,{direction:"column"},i.a.createElement(s.Heading,{type:"h5",text:"Run on CLI",color:"content-color-secondary"}),i.a.createElement(s.Text,{type:"body-medium",color:"content-color-secondary"},"Automate using Newman, Postman's command-line runner. ",i.a.createElement(b.default,{to:pm.newmanDownloadUrl,target:"_blank",onClick:()=>{h.default.addEventV2({category:"newman-discoverability",action:"download_newman",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId})}},i.a.createElement(s.Text,{type:"link-default",isExternal:!0},"Install Newman")))),i.a.createElement(A,{direction:"column",padding:{paddingTop:"spacing-s",paddingBottom:"spacing-l",paddingLeft:"spacing-l",paddingRight:"spacing-l"},gap:"spacing-s",border:{border:"border-width-default",borderStyle:"border-style-solid",borderColor:"border-color-default"}},i.a.createElement(s.Flex,{justifyContent:"space-between",alignItems:"center"},i.a.createElement(s.Flex,{alignItems:"center",gap:"spacing-xs"},i.a.createElement(s.Heading,{type:"h5",text:"Newman CLI Command"}),i.a.createElement(s.Tooltip,{content:"After installing Newman, run the command in your CLI."},i.a.createElement(s.IconStateInfoStrokeSmall,{color:"content-color-secondary"}))),!this.props.hideCopyButton&&i.a.createElement(s.Button,{type:"tertiary",size:"small",icon:i.a.createElement(s.IconActionCopyStrokeSmall,null),text:"Copy",onClick:()=>this.handleCopyNemanCommand(e),tooltip:i.a.createElement(s.Tooltip,{content:"Copied",isOpen:this.state.isCopySuccess})})),i.a.createElement(g.default,{handlers:this.getKeyMapHandlers()},i.a.createElement(S,{style:{maxHeight:this.props.height||"fit-content"}},this.renderNewmanCommand(this.props.selection)))),!this.props.hideCICDConfig&&i.a.createElement(s.Flex,{direction:"column",padding:{paddingTop:"spacing-l"}},i.a.createElement(s.Heading,{type:"h5",text:"Run on CI/CD",color:"content-color-secondary"}),i.a.createElement(s.Text,{type:"body-medium",color:"content-color-secondary"},i.a.createElement("span",{onClick:()=>{p.default.transitionTo("build.configureNewman",{},{},{additionalContext:{collection:this.props.selection&&this.props.selection.collection,environment:Object(c.resolveStoreInstance)(u.default).uid}}),h.default.addEventV2(v({category:"newman-discoverability",action:"integrate_with_ci_cd",label:"runner",userId:this.currentUserInfo.id,teamId:this.currentUserInfo.teamId},e.collection&&{entityId:e.collection}))}},i.a.createElement(s.Text,{type:"link-default"},"Integrate with CI/CD"))," to run on event trigger.")))}})||r}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/runner/workbench/CollectionRunCreate/AutomateRun/AutomateRunModal.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return c}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),s=n("../../node_modules/@postman/aether/esmLib/index.js"),l=n("./runtime-repl/runner/workbench/CollectionRunCreate/AutomateRun/AutomateRun.js");let c=Object(o.observer)(r=class extends a.Component{render(){return i.a.createElement(s.Modal,{isOpen:this.props.isOpen,onClose:this.props.onClose},i.a.createElement(s.ModalHeader,{heading:"Automate run"}),i.a.createElement(s.ModalContent,null,i.a.createElement(l.default,{selection:this.props.selection,ref:e=>{this.automateRunRef=e},hideCopyButton:!0,hideCICDConfig:!0})),i.a.createElement(s.ModalFooter,null,i.a.createElement(s.Flex,{justifyContent:"flex-end",grow:1,shrink:1,gap:"spacing-s"},i.a.createElement(s.Button,{type:"secondary",text:"Cancel",onClick:this.props.onClose}),i.a.createElement(s.Button,{type:"primary",text:"Copy Command",onClick:()=>{this.automateRunRef&&this.automateRunRef.handleCopyNemanCommand(this.props.selection),this.props.onClose&&this.props.onClose(),pm.toasts.success("Newman command copied to clipboard")}}))))}})||r},"./runtime-repl/scripts/ScriptEditor.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return w}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("../../node_modules/react-dom/index.js"),s=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),l=n("../../node_modules/mobx/lib/mobx.module.js"),c=n("./node_modules/classnames/index.js"),u=n.n(c),d=n("./node_modules/prop-types/index.js"),h=n.n(d),p=n("./js/components/base/XPaths/XPath.js"),m=n("./runtime-repl/_common/_api/type-definition-providers/pre-script-type-definitions-provider.js"),f=n("./runtime-repl/_common/_api/type-definition-providers/tests-type-definitions-provider.js"),g=n("./runtime-repl/scripts/SnippetsConstants.js"),b=n("./js/stores/get-store.js"),y=n("./appsdk/components/editors/texteditor/TextEditor.js"),v=n("./runtime-repl/scripts/SnippetsList.js"),T=n("./appsdk/components/editors/texteditor/codeCompletion-providers/variableCodeCompletion-provider.js"),A=n("./collaboration/config/InlineCommentTransformerConfig.js");const E=e.find(A.default.request.anchors,(e=>"events/prerequest"===e.schemaPathIdentifier)),S=e.find(A.default.request.anchors,(e=>"events/test"===e.schemaPathIdentifier)),C={prscript:E&&E.schemaPathRegex,tests:S&&S.schemaPathRegex};function k(e,t){return!(!e||!t)&&(!(e.startLineNumber<t.startLineNumber||e.endLineNumber>t.endLineNumber)&&(!(e.startLineNumber===t.startLineNumber&&e.startColumn<t.startColumnNumber)&&!(e.endLineNumber===t.endLineNumber&&e.endColumn>t.endColumnNumber)))}function I(e,t){return!(!e||!t)&&(!(e.endLineNumber<t.startLineNumber)&&(!(e.startLineNumber>t.endLineNumber)&&(!(e.startLineNumber===t.endLineNumber&&e.startColumn>=t.endColumnNumber)&&!(e.endLineNumber===t.startLineNumber&&e.endColumn<=t.startColumnNumber))))}let w=Object(s.observer)(r=class extends a.Component{constructor(t){super(t),this.state={snippetListWidth:0},this.handleSnippetSelect=this.handleSnippetSelect.bind(this),this.onSelection=this.onSelection.bind(this),this.onSelectionDebounced=e.debounce(this.onSelection,500),this.registerTextEditor=this.registerTextEditor.bind(this),this.highlightInTextEditor=this.highlightInTextEditor.bind(this),this.onClickInside=this.onClickInside.bind(this),this.onClickInsideDebounced=e.debounce(this.onClickInside,300),this.highlightInTextEditorDebounced=e.debounce(this.highlightInTextEditor,300),this.handleActionMenu=this.handleActionMenu.bind(this),this.textEditorInstance=null,this.decorationsCache=[],this.inlineCommentStore=Object(b.getStore)("InlineCommentUIStore"),this.actionMenuStore=Object(b.getStore)("ActionMenuStore")}componentDidMount(){"request"===this.props.parent?this.activeTabSwitchReactionDisposer=Object(l.reaction)((()=>this.props.editor.viewState.activeTab),(e=>{e===this.props.type&&this.textEditor&&this.textEditor.focus()}),{fireImmediately:!0}):"collection"!==this.props.parent&&"folder"!==this.props.parent||(this.activeTabSwitchReactionDisposer=Object(l.reaction)((()=>this.props.editor.activeTab),(e=>{("pre-request-scripts"===e&&this.props.type===g.SNIPPETS_PROP_PRSCRIPT||"tests"===e&&this.props.type===g.SNIPPETS_PROP_TESTS)&&this.textEditor&&this.textEditor.focus()}),{fireImmediately:!0})),this.computeWidth(),pm.mediator.on("highlightInTextEditor",this.highlightInTextEditorDebounced),this.highlightInTextEditorDebounced()}componentDidUpdate(e){this.highlightInTextEditorDebounced(),e.snippetCollapsed===this.props.snippetCollapsed&&e.layoutName===this.props.layoutName||this.computeWidth()}componentWillUnmount(){this.activeTabSwitchReactionDisposer&&this.activeTabSwitchReactionDisposer(),pm.mediator.off("highlightInTextEditor",this.highlightInTextEditorDebounced)}onClickInside({target:t}){if(this.inlineCommentStore.disableComments||!this.props.commentMode)return;const n=t&&t.element&&t.element.classList;if(n&&n.contains("view-line"))return;const r=t&&t.range,a=C[this.props.type],i=Object(b.getStore)("AnnotationStore"),s=e.filter(i.values,(t=>"request"===t.model&&t.modelId===e.get(this.props,"editor.requestId")&&t.path&&!(t.status.orphaned||t.status.resolved)&&a&&a.test(t.anchor))),l=this.textEditor&&this.inlineCommentStore.getPathFromTarget(Object(o.findDOMNode)(this.textEditor)),c=this.textEditorInstance&&this.textEditorInstance.getSelection(),{startColumn:u,endColumn:d,startLineNumber:h,endLineNumber:p}=c||{},m=u===d&&h===p;let f=!1;e.forEach(s,(n=>{const a=e.get(n,"selection.range");if(k(r,a)){const e={startColumn:a.startColumnNumber,endColumn:a.endColumnNumber,startLineNumber:a.startLineNumber,endLineNumber:a.endLineNumber},n=this.textEditorInstance&&this.textEditorInstance.getModel().getValueInRange(e),r=I(c,a)&&m;this.inlineCommentStore.setCommentPath(t&&t.element,l),!this.inlineCommentStore.disableComments&&r&&(this.inlineCommentStore.setSelectionValue(n),this.inlineCommentStore.setSelectionRange(a),this.inlineCommentStore.setCommentPopoverState(!0),f=!0)}})),!m||f||this.inlineCommentStore.showComments||this.inlineCommentStore.setCommentPopoverState(!1)}onSelection(t){if(!this.props.commentMode)return this.handleActionMenu(t);if(this.inlineCommentStore.disableComments)return;const n=t&&t.selection,r=Object(b.getStore)("AnnotationStore"),a=C[this.props.type],i=e.filter(r.values,(t=>"request"===t.model&&t.modelId===e.get(this.props,"editor.requestId")&&t.path&&!(t.status.orphaned||t.status.resolved)&&a&&a.test(t.anchor)));if(n.startColumn===n.endColumn&&n.startLineNumber===n.endLineNumber){let t=!1;return e.forEach(i,(r=>{k(n,e.get(r,"selection.range"))&&(t=!0)})),void(t||(this.inlineCommentStore.setCommentPopoverState(!1),this.inlineCommentStore.setCommentState(!1)))}let s=!1;if(e.forEach(i,(t=>{I(n,e.get(t,"selection.range"))&&(s=!0)})),s)return this.inlineCommentStore.setCommentPopoverState(!1),void this.inlineCommentStore.setCommentState(!1);const l={startLineNumber:n.startLineNumber,endLineNumber:n.endLineNumber,startColumnNumber:n.startColumn,endColumnNumber:n.endColumn},c=this.textEditorInstance&&this.textEditorInstance.getModel().getValueInRange(n);let u;u=n.selectionStartLineNumber===n.startLineNumber&&n.selectionStartColumn===n.startColumn?"forward":"backward";const d=this.textEditorInstance.getDomNode().querySelector(".inputarea"),h=this.textEditor&&this.inlineCommentStore.getPathFromTarget(Object(o.findDOMNode)(this.textEditor));this.inlineCommentStore.setTooltipPlacement({forward:"right-top",backward:"left-top"}[u]),this.inlineCommentStore.setCommentPath(d,h),this.inlineCommentStore.setSelectionValue(c),this.inlineCommentStore.setSelectionRange(l),this.inlineCommentStore.setCommentPopoverState(!0),this.inlineCommentStore.setCommentState(!0)}getStyles(){return{width:`calc(100% - ${this.state.snippetListWidth}px)`}}getContainerClasses(){const e={"request-script-editor":!0};return e[`comment-available__${this.props.currentTheme}`]=this.props.commentMode,u()(e)}focus(){this.textEditor&&this.textEditor.focus()}refreshEditor(){this.textEditor&&this.textEditor.refresh()}handleSnippetSelect(e){if(e&&e.code&&this.textEditor){const t=e.code||"";this.textEditor.insertTextBlock(t)}}computeWidth(){if(this.snippetList){const e=Object(o.findDOMNode)(this.snippetList).getBoundingClientRect().width;e>0&&this.setState({snippetListWidth:e})}}handleActionMenu(e){const t=this.textEditorInstance.getDomNode().querySelector(".selected-text"),n=e&&e.selection,r=this.textEditorInstance&&this.textEditorInstance.getModel().getValueInRange(n),a=this.textEditorInstance&&this.textEditorInstance.getModel().getValueInRange({startColumn:0,startLineNumber:0,endColumn:n.startColumn,endLineNumber:n.startLineNumber}),i=this.textEditorInstance&&this.textEditorInstance.getModel().getLineCount(),o=this.textEditorInstance&&this.textEditorInstance.getModel().getLineMaxColumn(i),s=this.textEditorInstance&&this.textEditorInstance.getModel().getValueInRange({startColumn:n.endColumn,startLineNumber:n.endLineNumber,endColumn:o,endLineNumber:i});if(!r||!t)return this.actionMenuStore.clear();this.actionMenuStore.setActionMenuState(!0,t,r,n,"monaco",this.props.onChange),this.actionMenuStore.setSurroundingText(a,s)}registerTextEditor(e){this.textEditorInstance=e}highlightInTextEditor(){const{activeEditor:t}=Object(b.getStore)("ActiveWorkspaceSessionStore");if(e.get(this.props,"editor.id")!==t)return;if(!this.textEditorInstance)return;let n=[];if(!this.props.commentMode)return n=this.textEditorInstance.deltaDecorations(this.decorationsCache,[]),void(this.decorationsCache=n);const r=C[this.props.type],a=e.filter(Object(b.getStore)("AnnotationStore").values,(t=>"request"===t.model&&t.modelId===e.get(this.props,"editor.requestId")&&t.path&&!(t.status.orphaned||t.status.resolved)&&r&&r.test(t.anchor)));if(!Array.isArray(a))return;if(e.isEmpty(a))return n=this.textEditorInstance.deltaDecorations(this.decorationsCache,[]),void(this.decorationsCache=n);const i=e.map(a,(t=>{const n=e.get(t,"selection.range");return{range:{startLineNumber:n.startLineNumber,startColumn:n.startColumnNumber,endLineNumber:n.endLineNumber,endColumn:n.endColumnNumber},options:{className:"inline-comment-available"}}}));n=this.textEditorInstance.deltaDecorations(this.decorationsCache,i),this.decorationsCache=n}render(){const{editor:e}=this.props;let t;return t="collection"===this.props.source||"folder"===this.props.source?this.props.readOnly:this.props.commentMode,i.a.createElement("div",{className:this.getContainerClasses()},i.a.createElement("div",{className:`request-${this.props.type}-editor text-editor-wrapper`,style:this.getStyles()},i.a.createElement(p.default,{identifier:"scriptEditor"},i.a.createElement(y.default,{ref:e=>{this.textEditor=e},language:"javascript",hideActionBar:!0,value:this.props.value,onChange:this.props.onChange,codeCompletionProviders:[{provider:T.default.bind(this)}],typeDefinitionsProvider:this.props.type===g.SNIPPETS_PROP_PRSCRIPT?m.default:f.default,readOnly:t,onSelection:this.onSelectionDebounced,registerTextEditor:this.registerTextEditor,onClickInside:this.onClickInsideDebounced}))),!this.props.commentMode&&i.a.createElement(p.default,{identifier:"snippets"},i.a.createElement("div",{className:`request-${this.props.type}-editor-snippets`,ref:e=>{this.snippetList=e}},i.a.createElement(v.default,{help:{text:this.props.snippetText,link:this.props.snippetLink,action:this.props.onSnippetAction},snippets:this.props.snippets,handleSnippetSelect:this.handleSnippetSelect,snippetCollapsed:this.props.snippetCollapsed,handleCollapseToggle:this.props.handleCollapseToggle,editor:e,mode:this.props.mode}))))}})||r;w.contextTypes={variablesCache:h.a.object}}.call(this,n("./node_modules/lodash/lodash.js"))},"./runtime-repl/scripts/ScriptEditorContainer.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return d}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),s=n("./runtime-repl/scripts/SnippetsConstants.js"),l=n("./js/constants/AppUrlConstants.js"),c=n("./js/external-navigation/ExternalNavigationService.js"),u=n("./runtime-repl/scripts/ScriptEditor.js");let d=Object(o.observer)(r=class extends a.Component{constructor(e){super(e),this.state={snippetCollapsed:pm.settings.getSetting("scriptSnippetCollapsed")},this.editorRef=i.a.createRef(),this.onLearnMore=this.onLearnMore.bind(this),this.handleCollapseToggle=this.handleCollapseToggle.bind(this),this.updateSnippetCollapsedState=this.updateSnippetCollapsedState.bind(this)}componentDidMount(){pm.settings.on("setSetting:scriptSnippetCollapsed",this.updateSnippetCollapsedState)}componentWillUnmount(){pm.settings.off("setSetting:scriptSnippetCollapsed",this.updateSnippetCollapsedState)}getChildProps(){let e;return e=this.props.type===s.SNIPPETS_PROP_TESTS?{snippets:s.SNIPPETS_TEST,snippetText:s.SNIPPETS_TEXT_TEST,snippetLink:s.SNIPPETS_LINK_TEST,mode:s.SNIPPETS_CONST_TEST}:{snippets:s.SNIPPETS_PREREQ,snippetText:s.SNIPPETS_TEXT_PREREQ,snippetLink:s.SNIPPETS_LINK_PREREQ,mode:s.SNIPPETS_CONST_PREREQUEST},e}focus(){this.editorRef.focus()}refresh(){this.editorRef.refresh()}onLearnMore(){this.props.type===s.SNIPPETS_PROP_TESTS?Object(c.openExternalLink)(l.TEST_SCRIPT_DOCS,"_blank"):Object(c.openExternalLink)(l.PRE_REQUEST_SCRIPT_DOCS,"_blank")}updateSnippetCollapsedState(){this.setState({snippetCollapsed:pm.settings.getSetting("scriptSnippetCollapsed")})}handleCollapseToggle(){const e=pm.settings.getSetting("scriptSnippetCollapsed");pm.settings.setSetting("scriptSnippetCollapsed",!e)}render(){const e=this.getChildProps();return i.a.createElement("div",{className:`${this.props.type}-editor-container`},i.a.createElement("div",{className:`${this.props.type}-editor-group`},i.a.createElement(u.default,{type:this.props.type,ref:this.editorRef,layoutName:"layout-1-column",value:this.props.value,onChange:this.props.onChange,snippets:e.snippets,snippetText:e.snippetText,snippetLink:e.snippetLink,onSnippetAction:this.onLearnMore,handleCollapseToggle:this.handleCollapseToggle,snippetCollapsed:this.state.snippetCollapsed,mode:e.mode,commentMode:this.props.commentMode,parent:this.props.parent,readOnly:this.props.readOnly,editor:this.props.model})))}})||r},"./runtime-repl/scripts/SnippetsConstants.js":function(e,t,n){"use strict";n.r(t),n.d(t,"SNIPPETS_PREREQ",(function(){return i})),n.d(t,"SNIPPETS_TEST",(function(){return o})),n.d(t,"SNIPPETS_TEXT_PREREQ",(function(){return s})),n.d(t,"SNIPPETS_LINK_PREREQ",(function(){return l})),n.d(t,"SNIPPETS_TEXT_TEST",(function(){return c})),n.d(t,"SNIPPETS_LINK_TEST",(function(){return u})),n.d(t,"SNIPPETS_PROP_TESTS",(function(){return d})),n.d(t,"SNIPPETS_PROP_PRSCRIPT",(function(){return h})),n.d(t,"SNIPPETS_CONST_TEST",(function(){return p})),n.d(t,"SNIPPETS_CONST_PREREQUEST",(function(){return m}));var r=n("./node_modules/@postman/script-examples/index.js"),a=n.n(r);const i=a.a.getExamples("prerequest"),o=a.a.getExamples("test"),s="Pre-request scripts are written in JavaScript, and are run before the request is sent.",l="Learn more about pre-request scripts",c="Test scripts are written in JavaScript, and are run after the response is received.",u="Learn more about tests scripts",d="tests",h="prscript",p="test",m="prerequest"},"./runtime-repl/scripts/SnippetsItem.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n("../../node_modules/react/index.js"),a=n.n(r);class i extends r.Component{constructor(e){super(e),this.handleClick=this.handleClick.bind(this)}handleClick(){this.props.onSelect&&this.props.onSelect(this.props.snippet)}render(){return a.a.createElement("div",{className:"snippet-item",onClick:this.handleClick},this.props.snippet.name)}}},"./runtime-repl/scripts/SnippetsList.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return u}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),s=n("../../node_modules/@postman/aether/esmLib/index.js"),l=n("./js/components/base/Buttons.js"),c=n("./runtime-repl/scripts/SnippetsItem.js");let u=Object(o.observer)(r=class extends a.Component{constructor(e){super(e),this.handleSnippetSelect=this.handleSnippetSelect.bind(this),this.handleCollapseToggle=this.handleCollapseToggle.bind(this)}handleSnippetSelect(e){this.props.handleSnippetSelect&&this.props.handleSnippetSelect(e)}handleCollapseToggle(){this.props.handleCollapseToggle&&this.props.handleCollapseToggle()}render(){return this.props.snippetCollapsed?i.a.createElement(l.Button,{className:"snippet-toggle-button",onClick:this.handleCollapseToggle},i.a.createElement(s.Icon,{name:"icon-direction-left",className:"snippet-toggle-icon snippet-toggle-icon--expand"})):i.a.createElement("div",{className:"snippet-wrapper"},i.a.createElement("div",{className:"snippet-header"},i.a.createElement("div",{className:"snippet-header__left"},i.a.createElement("div",{className:"snippet-header__help"},i.a.createElement("div",{className:"snippet-header__help__text"},this.props.help.text),i.a.createElement(l.Button,{type:"text",className:"snippet-header__help__link",onClick:this.props.help.action},this.props.help.link)),i.a.createElement("div",{className:"snippet-header__title"},"SNIPPETS")),i.a.createElement("div",{className:"snippet-header__right"},i.a.createElement(l.Button,{className:"snippet-toggle-button",onClick:this.handleCollapseToggle},i.a.createElement(s.Icon,{name:"icon-direction-right",className:"snippet-toggle-icon snippet-toggle-icon--collapse"})))),i.a.createElement("div",{className:"snippet-items"},e.map(this.props.snippets,((e,t)=>i.a.createElement(c.default,{key:t,snippet:e,onSelect:this.handleSnippetSelect})))))}})||r;u.defaultProps={snippets:[]}}.call(this,n("./node_modules/lodash/lodash.js"))},"./version-control/Watch/components/WatchButton/WatchButton.js":function(e,t,n){"use strict";n.r(t);var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("./node_modules/prop-types/index.js"),o=n.n(i),s=n("../../node_modules/@postman/aether/esmLib/index.js"),l=n("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),c=n("./version-control/Watch/components/WatchersList.js"),u=n("./version-control/Watch/components/WatchPreferences.js"),d=n("./version-control/common/ControlledComboButton/index.js"),h=n("./version-control/common/OutsideClick/index.js"),p=n("./version-control/utils/number.ts");function m(){return m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},m.apply(this,arguments)}const f=l.createGlobalStyle`
  .watch-button__watch-preferences-popover {
    background-color: ${({theme:e})=>e["background-color-primary"]};
    width: 320px;
    border: none;
    padding: 0;
  }

  .watch-button__watch-preferences-popover .tooltip-wrapper {
    background-color: ${({theme:e})=>e["background-color-primary"]};
  }

  .watch-button__watch-preferences-popover.bs-tooltip-bottom {
    padding-bottom: 0;
  }

  .watch-button__watchers-popover {
    background-color: ${({theme:e})=>e["background-color-primary"]};
    width: 256px;
    border: none;
    padding: 0;
  }

  .watch-button__watchers-popover .tooltip-wrapper {
    background-color: ${({theme:e})=>e["background-color-primary"]};
    padding-bottom: 0;
  }

  .watch-button-wrapper {
    button {
      color: ${({theme:e})=>e["content-color-secondary"]};
      background-color: unset;
      min-width: unset;

      &:hover {
        color: ${({theme:e})=>e["content-color-primary"]};
        background-color: ${({theme:e})=>e["highlight-background-color-primary"]};
      }
    }

    &:hover {
      .controlled-combo-button__separator {
        border-left-color: transparent;
      }
    }
  }
`,g=l.default.div`
  display: flex;

  .model-watch-button {
    display: inline-flex;
    justify-content: space-between;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-right: ${({theme:e})=>e["border-width-default"]}
      ${({theme:e})=>e["border-style-solid"]}
      ${({theme:e})=>e["border-color-strong"]};
    font-size: ${({theme:e})=>e["text-size-m"]};
    font-weight: ${({theme:e})=>e["text-weight-regular"]};
    color: ${({theme:e})=>e["content-color-primary"]};
    /**
     * Hacky fix to make button look like aether button.Replace with aether button
     * when it supports icon on the right and left together.
     */
    background-color: ${({theme:e})=>e["button-secondary-background-color"]};
  }

  .model-watch-button.is-active {
    background-color: ${({theme:e})=>e["button-secondary-background-color"]};
  }

  .watch-label {
    margin-left: ${({theme:e})=>e["spacing-s"]};
    font-size: ${({theme:e})=>e["text-size-m"]};
    font-weight: ${({theme:e})=>e["text-weight-regular"]};;
  }

  .count-btn {
    min-width: ${({theme:e})=>e["size-m"]};
    padding: ${({theme:e})=>e["spacing-s"]};
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    font-size: ${({theme:e})=>e["text-size-m"]};
    font-weight: ${({theme:e})=>e["text-weight-regular"]};
    color: ${({theme:e})=>e["content-color-primary"]};
    /**
     * Hacky fix to make button look like aether button.Replace with aether button
     * when it supports icon on the right and left together.
     */
  }

  .count-btn.is-active {
    color: ${({theme:e})=>e["content-color-primary"]};
  }

  .caret {
    margin-left: ${({theme:e})=>e["spacing-s"]};
  }

  && svg > path[fill] {
    fill: ${({theme:e})=>e["content-color-secondary"]};
  }

  .is-disabled.is-disabled:hover {
    opacity: 0.4;
    color: ${({theme:e})=>e["content-color-primary"]};
  }

`;function b(e){const{className:t,style:n,model:i,isWatching:o,isFetchingWatchersList:l,isFetchingPreferences:b,disableCount:y,restrictPreferencesChange:v,isWatchToggleDisabled:T,isPreferencesEnabled:A,watchersCount:E,privateWatchersCount:S,watchersList:C,preferences:k,watchPreferencesPopoverDescription:I,countBtnTooltip:w,watchersListFetchErr:x,watchToggleTooltip:j,currentUserId:O,hideLabel:R,onWatchersListOpen:_,onOpenPreferences:P,onClickWatchStateChangeTrigger:N,onPreferenceChange:L,reloadWatchers:U,renderWatchPreferencesTitle:D,toggleWatch:F,isProcessingWatchToggle:M,isFetchingModelWatchStatus:V}=e,[B,q]=a.a.useState(!1),[W,H]=a.a.useState(!1),[K,z]=a.a.useState(!1),[G,Y]=a.a.useState("watch-button__watchers-popover"),J=a.a.useRef();Object(r.useEffect)((()=>{q(K),K?(P(),N()):W&&_()}),[K,W]),Object(h.useOutsideClick)(J,(()=>{H(!1)}));const $=a.a.createElement(a.a.Fragment,null,o?a.a.createElement(s.IconActionViewFill,{size:"small",color:"content-color-secondary"}):a.a.createElement(s.IconActionViewStroke,{color:"content-color-secondary",size:"small"}),!e.hideLabel&&a.a.createElement("div",{className:"watch-label"},o?"Watching":"Watch"),(B&&!v||o)&&a.a.createElement(s.Icon,{name:"icon-direction-down",className:"caret",color:"content-color-secondary"}));return a.a.createElement(a.a.Fragment,null,a.a.createElement(g,{className:t,style:n},A?(()=>{const e={primaryButtonText:$,primaryButtonIcon:o?"icon-action-view-fill":"icon-action-view-stroke",primaryButtonTextHide:R,onPrimaryButtonClick:K?null:()=>{z(!0),Y("watch-button__watch-preferences-popover")},isPrimaryButtonLoading:M,isPrimaryButtonDisabled:T,primaryButtonTooltip:T&&j,useCustomButton:!0,primaryButtonMinWidth:"88px",buttonIconSize:"small"},t={menuButtonText:E||0,isMenuButtonDisabled:y,menuButtonTooltip:y&&w,onMenuButtonClick:W?null:()=>{H(!0),Y("watch-button__watchers-popover")}},n={isMenuOpen:W||K,renderMenuContent:()=>a.a.createElement(r.Fragment,null,W&&a.a.createElement(c.default,{list:C,isLoading:l,count:E,error:x,reload:U,currentUserId:O,model:i}),!v&&K&&a.a.createElement(u.default,{isLoading:b,preferences:k,onPreferenceChange:L,description:I,renderTitle:D})),onMenuClose:()=>{W&&H(!1),K&&z(!1)}};return a.a.createElement(d.default,m({},e,t,n,{className:"watch-button-wrapper",popoverClassName:G}))})():(()=>{const e={primaryButtonIcon:o?"icon-action-view-fill":"icon-action-view-stroke",primaryButtonTextHide:R,onPrimaryButtonClick:()=>F(!o),isPrimaryButtonLoading:M||V,isPrimaryButtonDisabled:T,primaryButtonTooltip:T&&j,primaryButtonMinWidth:"88px",buttonIconSize:"small"};R||(e.primaryButtonText=o?"Unwatch":"Watch"),!T&&R&&(e.primaryButtonTooltip=o?"Unwatch":"Watch");return a.a.createElement(s.CounterButton,{type:"primary",text:e.primaryButtonText,onClick:()=>F(!o),count:Object(p.default)(E)||0,isDisabled:T,isLoading:e.isPrimaryButtonLoading,tooltip:e.primaryButtonTooltip,icon:o?"icon-action-view-fill":"icon-action-view-stroke",secondaryButton:a.a.createElement(s.Button,{isDisabled:y,tooltip:w,ref:J,onClick:()=>{H(!W)}})},a.a.createElement(s.Popover,{isOpen:W,maxWidth:300,placement:"top",padding:"spacing-m",triggerRef:J},a.a.createElement(c.default,{list:C,isLoading:l,count:E,privateWatchersCount:S,error:x,reload:U,currentUserId:O,model:i})))})()),a.a.createElement(f,null))}b.propTypes={style:o.a.object,className:o.a.string,isWatching:o.a.bool.isRequired,watchersCount:o.a.number,privateWatchersCount:o.a.number,onWatchersListOpen:o.a.func.isRequired,watchersList:o.a.arrayOf(o.a.shape({name:o.a.string.isRequired,profileUrl:o.a.string.isRequired,profilePicUrl:o.a.string.isRequired,userId:o.a.string.isRequired})),isFetchingWatchersList:o.a.bool,onOpenPreferences:o.a.Func,onClickWatchStateChangeTrigger:o.a.func.isRequired,isFetchingPreferences:o.a.bool,preferences:o.a.object,onPreferencesChange:o.a.func,restrictPreferencesChange:o.a.bool,watchersListFetchErr:o.a.oneOfType([o.a.bool,o.a.object]),reloadWatchers:o.a.func,disableCount:o.a.bool,countBtnTooltip:o.a.string,isWatchToggleDisabled:o.a.bool,watchToggleTooltip:o.a.string,renderWatchPreferencesTitle:o.a.func,currentUserId:o.a.string,isPreferencesEnabled:o.a.boolean,isProcessingWatchToggle:o.a.boolean,isFetchingModelWatchStatus:o.a.boolean,toggleWatch:o.a.function,watchPreferencesPopoverDescription:o.a.string},t.default=b},"./version-control/Watch/components/WatchContainer/Watch.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return E}));var r,a,i,o=n("../../node_modules/react/index.js"),s=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),l=n("../../node_modules/mobx/lib/mobx.module.js"),c=n("./node_modules/prop-types/index.js"),u=n.n(c),d=n("./version-control/Watch/WatchService.js"),h=n("./version-control/Watch/components/WatchButton/WatchButton.js"),p=n("./js/stores/CurrentUserStore.js"),m=n("./js/stores/SyncStatusStore.js"),f=n("./js/stores/StoreManager.js"),g=n("./version-control/Watch/config.js"),b=n("./js/modules/services/AnalyticsService.js"),y=n("./js/services/UIEventService.js"),v=n("./growth/activation/features/OnboardingChecklist/helpers/constants.js");n("./js/utils/PluralizeHelper.js");function T(){return T=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},T.apply(this,arguments)}function A(e,t,n,r,a){var i={};return Object.keys(r).forEach((function(e){i[e]=r[e]})),i.enumerable=!!i.enumerable,i.configurable=!!i.configurable,("value"in i||i.initializer)&&(i.writable=!0),i=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),i),a&&void 0!==i.initializer&&(i.value=i.initializer?i.initializer.call(a):void 0,i.initializer=void 0),void 0===i.initializer&&(Object.defineProperty(e,t,i),i=null),i}let E=Object(s.observer)((a=class extends o.Component{constructor(e){var t,n,r,a;super(e),t=this,n="watcherPreferences",a=this,(r=i)&&Object.defineProperty(t,n,{enumerable:r.enumerable,configurable:r.configurable,writable:r.writable,value:r.initializer?r.initializer.call(a):void 0}),this.fetchWatchConfig=()=>{Object(d.getWatchConfig)(this.props.model,this.props.modelId,this.props.subEntityType).then((e=>{this.setState({isPreferencesEnabled:e.enabled})})).catch((e=>{this.setState({isPreferencesEnabled:!1})}))},this.fetchPermissions=()=>{this.setState({isFetchingPermissions:!0,permissionFetchErr:null}),Object(d.checkWatchAccess)(this.props.model,this.props.modelId).then((({isPublic:e})=>{this.setState({isPublicModel:e,isFetchingPermissions:!1})})).catch((e=>{this.setState({isFetchingPermissions:!1,permissionFetchErr:e.error})}))},this.toggleWatch=(e=!this.state.isWatchingModel)=>("collection"===this.props.model&&e&&y.default.publish(v.COLLECTION_WATCH_TOGGLE_EVENT),new Promise(((t,n)=>{const r=g.default[this.props.model].signInOptions,{isPublicModel:a}=this.state,i=Object(f.resolveStoreInstance)(p.default);i.isLoggedIn?e&&a&&!i.hasPublicProfile?(this.setState({restrictPreferencesChange:!0}),pm.mediator.trigger("showUpdateUserProfileModal",{onComplete:()=>{this.setWatchStatus(!0).then((()=>{this.setState({restrictPreferencesChange:!1}),t()}))},onCancel:()=>{this.setState({restrictPreferencesChange:!1}),n()}})):this.setWatchStatus(e).then((()=>{t()})):(this.setState({restrictPreferencesChange:!0}),pm.mediator.trigger("showSignInModal",{type:r.type,origin:r.origin,continueUrl:r.getContinueURL()}),n())}))),this.fetchWatchingState=()=>{const{model:e,modelId:t}=this.props;this.setState({isFetchingModelWatchStatus:!0,modelWatchStatusFetchError:null}),Object(d.isWatchingModel)(e,t).then((e=>{this.setState({isWatchingModel:e,isFetchingModelWatchStatus:!1})})).catch((e=>{this.setState({isFetchingModelWatchStatus:!1,modelWatchStatusFetchError:e.error})}))},this.fetchWatchersCount=()=>{const{model:e,modelId:t}=this.props;this.setState({isFetchingWatchersCount:!0,watchersCountFetchingErr:void 0}),Object(d.getModelWatchersCount)(e,t).then((e=>{this.setState({watchersCount:e,isFetchingWatchersCount:!1})})).catch((e=>{this.setState({isFetchingWatchersCount:!1,watchersCountFetchingErr:e.error})}))},this.onOpenWatchersList=()=>{this.fetchWatchersList()},this.fetchWatchersList=()=>{const{model:e,modelId:t}=this.props;0!==this.state.watchersCount?(this.setState({isFetchingWatchersList:!0}),Object(d.getModelWatchers)(e,t).then((({count:e,list:t,privateWatchersCount:n})=>{this.setState({watchersCount:e,watchersList:t,privateWatchersCount:n,isFetchingWatchersList:!1})})).catch((e=>{this.setState({isFetchingWatchersList:!1,watchersListFetchErr:e})}))):this.setState({watchersList:[],isFetchingWatchersList:!1})},this.fetchPreferences=()=>{const{model:e,modelId:t}=this.props;this.state.isWatchingModel&&(this.setState({isFetchingPreferences:!0}),Object(d.getWatcherPreferences)(e,t,this.props.subEntityType).then((({preferences:e,description:t})=>{this.setWatcherPreference(e),this.preferencesDescription=t,this.setState({isFetchingPreferences:!1})})).catch((e=>{this.setState({isFetchingPreferences:!1,preferenceFetchErr:e})})))},this.onWatchStateChangeTrigger=async()=>{this.setState({restrictPreferencesChange:!1});try{if(this.state.isWatchingModel)return;this.setState({isFetchingPreferences:!0}),await this.toggleWatch(!0),this.fetchPreferences()}catch(e){this.setState({isFetchingPreferences:!1,restrictPreferencesChange:!0})}},this.onPreferenceChange=e=>{e.some((e=>e.enabled))?!this.state.isWatchingModel&&this.toggleWatch(!0):this.state.isWatchingModel&&this.toggleWatch(!1),this.updatePreferences(e)},this.updatePreferences=e=>{const t=e.reduce(((e,t)=>(e[t.key]=t.enabled,e)),{});this.setPreferences(t)},this.setPreferences=e=>{const{model:t,modelId:n}=this.props;Object(d.updateWatcherPreferences)(t,n,e)},this.state={isFetchingModelWatchStatus:!1,isWatchingModel:!1,isProcessingWatchToggle:!1,isFetchingWatchersCount:!1,isFetchingWatchersList:!0,isFetchingPreferences:!0,isPublicModel:!1,isFetchingPermissions:!0,isPreferencesEnabled:!1},this.preferencesDescription=""}componentDidMount(){Object(f.resolveStoreInstance)(m.default).onSyncAvailable({timeout:2e4}).then((()=>this.fetchInitialData())).catch((e=>pm.logger.error("WatchContainer~Could not fetch initial data",e)))}fetchInitialData(){Object(f.resolveStoreInstance)(p.default).isLoggedIn?(this.fetchPermissions(),this.fetchWatchingState(),this.fetchWatchConfig()):this.setState({isPublicModel:!0,isWatchingModel:!1,isFetchingPermissions:!1}),this.fetchWatchersCount()}handleAnalytics(e,t,n){b.default.addEventV2({category:t,entityId:this.props.modelId,action:e,label:n,value:1})}setWatchStatus(t){const{modelId:n,model:r}=this.props,a=t?d.watchModel:d.unWatchModel;return this.setState({isProcessingWatchToggle:!0}),a(r,n).then((()=>{this.setState((e=>({isProcessingWatchToggle:!1,isWatchingModel:!e.isWatchingModel})));const n=t?"watch":"unwatch";this.handleAnalytics(n,e.get(this.props,"analyticsOptions.category"),e.get(this.props,"analyticsOptions.label")),this.fetchWatchersCount()})).catch((()=>{this.setState({isProcessingWatchToggle:!1}),pm.toasts.error("Just a faulty wire. Try performing the action again.",{noIcon:!0,title:"Something went wrong. Try again."})}))}setWatcherPreference(e){this.watcherPreferences=e}get preferences(){if(this.watcherPreferences)return Object.entries(Object(l.toJS)(this.watcherPreferences)).map((([e,t])=>T({},t,{key:e})))}get isOffline(){return!Object(f.resolveStoreInstance)(m.default).isSocketConnected}get countBtnTooltip(){const{watchersCountFetchingErr:e,permissionFetchErr:t,watchersCount:n}=this.state;return this.isOffline?"You can take this action once you're back online.":t?t.message:e?e.message:""}get watchToggleButtonTooltip(){const{isProcessingWatchToggle:e,modelWatchStatusFetchError:t,permissionFetchErr:n}=this.state;return this.isOffline?"You can take this action once you're back online.":e?"Please wait while your request is being processed.":n?n.message:t?t.message:void 0}get isWatchToggleDisabled(){const{isProcessingWatchToggle:e,isFetchingModelWatchStatus:t,modelWatchStatusFetchError:n,isFetchingPermissions:r,permissionFetchErr:a}=this.state;return e||t||n||this.isOffline||r||a}get isWatchersCountButtonDisabled(){const{watchersCountFetchingErr:e,isFetchingPermissions:t,permissionFetchErr:n}=this.state;return e||n||t||this.isOffline}render(){const{className:e}=this.props,t=Object(f.resolveStoreInstance)(p.default);return o.createElement(h.default,{isWatching:this.state.isWatchingModel,className:e,watchersCount:this.state.watchersCount,privateWatchersCount:this.state.privateWatchersCount,onWatchersListOpen:this.onOpenWatchersList,isFetchingWatchersList:this.state.isFetchingWatchersList,watchersList:this.state.watchersList,onOpenPreferences:this.fetchPreferences,onClickWatchStateChangeTrigger:this.onWatchStateChangeTrigger,isFetchingPreferences:this.state.isFetchingPreferences,preferences:this.preferences,isPreferencesEnabled:this.state.isPreferencesEnabled,toggleWatch:this.toggleWatch,hideLabel:this.props.hideLabel,isProcessingWatchToggle:this.state.isProcessingWatchToggle,onPreferenceChange:this.onPreferenceChange,watchPreferencesPopoverDescription:this.preferencesDescription,restrictPreferencesChange:this.state.restrictPreferencesChange,watchersListFetchErr:this.state.watchersListFetchErr,reloadWatchers:this.fetchWatchersList,disableCount:this.isWatchersCountButtonDisabled,countBtnTooltip:this.countBtnTooltip,isWatchToggleDisabled:this.isWatchToggleDisabled,watchToggleTooltip:this.watchToggleButtonTooltip,renderWatchPreferencesTitle:g.default[this.props.model].renderWatchPreferencesTitle,currentUserId:t.id,model:this.props.model,isFetchingModelWatchStatus:this.state.isFetchingModelWatchStatus})}},i=A(a.prototype,"watcherPreferences",[l.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),A(a.prototype,"setWatcherPreference",[l.action],Object.getOwnPropertyDescriptor(a.prototype,"setWatcherPreference"),a.prototype),A(a.prototype,"preferences",[l.computed],Object.getOwnPropertyDescriptor(a.prototype,"preferences"),a.prototype),A(a.prototype,"isOffline",[l.computed],Object.getOwnPropertyDescriptor(a.prototype,"isOffline"),a.prototype),r=a))||r;E.propTypes={modelId:u.a.string.isRequired,model:u.a.oneOf(["collection","pullRequest","api"]).isRequired,className:u.a.string,hideLabel:u.a.bool,analyticsOptions:u.a.object}}.call(this,n("./node_modules/lodash/lodash.js"))},"./version-control/Watch/components/WatchPreferences.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return h}));var r=n("../../node_modules/react/index.js"),a=n("./node_modules/prop-types/index.js"),i=n.n(a),o=n("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),s=n("../../node_modules/@postman/aether/esmLib/index.js"),l=n("./js/components/base/LoadingIndicator.js"),c=n("./runtime-repl/_common/components/molecule.js");function u(){return u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},u.apply(this,arguments)}const d=o.default.div`
  display: flex;
  justify-content: center;
  padding: ${({theme:e})=>e["spacing-l"]};

  .entity {
    margin-top: ${({theme:e})=>e["spacing-l"]};
  }

  .entity-top-row {
    display: flex;
    align-items: center;
  }

  .entity-description {
    margin-left: ${({theme:e})=>e["spacing-xl"]};
  }

  .entity-title {
    margin-left: ${({theme:e})=>e["spacing-s"]};
    display: inline-flex;
  }

  .preference-checkbox {
    height: 14px;
    width: 14px;
    min-width: unset;
  }

  .preference-checkbox svg {
    width: 14px;
  }

  .preference-checkbox.is-selected {
    background-color: ${({theme:e})=>e["base-color-brand"]};
    border: none;
    height: 16px;
    width: 16px;
  }

  .preference-checkbox.is-selected svg {
    width: 16px;
  }
`;function h(e){const{isLoading:t,preferences:n,onPreferenceChange:a,description:i,renderTitle:o}=e,[h,p]=r.useState(n);r.useEffect((()=>{p(n)}),[n]);return r.createElement(d,null,t&&r.createElement(l.default,null),!t&&h&&r.createElement("div",null,r.createElement(s.Heading,{text:o?o(h):"",type:"h4",hasBottomSpacing:!0}),r.createElement(s.Text,{text:i,type:"body-medium",color:"content-color-secondary"}),h.map((e=>r.createElement("div",{className:"entity",key:e.key},r.createElement("div",{className:"entity-top-row"},r.createElement(c.Checkbox,{checked:e.enabled,size:"md",className:"preference-checkbox",onChange:()=>(e=>{const t=h.findIndex((t=>t.key===e));t>-1&&(h[t]=u({},h[t],{enabled:!h[t].enabled}),p(h.slice()),a(h))})(e.key)}),r.createElement("div",{className:"entity-title"},r.createElement(s.Text,{text:e.title,hasBottomSpacing:!0,color:"content-color-primary"}))),r.createElement("div",{className:"entity-description"},r.createElement(s.Text,{text:e.description,color:"content-color-secondary",type:"body-small"})))))))}h.propTypes={isLoading:i.a.bool,preferences:i.a.arrayOf(i.a.shape({enabled:i.a.bool.isRequired,title:i.a.string.isRequired,description:i.a.string.isRequired,key:i.a.string.isRequired})),onPreferenceChange:i.a.func.isRequired,renderTitle:i.a.func,description:i.a.string}},"./version-control/Watch/components/WatchersList.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return b}));var r=n("../../node_modules/react/index.js"),a=n("./node_modules/prop-types/index.js"),i=n.n(a),o=n("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),s=n("./node_modules/classnames/index.js"),l=n.n(s),c=n("../../node_modules/@postman/aether/esmLib/index.js"),u=n("./js/components/base/LoadingIndicator.js"),d=n("./js/utils/PluralizeHelper.js"),h=n("./version-control/common/UserListItem/index.js"),p=n("./version-control/Watch/config.js");const m=o.default.div`
  cursor: pointer;

  &:last-child {
    padding-bottom: ${({theme:e})=>e["spacing-l"]};
  }

  .watcher-tooltip {
    all: unset;
    display: flex;
    align-items: center;
    width: 100%;
  }

  .user-name {
    font-size: ${({theme:e})=>e["text-size-m"]};
    font-weight: ${({theme:e})=>e["text-weight-regular"]};
    line-height: ${({theme:e})=>e["line-height-m"]};
    color: ${({theme:e})=>e["content-color-primary"]};
  }

  .link:hover {
    text-decoration: underline;
  }

  &:hover {
    .link {
      color: ${({theme:e})=>e["content-color-info"]};
    }
  }
`,f=o.createGlobalStyle`
  .user-list-item__tooltip-body.user-list-item__tooltip-body {
    z-index: 10000;
    margin-left: ${({theme:e})=>e["spacing-s"]};
  }
`,g=o.default.div`
  display: flex;
  justify-content: center;
  min-height: 88px;
  box-sizing: border-box;

  .watchers-list {
    max-height: 50vh;
    overflow-y: auto;
    overflow-x: hidden;
  }

  .title {
    font-size: ${({theme:e})=>e["text-size-m"]};
    font-weight: ${({theme:e})=>e["text-weight-medium"]};
    line-height: ${({theme:e})=>e["line-height-m"]};
    color: ${({theme:e})=>e["content-color-secondary"]};
    padding: ${({theme:e})=>e["spacing-s"]};
    padding-bottom: ${({theme:e})=>e["spacing-s"]};
  }

  .list-container {
    width: 100%;
  }

  .list-container.loading {
    height: 117px;
  }

  .error-container {
    width: 100%;
    padding: ${({theme:e})=>e["spacing-s"]};
  }

  ul {
    padding: 0;
    margin: 0;
  }

  .menu-item.menu-item {
    padding: 0;
  }

  .menu-item-content {
    display: flex;
  }

  .avatar {
    height: ${({theme:e})=>e["size-xs"]};
    width: ${({theme:e})=>e["size-xs"]};
    margin-right: ${({theme:e})=>e["spacing-s"]};
  }

  .loading-indicator {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .title.loading {
    padding-bottom: ${({theme:e})=>e["spacing-xl"]};
  }

  .title--error {
    padding: 0;
    margin-bottom: ${({theme:e})=>e["spacing-s"]};
  }

  .reload-button {
    margin-top: ${({theme:e})=>e["spacing-s"]};
  }

  .watchers-empty-state {
    padding: ${({theme:e})=>e["spacing-s"]};
    display: block;
    padding-top: ${({theme:e})=>e["spacing-s"]};
  }
`;function b(t){const{list:n,count:a,privateWatchersCount:i,reload:o,error:s,isLoading:b,currentUserId:y,model:v}=t;return s&&!b?r.createElement(g,null,r.createElement("div",{className:"error-container"},r.createElement("div",{className:"title title--error"},"Couldn't load watchers"),r.createElement("div",null,r.createElement(c.Text,{text:"Just a faulty wire. Try reloading the watchers.",hasBottomSpacing:!0})),r.createElement(c.Button,{text:"Reload Watchers",onClick:o,className:"reload-button"}))):r.createElement(g,null,r.createElement("div",{className:l()("list-container",{loading:b})},r.createElement("div",{className:l()("title",{loading:b})},`${a||"No"} ${d.default.pluralize({count:a,singular:"watcher",plural:"watchers"})}`),b&&r.createElement(u.default,{className:"loading-indicator"}),!b&&!e.get(n,"length")&&r.createElement(c.Text,{text:`People who watch this ${e.get(p.default,[v,"displayName"],"")} will show up here.`,className:"watchers-empty-state",color:"content-color-primary"}),!b&&!!e.get(n,"length")&&r.createElement("ul",{className:"watchers-list"},n.map((t=>r.createElement(m,{key:e.get(t,"userId")},r.createElement(h.default,{key:e.get(t,"userId"),user:t,privateWatchersCount:i,isCurrentUser:y&&y===e.get(t,"userId")}))))),r.createElement(f,null)))}b.propTypes={isLoading:i.a.bool,count:i.a.number.isRequired,privateWatchersCount:i.a.number,list:i.a.arrayOf(i.a.shape({name:i.a.string.isRequired,userId:i.a.string.isRequired,profileUrl:i.a.string.isRequired,ProfilePicUrl:i.a.string})),error:i.a.oneOfType([i.a.object,i.a.bool]),reload:i.a.func.isRequired,currentUserId:i.a.string}}.call(this,n("./node_modules/lodash/lodash.js"))},"./version-control/common/ControlledComboButton/index.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return u}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),o=n("./js/components/base/Buttons.js"),s=n("../../node_modules/@postman/aether/esmLib/index.js"),l=n("./js/components/base/Tooltips.js");const c=i.default.div`
  display: inline-flex;

  .controlled-combo-button__primary-button {
    min-width: ${e=>e.hideLabel&&"0"};
    pointer-events: ${e=>e.isPrimaryButtonDisabled&&"none"};
  }

  /** TODO: remove this aether button supports small size icons on medium buttons. */
  .controlled-combo-button__primary-button svg {
    height: ${({theme:e,iconSize:t})=>e["small"===t?"text-size-m":"text-size-xl"]};
    width: ${({theme:e,iconSize:t})=>e["small"===t?"text-size-m":"text-size-xl"]};
  }

  .controlled-combo-button__primary-button i {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    opacity: ${e=>e.isPrimaryButtonDisabled&&"0.5"};
  }

  .controlled-combo-button__menu-button {
    padding: ${({theme:e})=>e["spacing-s"]};
    min-width: ${({theme:e})=>e["size-m"]};
    background-color: ${e=>e.isPrimaryButtonDisabled&&"transparent"};
    pointer-events: ${e=>e.isPrimaryButtonDisabled&&"none"};
    box-shadow: ${e=>e.isPrimaryButtonDisabled&&"none"};
  }

  .controlled-combo-button__separator {
    border-left: ${({theme:e,isPrimaryButtonDisabled:t})=>t?"transparent":`${e["border-width-default"]} ${e["border-style-solid"]} ${e["splitbutton-tertiary-splitter-color"]}`};
    height: 20px;
    margin-top: 6px;
  }
`;function u(e){const{className:t,popoverClassName:n,useCustomButton:i,isMenuOpen:u,isPrimaryButtonLoading:d,isMenuButtonLoading:h,isPrimaryButtonDisabled:p,comboButtonSize:m,isMenuButtonDisabled:f,primaryButtonText:g,primaryButtonTextHide:b,primaryButtonIcon:y,menuButtonText:v,renderMenuContent:T,primaryButtonTooltip:A,menuButtonTooltip:E,buttonIconSize:S,primaryButtonMinWidth:C,onPrimaryButtonClick:k,onMenuButtonClick:I,onMenuClose:w}=e,x=Object(r.useRef)(),j={text:g,icon:y,type:"secondary",size:m||"medium",tooltip:A&&a.a.createElement(s.Tooltip,{content:A,placement:"bottom"}),isDisabled:p,isLoading:d,onClick:k,className:"controlled-combo-button__primary-button",minWidth:C};i&&(j.tooltip=A);const O={text:v,type:"secondary",size:m||"medium",tooltip:E&&a.a.createElement(s.Tooltip,{content:E,placement:"bottom"}),isDisabled:f,isLoading:h,onClick:I,className:"controlled-combo-button__menu-button"},R={show:u,target:x.current,placement:"bottom-right",onClose:w,closeOnClickOutside:!0,immediate:!0,hideArrow:!0,className:n};return a.a.createElement(r.Fragment,null,a.a.createElement(c,{ref:x,className:t,iconSize:S,hideLabel:b,isPrimaryButtonDisabled:p},i?a.a.createElement(o.Button,{type:j.type,disabled:j.isDisabled,size:m||"small",tooltip:j.tooltip,className:j.className,onClick:j.onClick},j.text):a.a.createElement(s.Button,j),a.a.createElement("div",{className:"controlled-combo-button__separator"}),a.a.createElement(s.Button,O)),a.a.createElement(l.Tooltip,R,a.a.createElement(l.TooltipBody,null,T&&T())))}},"./version-control/common/ForkButton/index.js":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return x}));var r,a=n("../../node_modules/react/index.js"),i=n.n(a),o=n("./node_modules/classnames/index.js"),s=n.n(o),l=n("./node_modules/prop-types/index.js"),c=n.n(l),u=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),d=n("../../node_modules/@postman/aether/esmLib/index.js"),h=n("./node_modules/@postman/react-click-outside/dist/index.js"),p=n.n(h),m=n("./node_modules/lodash/lodash.js"),f=n.n(m),g=n("./js/stores/SyncStatusStore.js"),b=n("./js/stores/CurrentUserStore.js"),y=n("./js/stores/ActiveWorkspaceStore.js"),v=n("./js/stores/StoreManager.js"),T=n("./js/modules/services/RemoteSyncRequestService.js"),A=n("./runtime-repl/collection/_api/CollectionInterface.js"),E=n("./js/services/NavigationService.js"),S=n("./version-control/constants.js"),C=n("./runtime-repl/environment/_api/EnvironmentInterface.js"),k=n("./version-control/utils/number.ts"),I=n("./js/utils/PluralizeHelper.js");function w(){return w=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},w.apply(this,arguments)}let x=Object(u.observer)(r=p()(r=class extends a.Component{constructor(e){super(e),this.state={count:0,countLoading:!0,countError:!1},this.currentUserStore=Object(v.resolveStoreInstance)(b.default),this.syncStatusStore=Object(v.resolveStoreInstance)(g.default),this.fetchForkCount=this.fetchForkCount.bind(this),this.handleFork=this.handleFork.bind(this),this.handleCountClick=this.handleCountClick.bind(this),this.unsubscribeSubscription=pm.eventBus.channel("model-events").subscribe((e=>{if("createOnSync"===e.name&&S.FORK_MODELS.includes(e.namespace)){const t=e.namespace;f.a.get(e,["data",t,"id"])===this.props.modelId&&this.setState((e=>w({},e,{count:e.count+1})))}}))}componentDidMount(){this.fetchForkCount()}componentDidUpdate(e){this.props.modelId!==e.modelId&&this.fetchForkCount()}componentWillUnmount(){"function"==typeof this.unsubscribeSubscription&&this.unsubscribeSubscription()}fetchForkCount(){this.props.modelId&&(this.setState({countLoading:!0,countError:null}),this.syncStatusStore.onSyncAvailable({timeout:5e3}).then((()=>T.default.request(`/${this.props.model}/${this.props.modelId}/fork-count`))).then((e=>this.setState({count:e.body.data.count}))).catch((e=>(pm.logger.error("Error fetching fork count",e),this.setState({countError:e||new Error("Something went wrong.")})))).finally((()=>this.setState({countLoading:!1}))))}handleFork(...e){if("function"!=typeof this.props.onFork)switch(this.props.model){case"collection":Object(A.collectionActions)(this.props.modelId,"fork",null,{origin:this.props.origin});break;case"environment":Object(C.forkEnvironment)(this.props.modelId,{origin:this.props.origin});break;default:return}else this.props.onFork(...e)}handleCountClick(){const e=this.props.workspaceId||Object(v.resolveStoreInstance)(y.default).id;let t=S.ENTITY_ROUTE_PARAMS[this.props.model];E.default.transitionTo(`build.${this.props.model}`,{wid:e,[t]:this.props.modelId},{ctx:"forks"})}getTooltipMessage(){return this.props.disabled?this.props.disabledTooltip:this.props.hideLabel?"Fork":void 0}getCountButtonTooltip(){return this.isOffline?"Get online to view existing forks.":this.state.countError?this.state.countError:`${this.state.count} ${I.default.pluralize({count:this.state.count,plural:"forks",singular:"fork"})}`}get isOffline(){return!Object(v.resolveStoreInstance)(g.default).isSocketConnected}render(){const e=!this.state.countLoading&&!this.state.countError,t=!Object(v.resolveStoreInstance)(g.default).isSocketConnected;return i.a.createElement(a.Fragment,null,i.a.createElement(d.CounterButton,{type:"primary",className:s()("fork-button__action",{"has-label":!this.props.hideLabel}),text:!this.props.hideLabel&&"Fork",onClick:this.handleFork,count:Object(k.default)(this.state.count),isDisabled:this.props.disabled,tooltip:this.getTooltipMessage(),showIndicator:this.props.showIndicator,icon:"icon-action-fork-stroke",secondaryButton:i.a.createElement(d.Button,{className:"fork-button__count "+(e?"visible":""),isDisabled:t,ref:e=>this.forkCountRef=e,onClick:this.handleCountClick,tooltip:this.getCountButtonTooltip()})}))}})||r)||r;x.propTypes={modelId:c.a.string.isRequired,origin:c.a.string.isRequired,model:c.a.string.isRequired,onFork:c.a.func,hideLabel:c.a.bool,showIndicator:c.a.bool},x.defaultProps={hideLabel:!1,showIndicator:!1}},"./version-control/common/UserListItem/index.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return p}));var r=n("../../node_modules/react/index.js"),a=n.n(r),i=n("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),o=n("./node_modules/classnames/index.js"),s=n.n(o),l=n("./js/components/base/Avatar.js"),c=n("./version-control/common/CustomTooltip/index.js"),u=n("./js/models/services/DashboardService.js"),d=n("./js/services/NavigationService.js");const h=i.default.button.attrs((()=>({role:"listitem"})))`
  all: unset;
  padding: ${({theme:e})=>e["spacing-s"]}
    ${({theme:e})=>e["spacing-s"]};
  display: flex;
  width: 100%;
  box-sizing: border-box;
  cursor: pointer;
  align-items: center;

  .user-list-item__tooltip {
    display: flex;
  }

  .username {
    font-size: ${({theme:e})=>e["text-size-m"]};
    font-weight: ${({theme:e})=>e["text-weight-regular"]};
    line-height: ${({theme:e})=>e["line-height-m"]};
    color: ${({theme:e})=>e["content-color-primary"]};
  }

  &:hover .link {
    color: ${({theme:e})=>e["content-color-info"]};
  }

  .link:hover {
    text-decoration: underline;
  }
`;function p(t){const n=e.get(t,"user.name")||e.get(t,"user.username"),r=e.get(t,"privateWatchersCount",0)>1,i=()=>e.get(t,"user.isAccessible")||e.get(t,"user.isPublic")||t.isCurrentUser;return a.a.createElement(h,{onClick:()=>i()&&(()=>{if(e.get(t,"user.profileUrl"))return d.default.openURL(t.user.profileUrl);e.get(t,"user.id")&&Object(u.openTeamUserProfile)(t.user.id)})()},a.a.createElement(l.default,{type:"user",customPic:e.get(t,"user.profilePicUrl",""),size:"small",userId:e.get(t,"user.id",0)}),a.a.createElement(c.CustomTooltip,{align:"right",body:i()?"":r?"These users' profiles are not public":"This user's profile is not public",className:"user-list-item__tooltip",tooltipClassName:"user-list-item__tooltip-body"},a.a.createElement("span",{className:s()("username",{link:i()}),title:i()&&n},n,t.isCurrentUser&&" (You)")))}}.call(this,n("./node_modules/lodash/lodash.js"))},"./version-control/components.js":function(e,t,n){"use strict";n.r(t);var r=n("./version-control/common/ForkButton/index.js");n.d(t,"ForkButton",(function(){return r.default}))},"./version-control/services/VersionControlCollectionActions.js":function(e,t,n){"use strict";n.r(t),n.d(t,"getDisabledText",(function(){return s})),n.d(t,"handlePullChanges",(function(){return l}));var r=n("./js/services/NavigationService.js"),a=n("./js/modules/services/AnalyticsService.js"),i=n("./js/stores/get-store.js"),o=n("./runtime-repl/collection/CollectionActionsConstants.js");function s(e,t){const n="You do not have permissions to perform this action.",r="This collection is not a fork.",a="You can perform this action once you're back online.",s=!Object(i.getStore)("SyncStatusStore").isSocketConnected;if(!Object(i.getStore)("CurrentUserStore").isLoggedIn)return"You can perform this action once you're signed in.";switch(e){case o.ACTION_TYPE_PULL_CHANGES:return s?a:t.userCanPullChanges?t.isFork?t.isOutOfSync?n:"No changes to pull":r:n;case o.ACTION_TYPE_FORK:return s?a:n;case o.ACTION_TYPE_MERGE:case o.ACTION_TYPE_PULL_REQUEST:return s?a:t.isFork?n:r;default:return n}}function l(e,t,n,o={}){const s=!Object(i.getStore)("SyncStatusStore").isSocketConnected,l=Object(i.getStore)("ForkedCollectionStore").find(e)||{};s?pm.toasts.error("You'll be able to pull changes once you're online.",{title:"You are offline"}):(a.default.addEventV2({category:"collection",action:"initiate_pull_changes",label:"workspace_browse_view"}),r.default.transitionTo("build.merge",{toId:l.id,entityType:"collection"},{"pull-changes":!0,workflow:"sync",source:l.baseCollectionId}))}},"./version-control/services/VersionControlNetworkService.js":function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"isCollectionForkInSync",(function(){return a})),n.d(t,"isEnvironmentForkOutOfSync",(function(){return i}));var r=n("./js/modules/services/RemoteSyncRequestService.js");function a(t){return r.default.request(`/collection/fork/${t}/parent-sync-info`,{method:"get"}).then((({body:t})=>({userCanPullChanges:!0,isFork:!0,isOutOfSync:e.get(t,"data.outOfSync",!1)}))).catch((e=>e.error?{userCanPullChanges:"forbiddenError"!==e.error.name,isFork:"notForkError"!==e.error.name,isOutOfSync:!1}:Promise.reject(e)))}function i(t){return r.default.request("/ws/proxy",{method:"post",data:{service:"vcs",method:"get",path:`/v1/diverged/environment/${t}?divergence-type=fork`}}).then((({body:t})=>({isOutOfSync:e.get(t,"data.diverged",!1)}))).catch((e=>e.error?{isOutOfSync:!1}:Promise.reject(e)))}}.call(this,n("./node_modules/lodash/lodash.js"))}}]);
//# sourceMappingURL=CollectionWorkbench-e57aae3ac20b6566a2cd.min.js.map